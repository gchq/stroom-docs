{
  "name" : "bitmap-lookup",
  "aliases" : [ ],
  "commonCategory" : [ "Pipeline" ],
  "helpAnchor" : "",
  "commonSubCategories" : [ ],
  "commonDescription" : "The bitmap-lookup() function looks up a bitmap key from reference or context data a value (which can be an XML node set) for each set bit position and adds it to the resultant XML.\n\nIf the look up fails no result will be returned.\n\nThe key is a bitmap expressed as either a decimal integer or a hexidecimal value, e.g. `14`/`0xE` is `1110` as a binary bitmap.\nFor each bit position that is set, (i.e. has a binary value of `1`) a lookup will be performed using that bit position as the key.\nIn this example, positions `1`, `2` & `3` are set so a lookup would be performed for these bit positions.\nThe result of each lookup for the bitmap are concatenated together in bit position order, separated by a space.\n\nIf `ignoreWarnings` is true then any lookup failures will be ignored and it will return the value(s) for the bit positions it was able to lookup.\n\nThis function can be useful when you have a set of values that can be represented as a bitmap and you need them to be converted back to individual values.\nFor example if you have a set of additive account permissions (e.g Admin, ManageUsers, PerformExport, etc.), each of which is associated with a bit position, then a user's permissions could be defined as a single decimal/hex bitmap value.\nThus a bitmap lookup with this value would return all the permissions held by the user.\n\nFor example the reference data store may contain:\n\n| Key (Bit position) | Value          |\n|--------------------|----------------|\n| 0                  | Administrator  |\n| 1                  | Manage_Users   |\n| 2                  | Perform_Export |\n| 3                  | View_Data      |\n| 4                  | Manage_Jobs    |\n| 5                  | Delete_Data    |\n| 6                  | Manage_Volumes |\n\nThe following are example lookups using the above reference data:\n\n| Lookup Key (decimal) | Lookup Key (Hex) | Bitmap    | Result                                  |\n|----------------------|------------------|-----------|-----------------------------------------|\n| `0`                  | `0x0`            | `0000000` | -                                       |\n| `1`                  | `0x1`            | `0000001` | `Administrator`                         |\n| `74`                 | `0x4A`           | `1001010` | `Manage_Users View_Data Manage_Volumes` |\n| `2`                  | `0x2`            | `0000010` | `Manage_Users`                          |\n| `96`                 | `0x60`           | `1100000` | `Delete_Data Manage_Volumes`            |\n",
  "commonReturnType" : [ "Sequence" ],
  "commonReturnDescription" : "The hash of the value",
  "signatures" : [ {
    "subCategories" : [ ],
    "returnDescription" : "",
    "returnType" : [ ],
    "args" : [ {
      "minVarargsCount" : 0,
      "allowedValues" : [ ],
      "name" : "map",
      "defaultValue" : "",
      "isVarargs" : false,
      "argType" : "String",
      "description" : "The name of the map to perform the lookup in.",
      "isOptional" : false
    }, {
      "minVarargsCount" : 0,
      "allowedValues" : [ ],
      "name" : "key",
      "defaultValue" : "",
      "isVarargs" : false,
      "argType" : "String",
      "description" : "The key to lookup in the named map.",
      "isOptional" : false
    }, {
      "minVarargsCount" : 0,
      "allowedValues" : [ ],
      "name" : "time",
      "defaultValue" : "",
      "isVarargs" : false,
      "argType" : "String",
      "description" : "Determines which set of reference data was effective at the requested time.\nIf no reference data exists with an effective time before the requested time then the lookup will fail.\nTime is in the format `yyyy-MM-dd'T'HH:mm:ss.SSSXX`, e.g. `2010-01-01T00:00:00.000Z`.",
      "isOptional" : true
    }, {
      "minVarargsCount" : 0,
      "allowedValues" : [ ],
      "name" : "ignoreWarnings",
      "defaultValue" : "",
      "isVarargs" : false,
      "argType" : "Boolean",
      "description" : "If true, any lookup failures will be ignored, else they will be reported as warnings.",
      "isOptional" : true
    }, {
      "minVarargsCount" : 0,
      "allowedValues" : [ ],
      "name" : "trace",
      "defaultValue" : "",
      "isVarargs" : false,
      "argType" : "Boolean",
      "description" : "If true, additional trace information is output as INFO messages.",
      "isOptional" : true
    } ],
    "description" : "",
    "category" : [ ]
  } ]
}