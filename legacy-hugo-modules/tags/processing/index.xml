<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Stroom â€“ processing</title>
    <link>/tags/processing/</link>
    <description>Recent content in processing on Stroom</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 27 Jul 2021 00:00:00 +0000</lastBuildDate>
    
	  <atom:link href="/tags/processing/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Pipeline Processing</title>
      <link>/docs/quick-start-guide/process/</link>
      <pubDate>Fri, 09 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>/docs/quick-start-guide/process/</guid>
      <description>
        
        
        &lt;h2 id=&#34;create-a-pipeline&#34;&gt;Create a pipeline&lt;/h2&gt;
&lt;p&gt;Pipelines control how data is processed in Stroom.
Typically you&amp;rsquo;re going to want to do a lot of the same stuff for every pipeline, i.e. similar transformations, indexing, writing out data.
You can actually create a template pipeline and inherit from it, tweaking what you need to for this or that feed.
We&amp;rsquo;re not doing that now because we want to show how to create one from scratch.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/quick-start-guide/process/create-pipeline.png&#34; href=&#34;../../images/quick-start-guide/process/create-pipeline.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/quick-start-guide/process/create-pipeline.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/quick-start-guide/process/create-pipeline.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Creating a pipeline&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;Create a pipeline by right-clicking our &lt;code&gt;Stroom 101&lt;/code&gt; folder. Call it something like &lt;code&gt;CSV to XML pipeline&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Select &lt;em&gt;Structure&lt;/em&gt; from the top of the new tab. This is the most important view for the pipeline because it shows what will actually happen on the pipeline.&lt;/li&gt;
&lt;li&gt;Check &lt;em&gt;Advanced Mode&lt;/em&gt; so that we can actually edit things.&lt;/li&gt;
&lt;/ol&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/quick-start-guide/process/configure-pipeline-advanced.png&#34; href=&#34;../../images/quick-start-guide/process/configure-pipeline-advanced.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/quick-start-guide/process/configure-pipeline-advanced.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/quick-start-guide/process/configure-pipeline-advanced.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Turn on &#39;Advanced Mode&#39;&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;We already have a &lt;code&gt;Source&lt;/code&gt; element. Unlike most other pipeline elements this isn&amp;rsquo;t something we need to configure. It&amp;rsquo;s just there to show the starting point. Data gets into the pipeline via other means - we&amp;rsquo;ll describe this in detail later.&lt;/p&gt;
&lt;h3 id=&#34;add-a-data-splitter&#34;&gt;Add a data splitter&lt;/h3&gt;
&lt;p&gt;Data splitters are powerful, and there is &lt;a href=&#34;../../docs/user-guide/data-splitter/&#34;&gt;a lot we can say&lt;/a&gt; about them. Here we&amp;rsquo;re just going to make a basic one.&lt;/p&gt;
&lt;h4 id=&#34;create-a-csv-splitter&#34;&gt;Create a CSV splitter&lt;/h4&gt;
&lt;p&gt;We have CSV in the following form:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;id,guid,from_ip,to_ip,application
1,10990cde-1084-4006-aaf3-7fe52b62ce06,159.161.108.105,217.151.32.69,Tres-Zap
2,633aa1a8-04ff-442d-ad9a-03ce9166a63a,210.14.34.58,133.136.48.23,Sub-Ex
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To process this we need to know if there&amp;rsquo;s a header row, and what the delimiters are. This is a job for a &lt;em&gt;Data Splitter&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;The splitter is actually a type of &lt;em&gt;Text Converter&lt;/em&gt;, so lets create one of those:&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/quick-start-guide/process/create-textConverter.png&#34; href=&#34;../../images/quick-start-guide/process/create-textConverter.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/quick-start-guide/process/create-textConverter.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/quick-start-guide/process/create-textConverter.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Create the CSV splitter&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Call it something like &lt;code&gt;CSV splitter&lt;/code&gt;. In the new tab you need to tell the &lt;em&gt;Text Converter&lt;/em&gt; that it&amp;rsquo;ll be a &lt;em&gt;Data Splitter&lt;/em&gt;:&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/quick-start-guide/process/configure-csvSplitter-type.png&#34; href=&#34;../../images/quick-start-guide/process/configure-csvSplitter-type.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/quick-start-guide/process/configure-csvSplitter-type.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/quick-start-guide/process/configure-csvSplitter-type.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Configuring the data splitter&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Now go to the &lt;em&gt;Conversion&lt;/em&gt; tab. What you need to put in here is specific to the built-in &lt;em&gt;Data Splitter&lt;/em&gt; functionality, so I&amp;rsquo;m just going to tell you what you&amp;rsquo;re going to need:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;?xml version=&amp;quot;1.1&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;dataSplitter xmlns=&amp;quot;data-splitter:3&amp;quot; xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot; xsi:schemaLocation=&amp;quot;data-splitter:3 file://data-splitter-v3.0.1.xsd&amp;quot; version=&amp;quot;3.0&amp;quot;&amp;gt;
  &amp;lt;!-- The first line contains the field names --&amp;gt;
  &amp;lt;split delimiter=&amp;quot;\n&amp;quot; maxMatch=&amp;quot;1&amp;quot;&amp;gt;
    &amp;lt;group&amp;gt;
      &amp;lt;split delimiter=&amp;quot;,&amp;quot; containerStart=&amp;quot;&amp;amp;#34;&amp;quot; containerEnd=&amp;quot;&amp;amp;#34;&amp;quot;&amp;gt;
        &amp;lt;var id=&amp;quot;heading&amp;quot; /&amp;gt;
      &amp;lt;/split&amp;gt;
    &amp;lt;/group&amp;gt;
  &amp;lt;/split&amp;gt;

  &amp;lt;!-- All subsequent lines are records --&amp;gt;
  &amp;lt;split delimiter=&amp;quot;\n&amp;quot;&amp;gt;
    &amp;lt;group&amp;gt;
      &amp;lt;split delimiter=&amp;quot;,&amp;quot; containerStart=&amp;quot;&amp;amp;#34;&amp;quot; containerEnd=&amp;quot;&amp;amp;#34;&amp;quot;&amp;gt;
        &amp;lt;data name=&amp;quot;$heading$1&amp;quot; value=&amp;quot;$1&amp;quot; /&amp;gt;
      &amp;lt;/split&amp;gt;
    &amp;lt;/group&amp;gt;
  &amp;lt;/split&amp;gt;
&amp;lt;/dataSplitter&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can see that it uses the &lt;code&gt;data-splitter-v3.0.1.xsd&lt;/code&gt; that we imported earlier. Save it by clicking the save icon 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/save.svg&#34; 
  title=&#34;Save&#34; 
  alt=&#34;save.svg&#34;&gt;
.&lt;/p&gt;
&lt;p&gt;So we now have a configured, re-usable data splitter for CSV files that have headers. We need to add this to our pipeline as a filter, so head back to the pipeline&amp;rsquo;s Structure section and add a DSParser, as below. Call it something like &lt;code&gt;CSV splitter filter&lt;/code&gt;:







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/quick-start-guide/process/add-dsParser.png&#34; href=&#34;../../images/quick-start-guide/process/add-dsParser.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/quick-start-guide/process/add-dsParser.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/quick-start-guide/process/add-dsParser.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Adding a dsParser&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;Now we have a pipeline that looks like this:&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/quick-start-guide/process/pipeline-01.png&#34; href=&#34;../../images/quick-start-guide/process/pipeline-01.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/quick-start-guide/process/pipeline-01.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/quick-start-guide/process/pipeline-01.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Pipeline with a CSV splitter&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Click on the &lt;code&gt;CSV splitter filter&lt;/code&gt; element and the pane below will show it&amp;rsquo;s properties. We need to tell it to use our newly created &lt;code&gt;CSV splitter&lt;/code&gt;. Double click the &lt;code&gt;textConverter&lt;/code&gt; property and change &lt;code&gt;Value&lt;/code&gt; to the actual CSV splitter:&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/quick-start-guide/process/configuring-dsSplitter.png&#34; href=&#34;../../images/quick-start-guide/process/configuring-dsSplitter.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/quick-start-guide/process/configuring-dsSplitter.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/quick-start-guide/process/configuring-dsSplitter.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Configuring the CSV splitter&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;h4 id=&#34;test-the-csv-splitter&#34;&gt;Test the csv splitter&lt;/h4&gt;
&lt;p&gt;So now we have CSV data in Stroom and a pipeline that is configured to process CSV data. We&amp;rsquo;ve done a fair few things so far and are we sure the pipeline is correctly configured? We can do some debugging and find out.&lt;/p&gt;
&lt;p&gt;In Stroom you can step through you records and see what the output is at each stage. It&amp;rsquo;s easy to start doing this. The first thing to do is to open your &lt;code&gt;CSV_FEED&lt;/code&gt; feed, then click the big blue &lt;em&gt;stepping&lt;/em&gt; button at the bottom right:&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/quick-start-guide/process/run-debug.png&#34; href=&#34;../../images/quick-start-guide/process/run-debug.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/quick-start-guide/process/run-debug.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/quick-start-guide/process/run-debug.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Starting pipeline stepping&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;You&amp;rsquo;ll be asked to select a pipeline:&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/quick-start-guide/process/configure-debug.png&#34; href=&#34;../../images/quick-start-guide/process/configure-debug.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/quick-start-guide/process/configure-debug.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/quick-start-guide/process/configure-debug.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Selecting a pipeline to step through&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Now you get a view that&amp;rsquo;s similar to your feed view, except it also shows the pipeline:&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/quick-start-guide/process/debug-source.png&#34; href=&#34;../../images/quick-start-guide/process/debug-source.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/quick-start-guide/process/debug-source.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/quick-start-guide/process/debug-source.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Debugging - source data&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;It also has stepping controls. Click the green step forward icon 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/step-forward.svg&#34; 
  title=&#34;Step Forward&#34; 
  alt=&#34;step-forward.svg&#34;&gt;
. You should see something like this:&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/quick-start-guide/process/stepping-01.png&#34; href=&#34;../../images/quick-start-guide/process/stepping-01.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/quick-start-guide/process/stepping-01.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/quick-start-guide/process/stepping-01.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stepping through the CSV data&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Great! If you don&amp;rsquo;t see this then there&amp;rsquo;s something wrong. Click on &lt;code&gt;CSV splitter filter&lt;/code&gt;. You&amp;rsquo;ll see the conversion code and hopefully some errors. Some issues might be: did you remember to import the data splitter schema into Stroom? Did you remember to confgure the &lt;em&gt;Text Converter&lt;/em&gt; to be a &lt;em&gt;Data Splitter&lt;/em&gt;?&lt;/p&gt;
&lt;p&gt;If everything went fine then click the step forward button a few more times and you&amp;rsquo;ll see the yellow selection move down as you process each row.&lt;/p&gt;
&lt;p&gt;What we actually want to see is the output from the &lt;em&gt;Text Converter&lt;/em&gt;, so click on &lt;code&gt;CSV splitter filter&lt;/code&gt;. You&amp;rsquo;ll see the conversion code we entered earlier and below two panes, one containing the CSV and one containing the split-up text, in XML form:&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/quick-start-guide/process/stepping-02.png&#34; href=&#34;../../images/quick-start-guide/process/stepping-02.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/quick-start-guide/process/stepping-02.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/quick-start-guide/process/stepping-02.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;The output from a working data splitter&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;So here we have some XML in a basic format we call the &lt;em&gt;records&lt;/em&gt; format. You can see the schema for &lt;em&gt;records&lt;/em&gt; in the &lt;code&gt;XML schemas&lt;/code&gt; folder.&lt;/p&gt;
&lt;h3 id=&#34;add-xslt-to-transform-records-format-xml-into-something-else&#34;&gt;Add XSLT to transform records format XML into something else&lt;/h3&gt;
&lt;h4 id=&#34;create-the-xslt-filter&#34;&gt;Create the XSLT filter&lt;/h4&gt;
&lt;p&gt;This process is very similar to creating the &lt;code&gt;CSV splitter&lt;/code&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create the &lt;a href=&#34;../../docs/user-guide/pipelines/xslt/&#34;&gt;XSLT&lt;/a&gt; filter&lt;/li&gt;
&lt;li&gt;Add it to the pipeline&lt;/li&gt;
&lt;li&gt;Step through to make sure it&amp;rsquo;s doing what we expect&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Create the XSLT filter, calling it something like &lt;code&gt;XSLT&lt;/code&gt;:&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/quick-start-guide/process/create-xslt.png&#34; href=&#34;../../images/quick-start-guide/process/create-xslt.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/quick-start-guide/process/create-xslt.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/quick-start-guide/process/create-xslt.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Create the XSLT filter&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;On the new tab click on &lt;code&gt;XSLT&lt;/code&gt;. This is another big text field but this one accepts XSLT. This one will be very basic and just takes the split up data and puts it into fields. The XSLT for this is below but if you&amp;rsquo;d like to tinker then go ahead.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;?xml version=&amp;quot;1.1&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; ?&amp;gt;
&amp;lt;xsl:stylesheet xpath-default-namespace=&amp;quot;records:2&amp;quot; xmlns:stroom=&amp;quot;stroom&amp;quot; xmlns:xsl=&amp;quot;http://www.w3.org/1999/XSL/Transform&amp;quot; xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot; version=&amp;quot;2.0&amp;quot;&amp;gt;
  &amp;lt;xsl:template match=&amp;quot;records&amp;quot;&amp;gt;
    &amp;lt;Events&amp;gt;
      &amp;lt;xsl:apply-templates /&amp;gt;
    &amp;lt;/Events&amp;gt;
  &amp;lt;/xsl:template&amp;gt;
  &amp;lt;xsl:template match=&amp;quot;record&amp;quot;&amp;gt;
    &amp;lt;xsl:variable name=&amp;quot;id&amp;quot; select=&amp;quot;data[@name=&#39;id&#39;]/@value&amp;quot; /&amp;gt;
    &amp;lt;xsl:variable name=&amp;quot;guid&amp;quot; select=&amp;quot;data[@name=&#39;guid&#39;]/@value&amp;quot; /&amp;gt;
    &amp;lt;xsl:variable name=&amp;quot;from_ip&amp;quot; select=&amp;quot;data[@name=&#39;from_ip&#39;]/@value&amp;quot; /&amp;gt;
    &amp;lt;xsl:variable name=&amp;quot;to_ip&amp;quot; select=&amp;quot;data[@name=&#39;to_ip&#39;]/@value&amp;quot; /&amp;gt;
    &amp;lt;xsl:variable name=&amp;quot;application&amp;quot; select=&amp;quot;data[@name=&#39;application&#39;]/@value&amp;quot; /&amp;gt;

    &amp;lt;Event&amp;gt;
      &amp;lt;Id&amp;gt;&amp;lt;xsl:value-of select=&amp;quot;$id&amp;quot; /&amp;gt;&amp;lt;/Id&amp;gt;
      &amp;lt;Guid&amp;gt;&amp;lt;xsl:value-of select=&amp;quot;$guid&amp;quot; /&amp;gt;&amp;lt;/Guid&amp;gt;
      &amp;lt;FromIp&amp;gt;&amp;lt;xsl:value-of select=&amp;quot;$from_ip&amp;quot; /&amp;gt;&amp;lt;/FromIp&amp;gt;
      &amp;lt;ToIp&amp;gt;&amp;lt;xsl:value-of select=&amp;quot;$to_ip&amp;quot; /&amp;gt;&amp;lt;/ToIp&amp;gt;
      &amp;lt;Application&amp;gt;&amp;lt;xsl:value-of select=&amp;quot;$application&amp;quot; /&amp;gt;&amp;lt;/Application&amp;gt;
    &amp;lt;/Event&amp;gt;
  &amp;lt;/xsl:template&amp;gt;
&amp;lt;/xsl:stylesheet&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Make sure you save it.&lt;/p&gt;
&lt;p&gt;Go back to the Structure section of the pipeline and add an &lt;em&gt;XSLTFilter&lt;/em&gt; element. Call it something like &lt;code&gt;XSLT filter&lt;/code&gt;.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/quick-start-guide/process/add-xsltFilter.png&#34; href=&#34;../../images/quick-start-guide/process/add-xsltFilter.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/quick-start-guide/process/add-xsltFilter.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/quick-start-guide/process/add-xsltFilter.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Add the XSLT filter&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Select the &lt;code&gt;XSLT filter&lt;/code&gt; and configure it to use the actual XSLT you just created by double-clicking &lt;code&gt;xslt&lt;/code&gt; in the properties:&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/quick-start-guide/process/configure-xslt.png&#34; href=&#34;../../images/quick-start-guide/process/configure-xslt.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/quick-start-guide/process/configure-xslt.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/quick-start-guide/process/configure-xslt.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Configuring the XSLT filter&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;In the dialog make sure the value is the &lt;code&gt;XSLT&lt;/code&gt; filter. Save the pipeline.&lt;/p&gt;
&lt;h4 id=&#34;test-the-xslt-filter&#34;&gt;Test the XSLT filter&lt;/h4&gt;
&lt;p&gt;We&amp;rsquo;re going to test this in the same way we tested the CSV splitter, by clicking the big blue button on the feed. Click the step forward button 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/step-forward.svg&#34; 
  title=&#34;Step Forward&#34; 
  alt=&#34;step-forward.svg&#34;&gt;
 a few times to make sure it&amp;rsquo;s working then click on the XSLT element. This time you should see the XSLT filter there too, as well as the basic XML being transformed into more useful XML:&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/quick-start-guide/process/stepping-03.png&#34; href=&#34;../../images/quick-start-guide/process/stepping-03.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/quick-start-guide/process/stepping-03.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/quick-start-guide/process/stepping-03.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Debugging the XSLT filter&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Fantastic! Data converted! Well done if you&amp;rsquo;ve got this far. Really, there are lots of steps and things that could go wrong and you&amp;rsquo;ve persevered. There&amp;rsquo;s a few more things to get this pipeline ready for doing this &lt;a href=&#34;../../docs/user-guide/jobs/&#34;&gt;task&lt;/a&gt; for real. We need to get this data to a destination.&lt;/p&gt;
&lt;h3 id=&#34;outputting-the-transformed-data&#34;&gt;Outputting the transformed data&lt;/h3&gt;
&lt;h4 id=&#34;create-the-xml-writer&#34;&gt;Create the XML writer&lt;/h4&gt;
&lt;p&gt;What&amp;rsquo;s an XML Writer and why do you need one? The XSLT filter doesn&amp;rsquo;t actually write XML but instead just passes XML events from one filter to another. In order to write XML out you need an XML writer. You don&amp;rsquo;t need to create one outside the pipeline (in the way you did with the &lt;code&gt;CSV splitter&lt;/code&gt; and the &lt;code&gt;XSLT&lt;/code&gt; filter). An XML writer is just added to the pipeline like this:&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/quick-start-guide/process/add-xmlWriter.png&#34; href=&#34;../../images/quick-start-guide/process/add-xmlWriter.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/quick-start-guide/process/add-xmlWriter.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/quick-start-guide/process/add-xmlWriter.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Addnig an XML Writer&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;That&amp;rsquo;s it, no other configuration necessary.&lt;/p&gt;
&lt;h4 id=&#34;create-the-destination&#34;&gt;Create the destination&lt;/h4&gt;
&lt;p&gt;We need to do something with the serialised XML. We&amp;rsquo;ll write it to a stream. To do this we create a stream appender:&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/quick-start-guide/process/add-streamAppender.png&#34; href=&#34;../../images/quick-start-guide/process/add-streamAppender.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/quick-start-guide/process/add-streamAppender.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/quick-start-guide/process/add-streamAppender.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Creating a stream appender&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Unlike the &lt;code&gt;Source&lt;/code&gt; element this element needs to be configured. We need to configure two things: the &lt;em&gt;streamType&lt;/em&gt; and the &lt;em&gt;destination feed&lt;/em&gt;.&lt;/p&gt;
&lt;h5 id=&#34;setting-the-feed&#34;&gt;Setting the feed&lt;/h5&gt;
&lt;p&gt;We&amp;rsquo;ll send the output to the &lt;code&gt;CSV_FEED&lt;/code&gt; - all data associated with this feed will be in the same place. To do that we edit the &lt;code&gt;feed&lt;/code&gt; property and set it to &lt;code&gt;CSV_FEED&lt;/code&gt;:&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/quick-start-guide/process/configure-streamAppender-feed.png&#34; href=&#34;../../images/quick-start-guide/process/configure-streamAppender-feed.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/quick-start-guide/process/configure-streamAppender-feed.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/quick-start-guide/process/configure-streamAppender-feed.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Change the feed property&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;We also need to edit the &lt;code&gt;streamType&lt;/code&gt; property:We set the streamType to Events:&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/quick-start-guide/process/configure-streamAppender-streamType.png&#34; href=&#34;../../images/quick-start-guide/process/configure-streamAppender-streamType.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/quick-start-guide/process/configure-streamAppender-streamType.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/quick-start-guide/process/configure-streamAppender-streamType.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Change the streamType property&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;








  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/quick-start-guide/process/configure-destination-streamType.png&#34; href=&#34;../../images/quick-start-guide/process/configure-destination-streamType.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/quick-start-guide/process/configure-destination-streamType.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/quick-start-guide/process/configure-destination-streamType.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Setting the streamType&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;That&amp;rsquo;s it! Our pipeline is configured!&lt;/p&gt;
&lt;h4 id=&#34;test-the-destination&#34;&gt;Test the destination&lt;/h4&gt;
&lt;p&gt;We can test the XML writer and the streamAppender using the same stepping feature. Make sure you&amp;rsquo;ve saved the pipeline and set a &lt;strong&gt;new&lt;/strong&gt; stepping session running. If you click on the &lt;code&gt;stream appender&lt;/code&gt; you&amp;rsquo;ll see something like this:&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/quick-start-guide/process/stepping-05.png&#34; href=&#34;../../images/quick-start-guide/process/stepping-05.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/quick-start-guide/process/stepping-05.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/quick-start-guide/process/stepping-05.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;The final output from the pipeline&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;h2 id=&#34;set-the-pipeline-running&#34;&gt;Set the pipeline running&lt;/h2&gt;
&lt;p&gt;Obviously you don&amp;rsquo;t want to step through your data one by one. This all needs automation, and this is what Processors are for. The processor works in the background to take any unprocessed data from a feed and put it through a pipeline. So far everything on our EXAMPLE_IN feed is unprocessed.&lt;/p&gt;
&lt;h3 id=&#34;create-a-processor&#34;&gt;Create a processor&lt;/h3&gt;
&lt;p&gt;Processors are created from the &lt;em&gt;Processors&lt;/em&gt; section of the pipeline:&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/quick-start-guide/process/go-processors.png&#34; href=&#34;../../images/quick-start-guide/process/go-processors.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/quick-start-guide/process/go-processors.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/quick-start-guide/process/go-processors.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;The processors section of the pipeline&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Click the add button 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/add.svg&#34; 
  title=&#34;Add&#34; 
  alt=&#34;add.svg&#34;&gt;
 and configure the huge dialog. You only need to set the incoming feed and the stream types:&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/quick-start-guide/process/configure-processor.png&#34; href=&#34;../../images/quick-start-guide/process/configure-processor.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/quick-start-guide/process/configure-processor.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/quick-start-guide/process/configure-processor.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Configure the new processor&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Now you&amp;rsquo;ll see a very wide table looking something like this:&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/quick-start-guide/process/show-processors.png&#34; href=&#34;../../images/quick-start-guide/process/show-processors.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/quick-start-guide/process/show-processors.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/quick-start-guide/process/show-processors.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;The new processor&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;This shows two things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The processor for the pipeline&lt;/li&gt;
&lt;li&gt;The filter that determines what data is passed to the processor&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you scroll all the way over to the right you&amp;rsquo;ll see the &lt;em&gt;Enabled&lt;/em&gt; checkbox:&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/quick-start-guide/process/show-processors-enabled.png&#34; href=&#34;../../images/quick-start-guide/process/show-processors-enabled.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/quick-start-guide/process/show-processors-enabled.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/quick-start-guide/process/show-processors-enabled.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;The enabled checkbox&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Check &lt;em&gt;enabled&lt;/em&gt; for the processor and the filter you&amp;rsquo;ve just created. This is it, everything we&amp;rsquo;ve done is about to start working on its own, just like it would in a real configuration.&lt;/p&gt;
&lt;p&gt;If you keep refreshing this table it will show you the processing status which should change after a few seconds to show that the data you have uploaded is being or has been processed. Once this has happened you should be able to open the destination feed and see the output data (or errors if there were any).&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/quick-start-guide/process/show-output.png&#34; href=&#34;../../images/quick-start-guide/process/show-output.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/quick-start-guide/process/show-output.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/quick-start-guide/process/show-output.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;The output of the pipeline&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;You can see that there are the &lt;code&gt;Raw Events&lt;/code&gt; and the processed &lt;code&gt;Events&lt;/code&gt;. If you click on the &lt;code&gt;Events&lt;/code&gt; then you can see all the XML that we&amp;rsquo;ve produced.&lt;/p&gt;
&lt;h4 id=&#34;troubleshooting&#34;&gt;Troubleshooting&lt;/h4&gt;
&lt;p&gt;If nothing happens you might need to enable stream processing. This was explained &lt;a href=&#34;../../docs/quick-start-guide/running/#enable-processing-of-data-streams&#34;&gt;earlier&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Now you&amp;rsquo;ve processed your data you can go ahead and &lt;a href=&#34;../../docs/quick-start-guide/indexing/&#34;&gt;index&lt;/a&gt; it.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Pipelines</title>
      <link>/docs/user-guide/pipelines/</link>
      <pubDate>Tue, 27 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>/docs/user-guide/pipelines/</guid>
      <description>
        
        
        &lt;h1 id=&#34;pipelines&#34;&gt;Pipelines&lt;/h1&gt;
&lt;p&gt;Every feed has an associated translation. The translation is used to convert the input text or XML into event logging XML format.&lt;/p&gt;
&lt;p&gt;XSLT is used to translate from XML to event logging XML.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Apache HTTPD Event Feed</title>
      <link>/docs/howtos/eventfeeds/createapachehttpdeventfeed/</link>
      <pubDate>Fri, 09 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>/docs/howtos/eventfeeds/createapachehttpdeventfeed/</guid>
      <description>
        
        
        &lt;!-- Created with Stroom v6.1-beta.16 --&gt;

&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;See Also&lt;/h4&gt;


    &lt;p&gt;&lt;a href=&#34;../../docs/howtos/general/enablingprocessorshowto/&#34;&gt;HOWTO - Enabling Processors for a Pipeline&lt;/a&gt;&lt;/p&gt;


&lt;/div&gt;


&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;The following will take you through the process of creating an Event Feed in Stroom.&lt;/p&gt;
&lt;p&gt;In this example, the logs are in a well-defined, line based, text format so we will use a Data Splitter parser to transform the logs into simple record-based XML and then a XSLT translation to normalise them into the Event schema.&lt;/p&gt;
&lt;p&gt;A separate document will describe the method of automating the storage of normalised events for this feed.
Further, we will not Decorate these events.
Again, Event Decoration is described in another document.&lt;/p&gt;
&lt;h2 id=&#34;event-log-source&#34;&gt;Event Log Source&lt;/h2&gt;
&lt;p&gt;For this example, we will use logs from an Apache HTTPD Web server.
In fact, the web server in front of Stroom v5 and earlier.&lt;/p&gt;
&lt;p&gt;To get the optimal information from the Apache HTTPD access logs, we define our log format based on an extension of the BlackBox format.
The format is described and defined below.
This is an extract from a httpd configuration file (/etc/httpd/conf/httpd.conf)&lt;/p&gt;






&lt;div class=&#34;text-file card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;&#34;&gt;

  &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
    
    &lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;
# Stroom - Black Box Auditing configuration
#
# %a - Client IP address (not hostname (%h) to ensure ip address only)
# When logging the remote host, it is important to log the client IP address, not the
# hostname. We do this with the &#39;%a&#39; directive. Even if HostnameLookups are turned on,
# using &#39;%a&#39; will only record the IP address. For the purposes of BlackBox formats,
# reversed DNS should not be trusted

# %{REMOTE_PORT}e - Client source port
# Logging the client source TCP port can provide some useful network data and can help
# one associate a single client with multiple requests.
# If two clients from the same IP address make simultaneous connections, the &#39;common log&#39;
# file format cannot distinguish between those clients. Otherwise, if the client uses
# keep-alives, then every hit made from a single TCP session will be associated by the same
# client port number.
# The port information can indicate how many connections our server is handling at once,
# which may help in tuning server TCP/OP settings. It will also identify which client ports
# are legitimate requests if the administrator is examining a possible SYN-attack against a
# server.
# Note we are using the REMOTE_PORT environment variable. Environment variables only come
# into play when mod_cgi or mod_cgid is handling the request.

# %X - Connection status (use %c for Apache 1.3)
# The connection status directive tells us detailed information about the client connection.
# It returns one of three flags:
# x if the client aborted the connection before completion,
# + if the client has indicated that it will use keep-alives (and request additional URLS),
# - if the connection will be closed after the event
# Keep-Alive is a HTTP 1.1. directive that informs a web server that a client can request multiple
# files during the same connection. This way a client doesn&#39;t need to go through the overhead
# of re-establishing a TCP connection to retrieve a new file.

# %t - time - or [%{%d/%b/%Y:%T}t.%{msec_frac}t %{%z}t] for Apache 2.4
# The %t directive records the time that the request started.
# NOTE: When deployed on an Apache 2.4, or better, environment, you should use
# strftime format in order to get microsecond resolution.

# %l - remote logname

# %u - username [in quotes]
# The remote user (from auth; This may be bogus if the return status (%s) is 401
# for non-ssl services)
# For SSL services, user names need to be delivered as DNs to deliver PKI user details
# in full. To pass through PKI certificate properties in the correct form you need to
# add the following directives to your Apache configuration:
#   SSLUserName SSL_CLIENT_S_DN
#   SSLOptions +StdEnvVars
# If you cannot, then use %{SSL_CLIENT_S_DN}x in place of %u and use blackboxSSLUser
# LogFormat nickname

# %r - first line of text sent by web client [in quotes]
# This is the first line of text send by the web client, which includes the request
# method, the full URL, and the HTTP protocol.

# %s - status code before any redirection
# This is the status code of the original request.

# %&amp;gt;s - status code after any redirection has taken place
# This is the final status code of the request, after any internal redirections may
# have taken place.

# %D - time in microseconds to handle the request
# This is the number of microseconds the server took to handle the request in microseconds

# %I - incoming bytes
# This is the bytes received, include request and headers. It cannot, by definition be zero.

# %O - outgoing bytes
# This is the size in bytes of the outgoing data, including HTTP headers. It cannot, by
# definition be zero.

# %B - outgoing content bytes
# This is the size in bytes of the outgoing data, EXCLUDING HTTP headers. Unlike %b, which
# records &#39;-&#39; for zero bytes transferred, %B will record &#39;0&#39;.

# %{Referer}i - Referrer HTTP Request Header [in quotes]
# This is typically the URL of the page that made the request. If linked from
# e-mail or direct entry this value will be empty. Note, this can be spoofed
# or turned off

# %{User-Agent}i - User agent HTTP Request Header [in quotes]
# This is the identifying information the client (browser) reports about itself.
# It can be spoofed or turned off

# %V - the server name according to the UseCannonicalName setting
# This identifies the virtual host in a multi host webservice

# %p - the canonical port of the server servicing the request

# Define a variation of the Black Box logs
#
# Note, you only need to use the &#39;blackboxSSLUser&#39; nickname if you cannot set the
# following directives for any SSL configurations
# SSLUserName SSL_CLIENT_S_DN
# SSLOptions +StdEnvVars
# You will also note the variation for no logio module. The logio module supports
# the %I and %O formatting directive
#
&amp;lt;IfModule mod_logio.c&amp;gt;
   LogFormat &amp;quot;%a/%{REMOTE_PORT}e %X %t %l \&amp;quot;../../&amp;quot;%r\&amp;quot; %s/%&amp;gt;s %D %I/%O/%B \&amp;quot;%{Referer}i\&amp;quot; \&amp;quot;%{User-Agent}i\&amp;quot; %V/%p&amp;quot; blackboxUser
   LogFormat &amp;quot;%a/%{REMOTE_PORT}e %X %t %l \&amp;quot;%{SSL_CLIENT_S_DN../../&amp;quot;%r\&amp;quot; %s/%&amp;gt;s %D %I/%O/%B \&amp;quot;%{Referer}i\&amp;quot; \&amp;quot;%{User-Agent}i\&amp;quot; %V/%p&amp;quot; blackboxSSLUser
&amp;lt;/IfModule&amp;gt;
&amp;lt;IfModule !mod_logio.c&amp;gt;
   LogFormat &amp;quot;%a/%{REMOTE_PORT}e %X %t %l \&amp;quot;../../&amp;quot;%r\&amp;quot; %s/%&amp;gt;s %D 0/0/%B \&amp;quot;%{Referer}i\&amp;quot; \&amp;quot;%{User-Agent}i\&amp;quot; %V/$p&amp;quot; blackboxUser
   LogFormat &amp;quot;%a/%{REMOTE_PORT}e %X %t %l \&amp;quot;%{SSL_CLIENT_S_DN../../&amp;quot;%r\&amp;quot; %s/%&amp;gt;s %D 0/0/%B \&amp;quot;%{Referer}i\&amp;quot; \&amp;quot;%{User-Agent}i\&amp;quot; %V/$p&amp;quot; blackboxSSLUser
&amp;lt;/IfModule&amp;gt;


&lt;/code&gt;&lt;/pre&gt;


    &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
    &lt;div class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;
      
      &lt;span class=&#34;&#34; style=&#34;font-size: smaller&#34;&gt;Apache BlackBox Auditing Configuration&lt;/span&gt;
      
      (
      &lt;a href=&#34;../../files/HOWTOs/EventFeeds/CreateApacheHTTPDEventFeed/ApacheHTTPDAuditConfig.txt&#34; class=&#34;&#34; style=&#34;font-size: smaller&#34;&gt;Download ApacheHTTPDAuditConfig.txt&lt;/a&gt;
      &lt;i class=&#34;external-link-icon fas fa-file-download fa-sm text-secondary&#34; title=&#34;External link&#34;&gt;&lt;/i&gt;
      )
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;As Stroom can use PKI for login, you can configure Stroomâ€™s Apache to make use of the blackboxSSLUser log format.
A sample set of logs in this format appear below.&lt;/p&gt;






&lt;div class=&#34;text-file card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;&#34;&gt;

  &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
    
    &lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;192.168.4.220/61801 - [18/Jan/2020:12:39:04 -0800] - &amp;quot;/C=USA/ST=CA/L=Los Angeles/O=Default Company Ltd/CN=Burn Frank (burn)&amp;quot; &amp;quot;POST /stroom/stroom/dispatch.rpc HTTP/1.1&amp;quot; 200/200 21221 2289/415/14 &amp;quot;https://stroomnode00.strmdev00.org/stroom/&amp;quot; &amp;quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.113 Safari/537.36&amp;quot; stroomnode00.strmdev00.org/443
192.168.4.220/61854 - [18/Jan/2020:12:40:04 -0800] - &amp;quot;/C=USA/ST=CA/L=Los Angeles/O=Default Company Ltd/CN=Burn Frank (burn)&amp;quot; &amp;quot;POST /stroom/stroom/dispatch.rpc HTTP/1.1&amp;quot; 200/200 7889 2289/415/14 &amp;quot;https://stroomnode00.strmdev00.org/stroom/&amp;quot; &amp;quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.113 Safari/537.36&amp;quot; stroomnode00.strmdev00.org/443
192.168.4.220/61909 - [18/Jan/2020:12:41:04 -0800] - &amp;quot;/C=USA/ST=CA/L=Los Angeles/O=Default Company Ltd/CN=Burn Frank (burn)&amp;quot; &amp;quot;POST /stroom/stroom/dispatch.rpc HTTP/1.1&amp;quot; 200/200 6901 2389/3796/14 &amp;quot;https://stroomnode00.strmdev00.org/stroom/&amp;quot; &amp;quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.113 Safari/537.36&amp;quot; stroomnode00.strmdev00.org/443
192.168.4.220/61962 - [18/Jan/2020:12:42:04 -0800] - &amp;quot;/C=USA/ST=CA/L=Los Angeles/O=Default Company Ltd/CN=Burn Frank (burn)&amp;quot; &amp;quot;POST /stroom/stroom/dispatch.rpc HTTP/1.1&amp;quot; 200/200 11219 2289/415/14 &amp;quot;https://stroomnode00.strmdev00.org/stroom/&amp;quot; &amp;quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.113 Safari/537.36&amp;quot; stroomnode00.strmdev00.org/443
192.168.8.151/62015 - [18/Jan/2020:12:43:04 +1100] - &amp;quot;/C=AUS/ST=NSW/L=Sydney/O=Default Company Ltd/CN=Max Bergman (maxb)&amp;quot; &amp;quot;POST /stroom/stroom/dispatch.rpc HTTP/1.1&amp;quot; 200/200 4265 2289/415/14 &amp;quot;https://stroomnode00.strmdev00.org/stroom/&amp;quot; &amp;quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.113 Safari/537.36&amp;quot; stroomnode00.strmdev00.org/443
192.168.8.151/62092 - [18/Jan/2020:12:44:04 +1100] - &amp;quot;/C=AUS/ST=NSW/L=Sydney/O=Default Company Ltd/CN=Max Bergman (maxb)&amp;quot; &amp;quot;POST /stroom/stroom/dispatch.rpc HTTP/1.1&amp;quot; 200/200 9791 2289/415/14 &amp;quot;https://stroomnode00.strmdev00.org/stroom/&amp;quot; &amp;quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.113 Safari/537.36&amp;quot; stroomnode00.strmdev00.org/443
192.168.8.151/62147 - [18/Jan/2020:12:44:10 +1100] - &amp;quot;/C=AUS/ST=NSW/L=Sydney/O=Default Company Ltd/CN=Max Bergman (maxb)&amp;quot; &amp;quot;POST /stroom/stroom/dispatch.rpc HTTP/1.1&amp;quot; 200/200 9791 2289/415/14 &amp;quot;https://stroomnode00.strmdev00.org/stroom/&amp;quot; &amp;quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.113 Safari/537.36&amp;quot; stroomnode00.strmdev00.org/443
192.168.8.151/62147 - [18/Jan/2020:12:44:20 +1100] - &amp;quot;/C=AUS/ST=NSW/L=Sydney/O=Default Company Ltd/CN=Max Bergman (maxb)&amp;quot; &amp;quot;POST /stroom/stroom/dispatch.rpc HTTP/1.1&amp;quot; 200/200 11509 2289/415/14 &amp;quot;https://stroomnode00.strmdev00.org/stroom/&amp;quot; &amp;quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.113 Safari/537.36&amp;quot; stroomnode00.strmdev00.org/443
192.168.8.151/62202 - [18/Jan/2020:12:44:21 +1100] - &amp;quot;/C=AUS/ST=NSW/L=Sydney/O=Default Company Ltd/CN=Max Bergman (maxb)&amp;quot; &amp;quot;POST /stroom/stroom/dispatch.rpc HTTP/1.1&amp;quot; 200/200 4627 2389/3796/14 &amp;quot;https://stroomnode00.strmdev00.org/stroom/&amp;quot; &amp;quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.113 Safari/537.36&amp;quot; stroomnode00.strmdev00.org/443
192.168.8.151/62294 - [18/Jan/2020:12:44:21 +1100] - &amp;quot;/C=AUS/ST=NSW/L=Sydney/O=Default Company Ltd/CN=Max Bergman (maxb)&amp;quot; &amp;quot;POST /stroom/stroom/dispatch.rpc HTTP/1.1&amp;quot; 200/200 12367 2289/415/14 &amp;quot;https://stroomnode00.strmdev00.org/stroom/&amp;quot; &amp;quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.113 Safari/537.36&amp;quot; stroomnode00.strmdev00.org/443
192.168.8.151/62349 - [18/Jan/2020:12:44:25 +1100] - &amp;quot;/C=AUS/ST=NSW/L=Sydney/O=Default Company Ltd/CN=Max Bergman (maxb)&amp;quot; &amp;quot;POST /stroom/stroom/dispatch.rpc HTTP/1.1&amp;quot; 200/200 12765 2289/415/14 &amp;quot;https://stroomnode00.strmdev00.org/stroom/&amp;quot; &amp;quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.113 Safari/537.36&amp;quot; stroomnode00.strmdev00.org/443
192.168.234.9/62429 - [18/Jan/2020:12:50:06 +0000] - &amp;quot;/C=GBR/ST=GLOUCESTERSHIRE/L=Bristol/O=Default Company Ltd/CN=Kostas Kosta (kk)&amp;quot; &amp;quot;POST /stroom/stroom/dispatch.rpc HTTP/1.1&amp;quot; 200/200 12245 2289/415/14 &amp;quot;https://stroomnode00.strmdev00.org/stroom/&amp;quot; &amp;quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.113 Safari/537.36&amp;quot; stroomnode00.strmdev00.org/443
192.168.234.9/62429 - [18/Jan/2020:12:50:04 +0000] - &amp;quot;/C=GBR/ST=GLOUCESTERSHIRE/L=Bristol/O=Default Company Ltd/CN=Kostas Kosta (kk)&amp;quot; &amp;quot;POST /stroom/stroom/dispatch.rpc HTTP/1.1&amp;quot; 200/200 12245 2289/415/14 &amp;quot;https://stroomnode00.strmdev00.org/stroom/&amp;quot; &amp;quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.113 Safari/537.36&amp;quot; stroomnode00.strmdev00.org/443
192.168.234.9/62495 - [18/Jan/2020:12:51:04 +0000] - &amp;quot;/C=GBR/ST=GLOUCESTERSHIRE/L=Bristol/O=Default Company Ltd/CN=Kostas Kosta (kk)&amp;quot; &amp;quot;POST /stroom/stroom/dispatch.rpc HTTP/1.1&amp;quot; 200/200 4327 2289/415/14 &amp;quot;https://stroomnode00.strmdev00.org/stroom/&amp;quot; &amp;quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.113 Safari/537.36&amp;quot; stroomnode00.strmdev00.org/443
192.168.234.9/62549 - [18/Jan/2020:12:52:04 +0000] - &amp;quot;/C=GBR/ST=GLOUCESTERSHIRE/L=Bristol/O=Default Company Ltd/CN=Kostas Kosta (kk)&amp;quot; &amp;quot;POST /stroom/stroom/dispatch.rpc HTTP/1.1&amp;quot; 200/200 7148 2289/415/14 &amp;quot;https://stroomnode00.strmdev00.org/stroom/&amp;quot; &amp;quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.113 Safari/537.36&amp;quot; stroomnode00.strmdev00.org/443
192.168.234.9/62626 - [18/Jan/2020:12:52:06 +0000] - &amp;quot;/C=GBR/ST=GLOUCESTERSHIRE/L=Bristol/O=Default Company Ltd/CN=Kostas Kosta (kk)&amp;quot; &amp;quot;POST /stroom/stroom/dispatch.rpc HTTP/1.1&amp;quot; 200/200 11386 2289/415/14 &amp;quot;https://stroomnode00.strmdev00.org/stroom/&amp;quot; &amp;quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.113 Safari/537.36&amp;quot; stroomnode00.strmdev00.org/443

&lt;/code&gt;&lt;/pre&gt;


    &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
    &lt;div class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;
      
      &lt;span class=&#34;&#34; style=&#34;font-size: smaller&#34;&gt;Apache BlackBox sample log&lt;/span&gt;
      
      (
      &lt;a href=&#34;../../files/HOWTOs/EventFeeds/CreateApacheHTTPDEventFeed/sampleApacheBlackBox.log&#34; class=&#34;&#34; style=&#34;font-size: smaller&#34;&gt;Download sampleApacheBlackBox.log&lt;/a&gt;
      &lt;i class=&#34;external-link-icon fas fa-file-download fa-sm text-secondary&#34; title=&#34;External link&#34;&gt;&lt;/i&gt;
      )
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Save a copy of this data to your local environment for use later in this HOWTO.
Save this file as a text document with ANSI encoding.&lt;/p&gt;
&lt;h2 id=&#34;create-the-feed-and-its-pipeline&#34;&gt;Create the Feed and its Pipeline&lt;/h2&gt;
&lt;p&gt;To reflect the source of these Accounting Logs, we will name our feed and its pipeline Apache-SSLBlackBox-V2.0-EVENTS and it will be stored in the system group Apache HTTPD under the main system group - &lt;code&gt;Event Sources&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;create-system-group&#34;&gt;Create System Group&lt;/h3&gt;
&lt;p&gt;To create the system group Apache  HTTPD, navigate to the &lt;em&gt;Event Sources/Infrastructure/WebServer&lt;/em&gt; system group within the Explorer pane (if this system group structure does not already exist in your Stroom instance then refer to the &lt;strong&gt;HOWTO Stroom Explorer Management&lt;/strong&gt; for guidance).
Left click to highlight the
&lt;em&gt;WebServer&lt;/em&gt; system group then right click to bring up the object context menu.
Navigate to the &lt;em&gt;New&lt;/em&gt; icon, then the &lt;em&gt;Folder&lt;/em&gt; icon to reveal the &lt;em&gt;New Folder&lt;/em&gt; selection window.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-00.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-00.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-00.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-00.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Navigate Explorer&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;In the New Folder window enter Apache HTTPD into the &lt;strong&gt;Name:&lt;/strong&gt; text entry box.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-01.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-01.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-01.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-01.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Create System Group&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;The click on 



&lt;span class=&#34;stroom-button&#34; title=&#34;Ok button&#34; &gt;
  &lt;span class=&#34;stroom-button-text&#34;&gt;Ok&lt;/span&gt;
&lt;/span&gt;
 at which point you will be presented with the Apache HTTPD system group configuration tab.
Also note, the &lt;em&gt;WebServer&lt;/em&gt; system group within the Explorer pane has automatically expanded to display the &lt;code&gt;Apache HTTPD&lt;/code&gt; system group.&lt;/p&gt;
&lt;p&gt;Close the Apache HTTPD system group configuration tab by clicking on the close item icon on the right-hand side of the tab 







  








&lt;span class=&#34;stroom-tab stroom-tab-active&#34; title=&#34;Folder tab - &#39;Apache HTTPD&#39;&#34; &gt;
  &lt;img
    class=&#34;stroom-icon&#34; 
    src=&#34;../../images/stroom-ui/document/Folder.svg&#34; 
    title=&#34;Apache HTTPD&#34; 
    alt=&#34;Folder.svg&#34;&gt;
  &lt;span class=&#34;stroom-tab-name&#34;&gt;Apache HTTPD&lt;/span&gt;
  &lt;span class=&#34;stroom-tab-cross&#34;&gt;Ã—&lt;/span&gt;
&lt;/span&gt;
.&lt;/p&gt;
&lt;p&gt;We now need to create, in order&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the Feed,&lt;/li&gt;
&lt;li&gt;the Text Parser,&lt;/li&gt;
&lt;li&gt;the Translation and finally,&lt;/li&gt;
&lt;li&gt;the Pipeline.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;create-feed&#34;&gt;Create Feed&lt;/h3&gt;
&lt;p&gt;Within the Explorer pane, and having selected the Apache HTTPD group, right click to bring up object context menu.
Navigate to New, Feed&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-03.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-03.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-03.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-03.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Apache Create Feed&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Select the Feed icon 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/document/Feed.svg&#34; 
  title=&#34;Feed&#34; 
  alt=&#34;document/Feed.svg&#34;&gt;
, when the &lt;strong&gt;New Feed&lt;/strong&gt; selection window comes up, ensure the &lt;code&gt;Apache HTTPD&lt;/code&gt; system group is selected or navigate to it.
Then enter the name of the feed, Apache-SSLBlackBox-V2.0-EVENTS, into the &lt;strong&gt;Name:&lt;/strong&gt; text entry box the press 



&lt;span class=&#34;stroom-button&#34; title=&#34;Ok button&#34; &gt;
  &lt;span class=&#34;stroom-button-text&#34;&gt;Ok&lt;/span&gt;
&lt;/span&gt;
.&lt;/p&gt;
&lt;p&gt;It should be noted that the default Stroom FeedName pattern will not accept this name.
One needs to modify the &lt;code&gt;stroom.feedNamePattern&lt;/code&gt; stroom property to change the default pattern to &lt;code&gt;^[a-zA-Z0-9_-\.]{3,}$&lt;/code&gt;.
See the &lt;a href=&#34;../../docs/howtos/administration/systemproperties/&#34;&gt;HOWTO on System Properties&lt;/a&gt; document to see how to make this change.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-04.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-04.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-04.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-04.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;New Feed dialog&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;At this point you will be presented with the new feed&amp;rsquo;s configuration tab and the feed&amp;rsquo;s Explorer object will automatically appear in the Explorer pane within the &lt;code&gt;Apache HTTPD&lt;/code&gt; system group.&lt;/p&gt;
&lt;p&gt;Select the &lt;em&gt;Settings&lt;/em&gt; tab on the feed&amp;rsquo;s configuration tab.
Enter an appropriate description into the &lt;strong&gt;Description:&lt;/strong&gt; text entry box, for instance:&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Apache HTTPD events for BlackBox Version 2.0.  These events are from a Secure service  (https).&amp;rdquo;&lt;/p&gt;
&lt;p&gt;In the &lt;strong&gt;Classification:&lt;/strong&gt; text entry box, enter a Classification of the data that the event feed will contain - that is the classification or sensitivity of the accounting logâ€™s content itself.&lt;/p&gt;
&lt;p&gt;As this is not a Reference Feed, leave the &lt;strong&gt;Reference Feed:&lt;/strong&gt; check box unchecked.&lt;/p&gt;
&lt;p&gt;We leave the &lt;strong&gt;Feed Status:&lt;/strong&gt; at &lt;em&gt;Receive&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;We leave the &lt;strong&gt;Stream Type:&lt;/strong&gt; as &lt;em&gt;Raw Events&lt;/em&gt; as this we will be sending batches (streams) of raw event logs.&lt;/p&gt;
&lt;p&gt;We leave the &lt;strong&gt;Data Encoding:&lt;/strong&gt; as UTF-8 as the raw logs are in this form.&lt;/p&gt;
&lt;p&gt;We leave the &lt;strong&gt;Context Encoding:&lt;/strong&gt; as UTF-8 as there no context events for this feed.&lt;/p&gt;
&lt;p&gt;We leave the &lt;strong&gt;Retention Period:&lt;/strong&gt; at &lt;em&gt;Forever&lt;/em&gt; as we do not want to delete the raw logs.&lt;/p&gt;
&lt;p&gt;This results in&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-05.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-05.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-05.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-05.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;New Feed tab&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Save the feed by clicking on the save icon 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/save.svg&#34; 
  title=&#34;Save&#34; 
  alt=&#34;save.svg&#34;&gt;
.&lt;/p&gt;
&lt;h3 id=&#34;create-text-converter&#34;&gt;Create Text Converter&lt;/h3&gt;
&lt;p&gt;Within the Explorer pane, and having selected the &lt;code&gt;Apache HTTPD&lt;/code&gt; system group, right click to bring up object context menu, then select:&lt;/p&gt;
&lt;p&gt;










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/add.svg&#34; 
  title=&#34;New&#34; 
  alt=&#34;add.svg&#34;&gt;
 &lt;em&gt;New&lt;/em&gt; =&amp;gt; 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/document/TextConverter.svg&#34; 
  title=&#34;Text converter&#34; 
  alt=&#34;document/TextConverter.svg&#34;&gt;
 &lt;em&gt;Text Converter&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;When the &lt;strong&gt;New Text Converter&lt;/strong&gt;&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-07.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-07.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-07.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-07.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;New Text Converter&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;selection window comes up enter the name of the feed, Apache-SSLBlackBox-V2.0-EVENTS, into the &lt;strong&gt;Name:&lt;/strong&gt; text entry box then press 



&lt;span class=&#34;stroom-button&#34; title=&#34;Ok button&#34; &gt;
  &lt;span class=&#34;stroom-button-text&#34;&gt;Ok&lt;/span&gt;
&lt;/span&gt;
.
At this point you will be presented with the new text converter&amp;rsquo;s configuration tab.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-08.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-08.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-08.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-08.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Text Converter configuration tab&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Enter an appropriate description into the &lt;strong&gt;Description:&lt;/strong&gt; text entry box, for instance&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Apache HTTPD events for BlackBox Version 2.0 - text converter.
See Conversion for complete documentation.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Set the &lt;strong&gt;Converter Type:&lt;/strong&gt; to be Data Splitter from drop down menu.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-09.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-09.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-09.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-09.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Text Converter configuration settings&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Save the text converter by clicking on the save icon 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/save.svg&#34; 
  title=&#34;Save&#34; 
  alt=&#34;save.svg&#34;&gt;
.&lt;/p&gt;
&lt;h3 id=&#34;create-xslt-translation&#34;&gt;Create XSLT Translation&lt;/h3&gt;
&lt;p&gt;Within the Explorer pane, and having selected the &lt;code&gt;Apache HTTPD&lt;/code&gt; system group, right click to bring up object context menu, then select:&lt;/p&gt;
&lt;p&gt;










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/add.svg&#34; 
  title=&#34;New&#34; 
  alt=&#34;add.svg&#34;&gt;
 &lt;em&gt;New&lt;/em&gt; =&amp;gt; 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/document/XSLT.svg&#34; 
  title=&#34;Xslt&#34; 
  alt=&#34;document/XSLT.svg&#34;&gt;
 &lt;em&gt;XSLT&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;When the &lt;strong&gt;New XSLT&lt;/strong&gt; selection window comes up,&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-11.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-11.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-11.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-11.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;New XSLT&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;enter the name of the feed, Apache-SSLBlackBox-V2.0-EVENTS, into the &lt;strong&gt;Name:&lt;/strong&gt; text entry box then press 



&lt;span class=&#34;stroom-button&#34; title=&#34;Ok button&#34; &gt;
  &lt;span class=&#34;stroom-button-text&#34;&gt;Ok&lt;/span&gt;
&lt;/span&gt;
.
At this point you will be presented with the new XSLT&amp;rsquo;s configuration tab.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-12.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-12.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-12.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-12.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;New XSLT tab&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Enter an appropriate description into the &lt;strong&gt;Description:&lt;/strong&gt; text entry box, for instance&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Apache HTTPD events for  BlackBox Version 2.0  - translation.
See Translation for complete documentation.&amp;rdquo;&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-13.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-13.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-13.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-13.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;New XSLT settings&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Save the XSLT by clicking on the save 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/save.svg&#34; 
  title=&#34;Save&#34; 
  alt=&#34;save.svg&#34;&gt;
 icon.&lt;/p&gt;
&lt;h3 id=&#34;create-pipeline&#34;&gt;Create Pipeline&lt;/h3&gt;
&lt;p&gt;In the process of creating this pipeline we have assumed that the  &lt;strong&gt;Template Pipeline&lt;/strong&gt; content pack has been loaded, so that we can &lt;em&gt;Inherit&lt;/em&gt; a pipeline structure from this content pack and configure it to support this specific feed.&lt;/p&gt;
&lt;p&gt;Within the Explorer pane, and having selected the Apache HTTPD system group, right click to bring up object context menu, then select:&lt;/p&gt;
&lt;p&gt;










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/add.svg&#34; 
  title=&#34;New&#34; 
  alt=&#34;add.svg&#34;&gt;
 &lt;em&gt;New&lt;/em&gt; =&amp;gt; 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/document/Pipeline.svg&#34; 
  title=&#34;Pipeline&#34; 
  alt=&#34;document/Pipeline.svg&#34;&gt;
 &lt;em&gt;Pipeline&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;When the &lt;strong&gt;New Pipeline&lt;/strong&gt; selection window comes up, navigate to, then select the Apache HTTPD system group and then enter the name of the pipeline, Apache-SSLBlackBox-V2.0-EVENTS
into the &lt;strong&gt;Name:&lt;/strong&gt; text entry box then press 



&lt;span class=&#34;stroom-button&#34; title=&#34;Ok button&#34; &gt;
  &lt;span class=&#34;stroom-button-text&#34;&gt;Ok&lt;/span&gt;
&lt;/span&gt;
.
At this you will be presented with the new pipelineâ€™s configuration tab&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-15.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-15.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-15.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-15.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;New Pipeline tab&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;As usual, enter an appropriate &lt;strong&gt;Description:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Apache HTTPD events for BlackBox Version 2.0  - pipeline.
This pipeline uses the standard event pipeline to store the events in the Event Store.&amp;rdquo;&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-16.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-16.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-16.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-16.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;New Pipeline settings&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Save the pipeline by clicking on the save icon 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/save.svg&#34; 
  title=&#34;Save&#34; 
  alt=&#34;save.svg&#34;&gt;
.&lt;/p&gt;
&lt;p&gt;We now need to select the structure this pipeline will use.
We need to move from the &lt;strong&gt;Settings&lt;/strong&gt; sub-item on the pipeline configuration tab to the &lt;strong&gt;Structure&lt;/strong&gt; sub-item.
This is done by clicking on the &lt;strong&gt;Structure&lt;/strong&gt; link, at which we see&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-17.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-17.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-17.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-17.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;New Pipeline Structure&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Next we will choose an Event Data pipeline.
This is done by inheriting it from a defined set of Template Pipelines.
To do this, click on the menu selection icon  to the right of the Inherit From: text display box.&lt;/p&gt;
&lt;p&gt;When the &lt;strong&gt;Choose item&lt;/strong&gt;&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-18.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-18.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-18.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-18.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;New Pipeline inherited from&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;selection window appears, select from the &lt;code&gt;Template Pipelines&lt;/code&gt; system group.
In this instance, as our input data is text, we select (left click) the 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/document/Pipeline.svg&#34; 
  title=&#34;Pipeline&#34; 
  alt=&#34;Document/Pipeline.svg&#34;&gt;
 &lt;em&gt;Event Data (Text)&lt;/em&gt; pipeline&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-19.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-19.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-19.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-19.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;New Pipeline inherited selection&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;then press 



&lt;span class=&#34;stroom-button&#34; title=&#34;Ok button&#34; &gt;
  &lt;span class=&#34;stroom-button-text&#34;&gt;Ok&lt;/span&gt;
&lt;/span&gt;
.
At this we see the inherited pipeline structure of&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-20.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-20.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-20.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-20.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;New Pipeline inherited structure&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;For the purpose of this HOWTO, we are only interested in two of the eleven (11) elements in this pipeline&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the Text Converter labelled &lt;em&gt;dsParser&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;the XSLT Translation labelled &lt;em&gt;translationFilter&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We now need to associate our Text Converter and Translation with the pipeline so that we can pass raw events (logs) through our pipeline in order to save them in the Event Store.&lt;/p&gt;
&lt;p&gt;To associate the Text Converter, select the Text Converter icon, to display.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-21.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-21.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-21.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-21.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;New Pipeline associate textconverter&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Now identify to the &lt;strong&gt;Property&lt;/strong&gt; pane (the middle pane of the pipeline configuration tab), then and double click on the &lt;em&gt;textConverter&lt;/em&gt; Property Name to display the &lt;strong&gt;Edit
Property&lt;/strong&gt; selection window that allows you to edit the given property&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-22.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-22.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-22.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-22.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;New Pipeline textconverter association&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;We leave the Property &lt;strong&gt;Source:&lt;/strong&gt; as Inherit but we need to change the Property &lt;strong&gt;Value:&lt;/strong&gt; from &lt;em&gt;None&lt;/em&gt; to be our newly created Apache-SSLBlackBox-V2.0-EVENTS Text Converter.&lt;/p&gt;
&lt;p&gt;To do this, position the cursor over the menu selection icon 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/assorted/popup.png&#34; 
  title=&#34;Menu selection&#34; 
  alt=&#34;assorted/popup.png&#34;&gt;
 to the right of the &lt;strong&gt;Value:&lt;/strong&gt; text display box and click to select.
Navigate to the &lt;code&gt;Apache HTTPD&lt;/code&gt; system group then select the Apache-SSLBlackBox-V2.0-EVENTS text Converter&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-23.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-23.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-23.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-23.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;New Pipeline textconverter association&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;then press 



&lt;span class=&#34;stroom-button&#34; title=&#34;Ok button&#34; &gt;
  &lt;span class=&#34;stroom-button-text&#34;&gt;Ok&lt;/span&gt;
&lt;/span&gt;
.
At this we will see the Property &lt;em&gt;Value&lt;/em&gt; set&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-24.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-24.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-24.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-24.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;New Pipeline textconverter association&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Again press 



&lt;span class=&#34;stroom-button&#34; title=&#34;Ok button&#34; &gt;
  &lt;span class=&#34;stroom-button-text&#34;&gt;Ok&lt;/span&gt;
&lt;/span&gt;
 to finish editing this property and we see that the &lt;em&gt;textConverter&lt;/em&gt; Property has been set to &lt;strong&gt;Apache-SSLBlackBox-V2.0-EVENTS&lt;/strong&gt;&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-25.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-25.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-25.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-25.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;New Pipeline textconverter association&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;We perform the same actions to associate the translation.&lt;/p&gt;
&lt;p&gt;First, we select the translation Filterâ€™s 








  
  










&lt;span class=&#34;pipeline-element&#34; title=&#34;translationFilter&#34; &gt;
  &lt;img
    class=&#34;stroom-icon&#34; 
    style=&#34;max-width: 15px;&#34;
    src=&#34;../../images/stroom-ui/pipeline/xslt.svg&#34; 
    title=&#34;translationFilter&#34; 
    alt=&#34;xslt.svg&#34;&gt;
  &lt;span&gt;translationFilter&lt;/span&gt;
&lt;/span&gt;
 element and then within translation Filterâ€™s &lt;strong&gt;Property&lt;/strong&gt; pane we double click on the &lt;em&gt;xslt&lt;/em&gt; Property Name to bring up the &lt;strong&gt;Property Editor&lt;/strong&gt;.
As before, bring up the &lt;strong&gt;Choose item&lt;/strong&gt; selection window, navigate to the &lt;code&gt;Apache HTTPD&lt;/code&gt; system group and select the
Apache-SSLBlackBox-V2.0-EVENTS xslt Translation.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-26.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-26.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-26.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-26.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;New Pipeline Translation association&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;We leave the remaining properties in the translation Filterâ€™s &lt;strong&gt;Property&lt;/strong&gt; pane at their default values.
The result is the assignment of our translation to the &lt;em&gt;xslt&lt;/em&gt; Property.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-27.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-27.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-27.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-27.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;New Pipeline Translation association&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;For the moment, we will not associate a decoration filter.&lt;/p&gt;
&lt;p&gt;Save the pipeline by clicking on its 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/save.svg&#34; 
  title=&#34;Save&#34; 
  alt=&#34;save.svg&#34;&gt;
 icon.&lt;/p&gt;
&lt;h3 id=&#34;manually-load-raw-event-test-data&#34;&gt;Manually load Raw Event test data&lt;/h3&gt;
&lt;p&gt;Having established the pipeline, we can now start authoring our text converter and translation.
The first step is to load some Raw Event test data.
Previously in the &lt;strong&gt;Event Log Source&lt;/strong&gt; of this HOWTO you saved a copy of the file &lt;em&gt;sampleApacheBlackBox.log&lt;/em&gt; to your local environment.
It contains only a few events as the content is consistently formatted.
We could feed the test data by posting the file to Stroomâ€™s accounting/datafeed url, but for this example we will manually load the file.
Once developed, raw data is posted to the web service.&lt;/p&gt;
&lt;p&gt;Select the 














&lt;span class=&#34;stroom-tab &#34; title=&#34;Feed tab - &#39;ApacheHHTPDFeed&#39;&#34; &gt;
  &lt;img
    class=&#34;stroom-icon&#34; 
    src=&#34;../../images/stroom-ui/document/Feed.svg&#34; 
    title=&#34;ApacheHHTPDFeed&#34; 
    alt=&#34;Feed.svg&#34;&gt;
  &lt;span class=&#34;stroom-tab-name&#34;&gt;ApacheHHTPDFeed&lt;/span&gt;
  &lt;span class=&#34;stroom-tab-cross&#34;&gt;Ã—&lt;/span&gt;
&lt;/span&gt;
 tab and select the &lt;strong&gt;Data&lt;/strong&gt; sub-tab to display&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-29.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-29.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-29.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-29.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Data Loading&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;This window is divided into three panes.&lt;/p&gt;
&lt;p&gt;The top pane displays the &lt;em&gt;Stream Table&lt;/em&gt;, which is a table of the latest streams that belong to the feed (clearly itâ€™s empty).&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-30.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-30.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-30.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-30.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Data Loading - Stream Table&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Note that a Raw Event &lt;em&gt;stream&lt;/em&gt; is made up of data from a single file of data or aggregation of multiple data files and also meta-data associated with the data file(s).
For example, file names, file size, etc.&lt;/p&gt;
&lt;p&gt;The middle pane displays a &lt;em&gt;Specific&lt;/em&gt; feed and any linked streams.
To display a &lt;em&gt;Specific&lt;/em&gt; feed, you select it from the &lt;em&gt;Stream Table&lt;/em&gt; above.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-31.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-31.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-31.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-31.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Data Loading - Specific Stream&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;The bottom pane displays the selected streamâ€™s data or meta-data.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-32.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-32.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-32.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-32.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Data Loading - Data/Metadata&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Note the Upload icon 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/upload.svg&#34; 
  title=&#34;Upload&#34; 
  alt=&#34;upload.svg&#34;&gt;
 in the top left of the Stream table pane.
On clicking the Upload icon, we are presented with the data &lt;strong&gt;Upload&lt;/strong&gt; selection window.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-33.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-33.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-33.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-33.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Data Loading - Upload Data&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;As stated earlier, raw event data is normally posted as a file to the Stroom web server.
As part of this posting action, a set of well-defined HTTP &lt;em&gt;extra headers&lt;/em&gt; are sent as part of the post.
These headers, in the form of key value pairs, provide additional context associated with the system sending the logs.
These standard headers become Stroom &lt;em&gt;feed attributes&lt;/em&gt; available to the Stroom translation.
Common attributes are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;System - the name of the System providing the logs&lt;/li&gt;
&lt;li&gt;Environment - the environment of the system (Production, Quality Assurance, Reference, Development)&lt;/li&gt;
&lt;li&gt;Feed - the feedname itself&lt;/li&gt;
&lt;li&gt;MyHost - the fully qualified domain name of the system sending the logs&lt;/li&gt;
&lt;li&gt;MyIPaddress - the IP address of the system sending the logs&lt;/li&gt;
&lt;li&gt;MyNameServer - the name server the system resolves names through&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Since our translation will want these feed attributes, we will set them in the Meta Data text entry box of the &lt;strong&gt;Upload&lt;/strong&gt; selection window.
Note we can skip &lt;em&gt;Feed&lt;/em&gt; as this will automatically be assigned correctly as part of the upload action (setting it to Apache-SSLBlackBox-V2.0-EVENTS obviously).
Our &lt;strong&gt;Meta Data:&lt;/strong&gt; will have&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;System:LinuxWebServer&lt;/li&gt;
&lt;li&gt;Environment:Production&lt;/li&gt;
&lt;li&gt;MyHost:stroomnode00.strmdev00.org&lt;/li&gt;
&lt;li&gt;MyIPaddress:192.168.2.245&lt;/li&gt;
&lt;li&gt;MyNameServer:192.168.2.254&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We select a &lt;strong&gt;Stream Type:&lt;/strong&gt; of &lt;em&gt;Raw Events&lt;/em&gt; as this data is for an &lt;em&gt;Event Feed&lt;/em&gt;.
As this is not a &lt;em&gt;Reference Feed&lt;/em&gt; we ignore the &lt;strong&gt;Effective:&lt;/strong&gt; entry box (a date/time selector).&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-34.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-34.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-34.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-34.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Upload Data&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;We now click the &lt;strong&gt;Choose File&lt;/strong&gt; button, then navigate to the location of the raw log file you downloaded earlier, &lt;em&gt;sampleApacheBlackBox.log&lt;/em&gt;&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-35.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-35.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-35.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-35.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Upload Data&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;then click &lt;strong&gt;Open&lt;/strong&gt; to return to the &lt;strong&gt;Upload&lt;/strong&gt; selection window where we can then press 



&lt;span class=&#34;stroom-button&#34; title=&#34;Ok button&#34; &gt;
  &lt;span class=&#34;stroom-button-text&#34;&gt;Ok&lt;/span&gt;
&lt;/span&gt;
 to perform the upload.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-36.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-36.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-36.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-36.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Upload Data&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;An Alert dialog window is presented 






  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-37.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-37.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-37.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-37.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Alert&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;
  which should be &lt;strong&gt;closed&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The stream we have just loaded will now be displayed in the  &lt;em&gt;Streams Table&lt;/em&gt; pane.
Note that the &lt;em&gt;Specific Stream&lt;/em&gt;
and &lt;em&gt;Data/Meta-data&lt;/em&gt; panes are still blank.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-38.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-38.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-38.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-38.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Data Loading - Streams Table&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;If we select the stream by clicking anywhere along its line, the stream is highlighted and the &lt;em&gt;Specific Stream&lt;/em&gt; and Data/Meta-data_ panes now display data.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-39.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-39.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-39.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-39.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Data Loading - Streams Table&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;The &lt;em&gt;Specific Stream&lt;/em&gt; pane only displays the Raw Event stream and the &lt;em&gt;Data/Meta-data&lt;/em&gt; pane displays the content of the log file just uploaded (the &lt;strong&gt;Data&lt;/strong&gt; link).
If we were to click on the &lt;strong&gt;Meta&lt;/strong&gt; link at the top of the &lt;em&gt;Data/Meta-data&lt;/em&gt; pane, the log data is replaced by this streamâ€™s meta-data.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-40.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-40.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-40.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-40.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Data Loading - Meta-data&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Note that, in addition to the feed attributes we set, the upload process added additional feed attributes of&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Feed - the feed name&lt;/li&gt;
&lt;li&gt;ReceivedTime - the time the feed was received by Stroom&lt;/li&gt;
&lt;li&gt;RemoteFile - the name of the file loaded&lt;/li&gt;
&lt;li&gt;StreamSize - the size, in bytes, of the loaded data within the stream&lt;/li&gt;
&lt;li&gt;user-agent - the user agent used to present the stream to Stroom - in this case, the Stroom user Interface&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We now have data that will allow us to develop our text converter and translation.&lt;/p&gt;
&lt;h3 id=&#34;step-data-through-pipeline---source&#34;&gt;Step data through Pipeline - Source&lt;/h3&gt;
&lt;p&gt;We now need to step our data through the pipeline.&lt;/p&gt;
&lt;p&gt;To do this, set the check-box on the &lt;em&gt;Specific Stream&lt;/em&gt; pane and we note that the previously grayed out action icons (










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/process.svg&#34; 
  title=&#34;Process&#34; 
  alt=&#34;process.svg&#34;&gt;
 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/delete.svg&#34; 
  title=&#34;Delete&#34; 
  alt=&#34;delete.svg&#34;&gt;
 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/download.svg&#34; 
  title=&#34;Download&#34; 
  alt=&#34;download.svg&#34;&gt;
) are now enabled.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-43.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-43.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-43.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-43.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Select Stream to Step&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;We now want to step our data through the first element of the pipeline, the Text Converter.
We enter Stepping Mode by pressing the stepping button 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/stepping.svg&#34; 
  title=&#34;Stepping&#34; 
  alt=&#34;stepping.svg&#34;&gt;
 found at the bottom right corner of the &lt;em&gt;Data/Meta-data&lt;/em&gt; pane.&lt;/p&gt;
&lt;p&gt;We will then be requested to choose a pipeline to step with, at which, you should navigate to the Apache-SSLBlackBox-V2.0-EVENTS pipeline as per&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-44.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-44.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-44.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-44.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Select pipeline to Step&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;then press 



&lt;span class=&#34;stroom-button&#34; title=&#34;Ok button&#34; &gt;
  &lt;span class=&#34;stroom-button-text&#34;&gt;Ok&lt;/span&gt;
&lt;/span&gt;
.&lt;/p&gt;
&lt;p&gt;At this point, we enter the pipeline Stepping tab&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-45.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-45.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-45.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-45.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;pipeline Stepping tab - Source&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;which, initially displays the Raw Event data from our stream.
This is the Source display for the Event Pipeline.&lt;/p&gt;
&lt;h3 id=&#34;step-data-through-pipeline---text-converter&#34;&gt;Step data through Pipeline - Text Converter&lt;/h3&gt;
&lt;p&gt;We click on the 








  
  








&lt;span class=&#34;pipeline-element&#34; title=&#34;dsParser&#34; &gt;
  &lt;img
    class=&#34;stroom-icon&#34; 
    style=&#34;max-width: 15px;&#34;
    src=&#34;../../images/stroom-ui/pipeline/text.svg&#34; 
    title=&#34;dsParser&#34; 
    alt=&#34;text.svg&#34;&gt;
  &lt;span&gt;dsParser&lt;/span&gt;
&lt;/span&gt;
 element to enter the Text Converter stepping window.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-46.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-46.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-46.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-46.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;pipeline Stepping tab - Text Converter&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;This &lt;em&gt;stepping&lt;/em&gt; tab is divided into three sub-panes.
The top one is the Text Converter editor and it will allow you to edit the text conversion.
The bottom left window displays the &lt;em&gt;input&lt;/em&gt; to the Text Converter.
The bottom right window displays the &lt;em&gt;output&lt;/em&gt; from the Text Converter for the given input.&lt;/p&gt;
&lt;p&gt;We also note an error indicator - that of an error in the editor pane as indicated by the black back-grounded x and rectangular black boxes to the right of the editorâ€™s scroll bar.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-47.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-47.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-47.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-47.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;pipeline Stepping tab - Error&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;In essence, this means that we have no text converter to pass the Raw Event data through.&lt;/p&gt;
&lt;p&gt;To correct this, we will author our text converter using the Data Splitter &lt;em&gt;language&lt;/em&gt;.
Normally this is done incrementally to more easily develop the parser.
The minimum text converter contains&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;?xml version=&amp;quot;1.1&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;dataSplitter xmlns=&amp;quot;data-splitter:3&amp;quot; xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot; xsi:schemaLocation=&amp;quot;data-splitter:3 file://data-splitter-v3.0.1.xsd&amp;quot; version=&amp;quot;3.0&amp;quot;&amp;gt;
    &amp;lt;split  delimiter=&amp;quot;\n&amp;quot;&amp;gt;
        &amp;lt;group&amp;gt;
            &amp;lt;regex pattern=&amp;quot;^(.*)$&amp;quot;&amp;gt;
                &amp;lt;data name=&amp;quot;rest&amp;quot; value=&amp;quot;$1&amp;quot; /&amp;gt;
            &amp;lt;/regex&amp;gt;
        &amp;lt;/group&amp;gt;
    &amp;lt;/split&amp;gt;
&amp;lt;/dataSplitter&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If we now press the Step First 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/fast-backward-green.svg&#34; 
  title=&#34;Step first&#34; 
  alt=&#34;fast-backward-green.svg&#34;&gt;
 icon the error will disappear and the stepping window will show.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-48.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-48.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-48.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-48.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;pipeline Stepping tab - Text Converter Simple A&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;As we can see, the first line of our Raw Event is displayed in the &lt;em&gt;input&lt;/em&gt; pane and the &lt;em&gt;output&lt;/em&gt; window holds the converted XML output where we just have a single &lt;em&gt;data&lt;/em&gt; element with a &lt;em&gt;name&lt;/em&gt; attribute of &lt;em&gt;rest&lt;/em&gt; and a &lt;em&gt;value&lt;/em&gt; attribute of the complete raw event as our regular expression matched the entire line.&lt;/p&gt;
&lt;p&gt;The next incremental step in the parser, would be to &lt;em&gt;parse out&lt;/em&gt; additional &lt;em&gt;data&lt;/em&gt; elements.
For example, in this next iteration we extract the client ip address, the client port and hold the rest of the Event in the rest data element.&lt;/p&gt;
&lt;p&gt;With the text converter containing&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;?xml version=&amp;quot;1.1&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;dataSplitter xmlns=&amp;quot;data-splitter:3&amp;quot; xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot; xsi:schemaLocation=&amp;quot;data-splitter:3 file://data-splitter-v3.0.1.xsd&amp;quot; version=&amp;quot;3.0&amp;quot;&amp;gt;
    &amp;lt;split  delimiter=&amp;quot;\n&amp;quot;&amp;gt;
        &amp;lt;group&amp;gt;
            &amp;lt;regex pattern=&amp;quot;^([^/]+)/([^  ]+) (.*)$&amp;quot;&amp;gt;
                &amp;lt;data name=&amp;quot;clientip&amp;quot;  value=&amp;quot;$1&amp;quot; /&amp;gt;
                &amp;lt;data name=&amp;quot;clientport&amp;quot;  value=&amp;quot;$2&amp;quot; /&amp;gt;
                &amp;lt;data name=&amp;quot;rest&amp;quot; value=&amp;quot;$3&amp;quot; /&amp;gt;
            &amp;lt;/regex&amp;gt;
        &amp;lt;/group&amp;gt;
    &amp;lt;/split&amp;gt;
&amp;lt;/dataSplitter&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and a click on the Refresh Current Step 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/refresh-green.svg&#34; 
  title=&#34;Refresh&#34; 
  alt=&#34;refresh-green.svg&#34;&gt;
 icon we will see the &lt;em&gt;output&lt;/em&gt; pane contain&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-49.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-49.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-49.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-49.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Text Converter Simple B&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;We continue this incremental parsing until we have our complete parser.&lt;/p&gt;
&lt;p&gt;The following is our complete Text Converter which generates xml records as defined by the Stroom &lt;strong&gt;records v3.0&lt;/strong&gt; schema.&lt;/p&gt;






&lt;div class=&#34;text-file card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;&#34;&gt;

  &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
    
    &lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;?xml version=&amp;quot;1.1&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;dataSplitter 
    xmlns=&amp;quot;data-splitter:3&amp;quot; 
    xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot; 
    xsi:schemaLocation=&amp;quot;data-splitter:3 file://data-splitter-v3.0.1.xsd&amp;quot; 
    version=&amp;quot;3.0&amp;quot;&amp;gt;

&amp;lt;!-- CLASSIFICATION: UNCLASSIFIED --&amp;gt;

&amp;lt;!-- Release History:
Release 20131001, 1 Oct 2013 - Initial release 

General Notes: 
This data splitter takes audit events for the Stroom variant of the Black Box Apache Auditing.

Event Format: The following is extracted from the Configuration settings for the Stroom variant of the Black Box Apache Auditing format.

#  Stroom - Black  Box  Auditing configuration
#
#  %a  - Client  IP address  (not  hostname (%h) to ensure ip address only)
#  When  logging the remote host,  it is important to log the client  IP address, not the
#  hostname. We do   this  with the &#39;%a&#39; directive.  Even  if HostnameLookups  are turned on,
#  using &#39;%a&#39; will  only record the IP address.  For the purposes of BlackBox formats,
#  reversed DNS should not  be trusted

#  %{REMOTE_PORT}e  - Client source port
#  Logging the client  source TCP  port  can provide some   useful  network data and can help
#  one associate a single client  with multiple requests.
#  If two   clients from the  same IP address  make   simultaneous connections, the &#39;common  log&#39;
#  file format cannot distinguish  between those  clients. Otherwise, if  the client uses
#  keep-alives, then every hit  made   from a single  TCP  session will  be associated  by   the  same
#  client  port number.
#  The   port information can indicate  how  many   connections our server is  handling at  once,
#  which may  help in tuning server TCP/OP   settings. It will also identify which client ports
#  are legitimate requests if  the administrator is examining a possible  SYN-attack against  a
#  server.
#  Note we  are using the REMOTE_PORT  environment variable. Environment variables  only come
#  into play when   mod_cgi or  mod_cgid is  handling the request.

#  %X   - Connection status  (use %c  for  Apache 1.3)
#  The   connection status  directive  tells us detailed  information about the client  connection.
#  It returns  one of three flags:
#  x  if the client aborted the connection before completion,
#  +  if  the client has indicated that it will  use keep-alives (and request additional  URLS),
#  - if the connection will  be closed after  the event
#  Keep-Alive is a HTTP 1.1.  directive  that  informs a web  server that  a client  can request multiple
#  files during the  same connection.  This way  a client  doesn&#39;t need to go   through the  overhead
#  of re-establishing  a TCP  connection to retrieve  a new  file.

#  %t  - time - or  [%{%d/%b/%Y:%T}t.%{msec_frac}t %{%z}t] for  Apache 2.4
#  The   %t  directive  records the time that  the request started.
#  NOTE:  When  deployed on   an  Apache 2.4, or better,  environment, you   should use
#  strftime  format in  order  to  get  microsecond resolution.

#  %l  - remote logname
#

#  %u - username [in quotes]
#  The   remote user  (from auth;  This may  be bogus if the return status  (%s) is  401
#  for non-ssl services)
#  For SSL  services,  user names need to  be delivered  as DNs  to deliver PKI   user details
#  in full.  To  pass through PKI   certificate  properties in the correct form you   need to
#  add the following directives  to your  Apache configuration:
#  SSLUserName   SSL_CLIENT_S_DN
#  SSLOptions +StdEnvVars
#  If you   cannot,  then use %{SSL_CLIENT_S_DN}x   in place of %u and use  blackboxSSLUser
#  LogFormat nickname

#  %r  - first  line of text sent by   web  client [in quotes]
#  This is the first  line of text send by   the web  client, which includes the request
#  method, the  full URL,  and the  HTTP protocol.

#  %s  - status  code before any redirection
#  This is  the status  code of the original request.

#  %&amp;gt;s  - status  code after  any redirection  has taken place
#  This is  the final  status  code of the request, after  any internal  redirections  may
#  have taken  place.

#  %D   - time in  microseconds to handle the request
#  This is the  number of microseconds the  server  took to  handle the  request  in  microseconds

#  %I  - incoming bytes
#  This is  the bytes received, include request and headers. It  cannot, by   definition be zero.

#  %O   - outgoing bytes
#  This is  the size in bytes of the outgoing data,  including HTTP headers. It  cannot,  by
#  definition be zero.

#  %B  - outgoing content bytes
#  This is  the size in bytes of the outgoing data,  EXCLUDING  HTTP headers.  Unlike %b,   which
#  records &#39;-&#39; for zero bytes transferred,  %B  will record &#39;0&#39;.

#  %{Referer}i - Referrer HTTP Request  Header [in quotes]
#  This is  typically the URL of the page that  made   the request.  If  linked from
#  e-mail or direct  entry this  value will be empty. Note, this  can be spoofed
#  or turned off

#  %{User-Agent}i - User agent HTTP Request  Header [in quotes]
#  This is  the identifying information the client  (browser) reports about itself.
#  It can be spoofed or  turned  off
 
#  %V   - the server name   according to the UseCannonicalName setting
#  This identifies  the virtual  host in a multi host webservice

#  %p - the canonical port of the server servicing the request

#  Define a variation  of the Black Box  logs
#
#  Note, you   only need to  use the  &#39;blackboxSSLUser&#39; nickname if you cannot set  the
#  following directives  for any SSL  configurations
#  SSLUserName   SSL_CLIENT_S_DN
#  SSLOptions +StdEnvVars
#  You  will also note the variation for no   logio  module. The   logio  module supports
#  the %I  and %O   formatting directive
#

&amp;lt;IfModule mod_logio.c&amp;gt; 
LogFormat &amp;quot;%a/%{REMOTE_PORT}e %X %t %l \&amp;quot;%u\&amp;quot; \&amp;quot;%r\&amp;quot; %s/%&amp;gt;s %D I/%O/%B \&amp;quot;%{Referer}i\&amp;quot; \&amp;quot;%{User-Agent}i\&amp;quot; %V/%p&amp;quot; blackboxUser 
LogFormat &amp;quot;%a/%{REMOTE_PORT}e %X %t %l \&amp;quot;%{SSL_CLIENT_S_DN}x\&amp;quot; \&amp;quot;%r\&amp;quot; %s/%&amp;gt;s %D %I/%O/%B \&amp;quot;%{Referer}i\&amp;quot; \&amp;quot;%{User-Agent}i\&amp;quot; %V/%p&amp;quot; blackboxSSLUser 
&amp;lt;/IfModule&amp;gt; 
&amp;lt;IfModule !mod_logio.c&amp;gt; 
LogFormat &amp;quot;%a/%{REMOTE_PORT}e %X %t %l \&amp;quot;%u\&amp;quot; \&amp;quot;%r\&amp;quot; %s/%&amp;gt;s %D 0/0/%B \&amp;quot;%{Referer}i\&amp;quot; \&amp;quot;%{User-Agent}i\&amp;quot; %V/$p&amp;quot; blackboxUser 
LogFormat &amp;quot;%a/%{REMOTE_PORT}e %X %t %l \&amp;quot;%{SSL_CLIENT_S_DN}x\&amp;quot; \&amp;quot;%r\&amp;quot; %s/%&amp;gt;s %D 0/0/%B \&amp;quot;%{Referer}i\&amp;quot; \&amp;quot;%{User-Agent}i\&amp;quot; %V/$p&amp;quot; blackboxSSLUser 
&amp;lt;/IfModule&amp;gt; 
--&amp;gt;

&amp;lt;!--  Match line --&amp;gt;
&amp;lt;split  delimiter=&amp;quot;\n&amp;quot;&amp;gt;
    &amp;lt;group&amp;gt;
        &amp;lt;regex pattern=&amp;quot;^([^/]+)/([^ ]+) ([^ ]+) \[([^\]]+)] ([^ ]+) &amp;amp;#34;([^&amp;amp;#34;]+)&amp;amp;#34; &amp;amp;#34;([^&amp;amp;#34;]+)&amp;amp;#34; (\d+)/(\d+) (\d+) ([^/]+)/([^/]+)/(\d+) &amp;amp;#34;([^&amp;amp;#34;]+)&amp;amp;#34; &amp;amp;#34;([^&amp;amp;#34;]+)&amp;amp;#34; ([^/]+)/([^ ]+)&amp;quot;&amp;gt;
            &amp;lt;data name=&amp;quot;clientip&amp;quot;  value=&amp;quot;$1&amp;quot; /&amp;gt;
            &amp;lt;data name=&amp;quot;clientport&amp;quot;  value=&amp;quot;$2&amp;quot; /&amp;gt;
            &amp;lt;data name=&amp;quot;constatus&amp;quot; value=&amp;quot;$3&amp;quot; /&amp;gt;
            &amp;lt;data  name=&amp;quot;time&amp;quot; value=&amp;quot;$4&amp;quot;  /&amp;gt;
            &amp;lt;data  name=&amp;quot;remotelname&amp;quot; value=&amp;quot;$5&amp;quot;  /&amp;gt;
            &amp;lt;data  name=&amp;quot;user&amp;quot; value=&amp;quot;$6&amp;quot; /&amp;gt;
            &amp;lt;data  name=&amp;quot;url&amp;quot; value=&amp;quot;$7&amp;quot;&amp;gt;
                &amp;lt;group value=&amp;quot;$7&amp;quot; ignoreErrors=&amp;quot;true&amp;quot;&amp;gt;
                &amp;lt;!-- 
                Special case the &amp;quot;GET  /&amp;quot; url string as opposed to  the  more standard  &amp;quot;method url protocol/protocol_version&amp;quot;.
                Also special  case a url  of &amp;quot;-&amp;quot;  which occurs  on   some   errors  (eg 408)
                --&amp;gt;
                    &amp;lt;regex pattern=&amp;quot;^-$&amp;quot;&amp;gt;
                        &amp;lt;data  name=&amp;quot;url&amp;quot; value=&amp;quot;error&amp;quot; /&amp;gt;
                    &amp;lt;/regex&amp;gt;
                    &amp;lt;regex pattern=&amp;quot;^([^ ]+) (/)$&amp;quot;&amp;gt;
                        &amp;lt;data  name=&amp;quot;httpMethod&amp;quot; value=&amp;quot;$1&amp;quot;  /&amp;gt;
                        &amp;lt;data  name=&amp;quot;url&amp;quot; value=&amp;quot;$2&amp;quot; /&amp;gt;
                    &amp;lt;/regex&amp;gt;
                    &amp;lt;regex pattern=&amp;quot;^([^ ]+) ([^  ]+) ([^ /]*)/([^  ]*)&amp;quot;&amp;gt;
                        &amp;lt;data  name=&amp;quot;httpMethod&amp;quot; value=&amp;quot;$1&amp;quot;  /&amp;gt;
                        &amp;lt;data  name=&amp;quot;url&amp;quot; value=&amp;quot;$2&amp;quot; /&amp;gt;
                        &amp;lt;data  name=&amp;quot;protocol&amp;quot; value=&amp;quot;$3&amp;quot; /&amp;gt;
                        &amp;lt;data  name=&amp;quot;version&amp;quot; value=&amp;quot;$4&amp;quot; /&amp;gt;
                    &amp;lt;/regex&amp;gt;
                &amp;lt;/group&amp;gt;
            &amp;lt;/data&amp;gt;
            &amp;lt;data  name=&amp;quot;responseB&amp;quot; value=&amp;quot;$8&amp;quot;  /&amp;gt;
            &amp;lt;data  name=&amp;quot;response&amp;quot; value=&amp;quot;$9&amp;quot; /&amp;gt;
            &amp;lt;data  name=&amp;quot;timeM&amp;quot; value=&amp;quot;$10&amp;quot; /&amp;gt;
            &amp;lt;data  name=&amp;quot;bytesIn&amp;quot; value=&amp;quot;$11&amp;quot; /&amp;gt;
            &amp;lt;data  name=&amp;quot;bytesOut&amp;quot; value=&amp;quot;$12&amp;quot;  /&amp;gt;
            &amp;lt;data  name=&amp;quot;bytesOutContent&amp;quot; value=&amp;quot;$13&amp;quot; /&amp;gt;
            &amp;lt;data name=&amp;quot;referer&amp;quot;  value=&amp;quot;$14&amp;quot; /&amp;gt;
            &amp;lt;data  name=&amp;quot;userAgent&amp;quot; value=&amp;quot;$15&amp;quot;  /&amp;gt;
            &amp;lt;data  name=&amp;quot;vserver&amp;quot; value=&amp;quot;$16&amp;quot; /&amp;gt;
            &amp;lt;data name=&amp;quot;vserverport&amp;quot;  value=&amp;quot;$17&amp;quot; /&amp;gt;
        &amp;lt;/regex&amp;gt;
    &amp;lt;/group&amp;gt;
&amp;lt;/split&amp;gt;
&amp;lt;/dataSplitter&amp;gt;

&lt;/code&gt;&lt;/pre&gt;


    &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
    &lt;div class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;
      
      &lt;span class=&#34;&#34; style=&#34;font-size: smaller&#34;&gt;ApacheHTTPD BlackBox - Data Splitter&lt;/span&gt;
      
      (
      &lt;a href=&#34;../../files/HOWTOs/EventFeeds/CreateApacheHTTPDEventFeed/ApacheHTTPDBlackBox-DataSplitter.txt&#34; class=&#34;&#34; style=&#34;font-size: smaller&#34;&gt;Download ApacheHTTPDBlackBox-DataSplitter.txt&lt;/a&gt;
      &lt;i class=&#34;external-link-icon fas fa-file-download fa-sm text-secondary&#34; title=&#34;External link&#34;&gt;&lt;/i&gt;
      )
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;If we now press the Step First 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/fast-backward-green.svg&#34; 
  title=&#34;Step first&#34; 
  alt=&#34;fast-backward-green.svg&#34;&gt;
 icon we will see the complete parsed record&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-50.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-50.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-50.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-50.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;pipeline Stepping tab - Text Converter Complete&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;If we click on the Step Forward 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/step-forward-green.svg&#34; 
  title=&#34;Step forward&#34; 
  alt=&#34;step-forward-green.svg&#34;&gt;
 icon we will see the next event displayed in both the &lt;em&gt;input&lt;/em&gt; and &lt;em&gt;output&lt;/em&gt; panes.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-51.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-51.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-51.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-51.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;pipeline Stepping tab - Text Converter Complete second event&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;we click on the Step Last 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/fast-forward-green.svg&#34; 
  title=&#34;Step last&#34; 
  alt=&#34;fast-forward-green.svg&#34;&gt;
 icon we will see the last event displayed in both the &lt;em&gt;input&lt;/em&gt; and &lt;em&gt;output&lt;/em&gt; panes.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-52.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-52.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-52.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-52.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;pipeline Stepping tab - Text Converter Complete last event&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;You should take note of the stepping key that has been displayed in each stepping window. The stepping key are the numbers enclosed in square brackets e.g. [7556:1:16] found in the top right-hand side of the stepping window next to the stepping icons&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-53.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-53.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-53.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-53.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;pipeline Stepping tab - Stepping Key&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;The form of these keys is [ streamId &amp;lsquo;:&amp;rsquo; subStreamId &amp;lsquo;:&amp;rsquo; recordNo]&lt;/p&gt;
&lt;p&gt;where&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;streamId&lt;/strong&gt; - is the stream ID and wonâ€™t change when stepping through the selected stream.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;subStreamId&lt;/strong&gt; - is the sub stream ID. When Stroom processes event streams it aggregates multiple input files and this is the file number.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;recordNo&lt;/strong&gt; - is the record number within the sub stream.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;One can double click on either the &lt;strong&gt;subStreamId&lt;/strong&gt; or &lt;strong&gt;recordNo&lt;/strong&gt; numbers and enter a new number. This allows you to â€˜stepâ€™ around a stream rather than just relying on first, previous, next and last movement.&lt;/p&gt;
&lt;p&gt;Note, you should now Save 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/save.svg&#34; 
  title=&#34;Save&#34; 
  alt=&#34;save.svg&#34;&gt;
 your edited Text Converter.&lt;/p&gt;
&lt;h3 id=&#34;step-data-through-pipeline---translation&#34;&gt;Step data through Pipeline - Translation&lt;/h3&gt;
&lt;p&gt;To start authoring the xslt Translation Filter, press the 








  
  










&lt;span class=&#34;pipeline-element&#34; title=&#34;translationFilter&#34; &gt;
  &lt;img
    class=&#34;stroom-icon&#34; 
    style=&#34;max-width: 15px;&#34;
    src=&#34;../../images/stroom-ui/pipeline/xslt.svg&#34; 
    title=&#34;translationFilter&#34; 
    alt=&#34;xslt.svg&#34;&gt;
  &lt;span&gt;translationFilter&lt;/span&gt;
&lt;/span&gt;
 element which steps us to the xsl Translation Filter pane.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-54.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-54.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-54.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-54.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;pipeline Stepping tab - Translation Initial&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;As for the &lt;em&gt;Text Converter&lt;/em&gt; stepping tab, this tab is divided into three sub-panes. The top one is the xslt translation editor and it will allow you to edit the xslt translation. The bottom left window displays the &lt;em&gt;input&lt;/em&gt; to the xslt translation (which is the output from the &lt;em&gt;Text Converter&lt;/em&gt;). The bottom right window displays the &lt;em&gt;output&lt;/em&gt; from the xslt Translation filter for the given input.&lt;/p&gt;
&lt;p&gt;We now click on the pipeline Step Forward button 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/step-forward-green.svg&#34; 
  title=&#34;Step forward&#34; 
  alt=&#34;step-forward-green.svg&#34;&gt;
 to single step the Text Converter &lt;em&gt;records&lt;/em&gt; element data through our xslt Translation. We see no change as an empty translation will just perform a copy of the input data.&lt;/p&gt;
&lt;p&gt;To correct this, we will author our xslt translation. Like the Data Splitter this is also authored incrementally. A minimum xslt translation might contain&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; ?&amp;gt;
&amp;lt;xsl:stylesheet 
    xpath-default-namespace=&amp;quot;records:2&amp;quot; 
    xmlns=&amp;quot;event-logging:3&amp;quot; 
    xmlns:stroom=&amp;quot;stroom&amp;quot; 
    xmlns:xsl=&amp;quot;http://www.w3.org/1999/XSL/Transform&amp;quot; 
    xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot; 
    xmlns:xs=&amp;quot;http://www.w3.org/2001/XMLSchema&amp;quot; 
    version=&amp;quot;3.0&amp;quot;&amp;gt;

  &amp;lt;!-- Ingest the records tree --&amp;gt;
  &amp;lt;xsl:template match=&amp;quot;records&amp;quot;&amp;gt;
    &amp;lt;Events xsi:schemaLocation=&amp;quot;event-logging:3 file://event-logging-v3.2.3.xsd&amp;quot; Version=&amp;quot;3.2.3&amp;quot;&amp;gt;
        &amp;lt;xsl:apply-templates /&amp;gt;
    &amp;lt;/Events&amp;gt;
  &amp;lt;/xsl:template&amp;gt;

    &amp;lt;!-- Only generate events if we have an url on input --&amp;gt;
    &amp;lt;xsl:template match=&amp;quot;record[data[@name = &#39;url&#39;]]&amp;quot;&amp;gt;
        &amp;lt;Event&amp;gt;
            &amp;lt;xsl:apply-templates select=&amp;quot;.&amp;quot; mode=&amp;quot;eventTime&amp;quot; /&amp;gt;
            &amp;lt;xsl:apply-templates select=&amp;quot;.&amp;quot; mode=&amp;quot;eventSource&amp;quot; /&amp;gt;
            &amp;lt;xsl:apply-templates select=&amp;quot;.&amp;quot; mode=&amp;quot;eventDetail&amp;quot; /&amp;gt;
        &amp;lt;/Event&amp;gt;
    &amp;lt;/xsl:template&amp;gt;

    &amp;lt;xsl:template match=&amp;quot;node()&amp;quot;  mode=&amp;quot;eventTime&amp;quot;&amp;gt;
        &amp;lt;EventTime&amp;gt;
            &amp;lt;TimeCreated/&amp;gt;
        &amp;lt;/EventTime&amp;gt;
    &amp;lt;/xsl:template&amp;gt;

    &amp;lt;xsl:template match=&amp;quot;node()&amp;quot;  mode=&amp;quot;eventSource&amp;quot;&amp;gt;
        &amp;lt;EventSource&amp;gt;
            &amp;lt;System&amp;gt;
                &amp;lt;Name  /&amp;gt;
                &amp;lt;Environment /&amp;gt;
            &amp;lt;/System&amp;gt;
            &amp;lt;Generator /&amp;gt;
            &amp;lt;Device /&amp;gt;
            &amp;lt;Client /&amp;gt;
            &amp;lt;Server /&amp;gt;
            &amp;lt;User&amp;gt;
                &amp;lt;Id /&amp;gt;
            &amp;lt;/User&amp;gt;
        &amp;lt;/EventSource&amp;gt;
    &amp;lt;/xsl:template&amp;gt;

    &amp;lt;xsl:template match=&amp;quot;node()&amp;quot;  mode=&amp;quot;eventDetail&amp;quot;&amp;gt;
        &amp;lt;EventDetail&amp;gt;
            &amp;lt;TypeId&amp;gt;SendToWebService&amp;lt;/TypeId&amp;gt;
            &amp;lt;Description /&amp;gt;
            &amp;lt;Classification /&amp;gt;
            &amp;lt;Send /&amp;gt;
        &amp;lt;/EventDetail&amp;gt;
    &amp;lt;/xsl:template&amp;gt;
&amp;lt;/xsl:stylesheet&amp;gt;
&lt;/code&gt;&lt;/pre&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-55.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-55.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-55.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-55.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Translation Minimal&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Clearly this doesnâ€™t generate useful events. Our first iterative change might be to generate the TimeCreated element value. The change would be&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;    &amp;lt;xsl:template match=&amp;quot;node()&amp;quot; mode=&amp;quot;eventTime&amp;quot;&amp;gt;
        &amp;lt;EventTime&amp;gt;
          &amp;lt;TimeCreated&amp;gt;
             &amp;lt;xsl:value-of select=&amp;quot;stroom:format-date(data[@name = &#39;time&#39;]/@value, &#39;dd/MMM/yyyy:HH:mm:ss XX&#39;)&amp;quot; /&amp;gt; 
          &amp;lt;/TimeCreated&amp;gt;
        &amp;lt;/EventTime&amp;gt;
    &amp;lt;/xsl:template&amp;gt;
&lt;/code&gt;&lt;/pre&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-56.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-56.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-56.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-56.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Translation Minimal+&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Adding in the EventSource elements (without ANY error checking!) as per&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;    &amp;lt;xsl:template match=&amp;quot;node()&amp;quot;  mode=&amp;quot;eventSource&amp;quot;&amp;gt;
        &amp;lt;EventSource&amp;gt;
            &amp;lt;System&amp;gt;
              &amp;lt;Name&amp;gt;
                &amp;lt;xsl:value-of select=&amp;quot;stroom:feed-attribute(&#39;System&#39;)&amp;quot;  /&amp;gt;
              &amp;lt;/Name&amp;gt;
              &amp;lt;Environment&amp;gt;
                &amp;lt;xsl:value-of select=&amp;quot;stroom:feed-attribute(&#39;Environment&#39;)&amp;quot;  /&amp;gt;
              &amp;lt;/Environment&amp;gt;
            &amp;lt;/System&amp;gt;
            &amp;lt;Generator&amp;gt;Apache  HTTPD&amp;lt;/Generator&amp;gt;
            &amp;lt;Device&amp;gt;
              &amp;lt;HostName&amp;gt;
                &amp;lt;xsl:value-of select=&amp;quot;stroom:feed-attribute(&#39;MyHost&#39;)&amp;quot;  /&amp;gt;
              &amp;lt;/HostName&amp;gt;
              &amp;lt;IPAddress&amp;gt;
                &amp;lt;xsl:value-of select=&amp;quot;stroom:feed-attribute(&#39;MyIPAddress&#39;)&amp;quot;  /&amp;gt;
              &amp;lt;/IPAddress&amp;gt;
            &amp;lt;/Device&amp;gt;
            &amp;lt;Client&amp;gt;
              &amp;lt;IPAddress&amp;gt;
                &amp;lt;xsl:value-of select=&amp;quot;data[@name =  &#39;clientip&#39;]/@value&amp;quot;  /&amp;gt;
              &amp;lt;/IPAddress&amp;gt;
              &amp;lt;Port&amp;gt;
                &amp;lt;xsl:value-of select=&amp;quot;data[@name =  &#39;clientport&#39;]/@value&amp;quot;  /&amp;gt;
              &amp;lt;/Port&amp;gt;
            &amp;lt;/Client&amp;gt;
            &amp;lt;Server&amp;gt;
              &amp;lt;HostName&amp;gt;
                &amp;lt;xsl:value-of select=&amp;quot;data[@name =  &#39;vserver&#39;]/@value&amp;quot;  /&amp;gt;
              &amp;lt;/HostName&amp;gt;
              &amp;lt;Port&amp;gt;
                &amp;lt;xsl:value-of select=&amp;quot;data[@name =  &#39;vserverport&#39;]/@value&amp;quot;  /&amp;gt;
              &amp;lt;/Port&amp;gt;
            &amp;lt;/Server&amp;gt;
            &amp;lt;User&amp;gt;
              &amp;lt;Id&amp;gt;
                &amp;lt;xsl:value-of select=&amp;quot;data[@name=&#39;user&#39;]/@value&amp;quot; /&amp;gt;
              &amp;lt;/Id&amp;gt;
            &amp;lt;/User&amp;gt;
        &amp;lt;/EventSource&amp;gt;
    &amp;lt;/xsl:template&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And after a Refresh Current Step 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/refresh-green.svg&#34; 
  title=&#34;Refresh&#34; 
  alt=&#34;refresh-green.svg&#34;&gt;
 we see our output event â€˜growâ€™ to&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-57.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-57.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-57.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-57.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Translation Minimal++&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;We now complete our translation by expanding the &lt;em&gt;EventDetail&lt;/em&gt; elements to have the completed translation of (again with limited error checking and non-existent documentation!)&lt;/p&gt;






&lt;div class=&#34;text-file card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;&#34;&gt;

  &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
    
    &lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; ?&amp;gt;
&amp;lt;xsl:stylesheet 
    xpath-default-namespace=&amp;quot;records:2&amp;quot; 
    xmlns=&amp;quot;event-logging:3&amp;quot; 
    xmlns:stroom=&amp;quot;stroom&amp;quot; 
    xmlns:xsl=&amp;quot;http://www.w3.org/1999/XSL/Transform&amp;quot; 
    xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot; 
    xmlns:xs=&amp;quot;http://www.w3.org/2001/XMLSchema&amp;quot; 
    version=&amp;quot;3.0&amp;quot;&amp;gt;

  &amp;lt;!-- Ingest the records tree --&amp;gt;
  &amp;lt;xsl:template match=&amp;quot;records&amp;quot;&amp;gt;
    &amp;lt;Events xsi:schemaLocation=&amp;quot;event-logging:3 file://event-logging-v3.2.3.xsd&amp;quot; Version=&amp;quot;3.2.3&amp;quot;&amp;gt;
        &amp;lt;xsl:apply-templates /&amp;gt;
    &amp;lt;/Events&amp;gt;
  &amp;lt;/xsl:template&amp;gt;

    &amp;lt;!-- Only generate events if we have an url on input --&amp;gt;
    &amp;lt;xsl:template match=&amp;quot;record[data[@name = &#39;url&#39;]]&amp;quot;&amp;gt;
        &amp;lt;Event&amp;gt;
            &amp;lt;xsl:apply-templates select=&amp;quot;.&amp;quot; mode=&amp;quot;eventTime&amp;quot; /&amp;gt;
            &amp;lt;xsl:apply-templates select=&amp;quot;.&amp;quot; mode=&amp;quot;eventSource&amp;quot; /&amp;gt;
            &amp;lt;xsl:apply-templates select=&amp;quot;.&amp;quot; mode=&amp;quot;eventDetail&amp;quot; /&amp;gt;
        &amp;lt;/Event&amp;gt;
    &amp;lt;/xsl:template&amp;gt;

    &amp;lt;xsl:template match=&amp;quot;node()&amp;quot; mode=&amp;quot;eventTime&amp;quot;&amp;gt;
        &amp;lt;EventTime&amp;gt;
          &amp;lt;TimeCreated&amp;gt;
             &amp;lt;xsl:value-of select=&amp;quot;stroom:format-date(data[@name = &#39;time&#39;]/@value, &#39;dd/MMM/yyyy:HH:mm:ss XX&#39;)&amp;quot; /&amp;gt; 
          &amp;lt;/TimeCreated&amp;gt;
        &amp;lt;/EventTime&amp;gt;
    &amp;lt;/xsl:template&amp;gt;

    &amp;lt;xsl:template match=&amp;quot;node()&amp;quot;  mode=&amp;quot;eventSource&amp;quot;&amp;gt;
        &amp;lt;EventSource&amp;gt;
            &amp;lt;System&amp;gt;
              &amp;lt;Name&amp;gt;
                &amp;lt;xsl:value-of select=&amp;quot;stroom:feed-attribute(&#39;System&#39;)&amp;quot;  /&amp;gt;
              &amp;lt;/Name&amp;gt;
              &amp;lt;Environment&amp;gt;
                &amp;lt;xsl:value-of select=&amp;quot;stroom:feed-attribute(&#39;Environment&#39;)&amp;quot;  /&amp;gt;
              &amp;lt;/Environment&amp;gt;
            &amp;lt;/System&amp;gt;
            &amp;lt;Generator&amp;gt;Apache  HTTPD&amp;lt;/Generator&amp;gt;
            &amp;lt;Device&amp;gt;
              &amp;lt;HostName&amp;gt;
                &amp;lt;xsl:value-of select=&amp;quot;stroom:feed-attribute(&#39;MyHost&#39;)&amp;quot;  /&amp;gt;
              &amp;lt;/HostName&amp;gt;
              &amp;lt;IPAddress&amp;gt;
                &amp;lt;xsl:value-of select=&amp;quot;stroom:feed-attribute(&#39;MyIPAddress&#39;)&amp;quot;  /&amp;gt;
              &amp;lt;/IPAddress&amp;gt;
            &amp;lt;/Device&amp;gt;
            &amp;lt;Client&amp;gt;
              &amp;lt;IPAddress&amp;gt;
                &amp;lt;xsl:value-of select=&amp;quot;data[@name =  &#39;clientip&#39;]/@value&amp;quot;  /&amp;gt;
              &amp;lt;/IPAddress&amp;gt;
              &amp;lt;Port&amp;gt;
                &amp;lt;xsl:value-of select=&amp;quot;data[@name =  &#39;clientport&#39;]/@value&amp;quot;  /&amp;gt;
              &amp;lt;/Port&amp;gt;
            &amp;lt;/Client&amp;gt;
            &amp;lt;Server&amp;gt;
              &amp;lt;HostName&amp;gt;
                &amp;lt;xsl:value-of select=&amp;quot;data[@name =  &#39;vserver&#39;]/@value&amp;quot;  /&amp;gt;
              &amp;lt;/HostName&amp;gt;
              &amp;lt;Port&amp;gt;
                &amp;lt;xsl:value-of select=&amp;quot;data[@name =  &#39;vserverport&#39;]/@value&amp;quot;  /&amp;gt;
              &amp;lt;/Port&amp;gt;
            &amp;lt;/Server&amp;gt;
            &amp;lt;User&amp;gt;
              &amp;lt;Id&amp;gt;
                &amp;lt;xsl:value-of select=&amp;quot;data[@name=&#39;user&#39;]/@value&amp;quot; /&amp;gt;
              &amp;lt;/Id&amp;gt;
            &amp;lt;/User&amp;gt;
        &amp;lt;/EventSource&amp;gt;
    &amp;lt;/xsl:template&amp;gt;


    &amp;lt;!-- --&amp;gt;
    &amp;lt;xsl:template match=&amp;quot;node()&amp;quot;  mode=&amp;quot;eventDetail&amp;quot;&amp;gt;
        &amp;lt;EventDetail&amp;gt;
          &amp;lt;TypeId&amp;gt;SendToWebService&amp;lt;/TypeId&amp;gt;
          &amp;lt;Description&amp;gt;Send/Access data to Web Service&amp;lt;/Description&amp;gt;
          &amp;lt;Classification&amp;gt;
            &amp;lt;Text&amp;gt;UNCLASSIFIED&amp;lt;/Text&amp;gt;
          &amp;lt;/Classification&amp;gt;
          &amp;lt;Send&amp;gt;
            &amp;lt;Source&amp;gt;
              &amp;lt;Device&amp;gt;
                &amp;lt;IPAddress&amp;gt;
                    &amp;lt;xsl:value-of select=&amp;quot;data[@name = &#39;clientip&#39;]/@value&amp;quot;/&amp;gt;
                &amp;lt;/IPAddress&amp;gt;
                &amp;lt;Port&amp;gt;
                    &amp;lt;xsl:value-of select=&amp;quot;data[@name = &#39;vserverport&#39;]/@value&amp;quot;/&amp;gt;
                &amp;lt;/Port&amp;gt;
              &amp;lt;/Device&amp;gt;
            &amp;lt;/Source&amp;gt;
            &amp;lt;Destination&amp;gt;
              &amp;lt;Device&amp;gt;
                &amp;lt;HostName&amp;gt;
                    &amp;lt;xsl:value-of select=&amp;quot;data[@name = &#39;vserver&#39;]/@value&amp;quot;/&amp;gt;
                &amp;lt;/HostName&amp;gt;
                &amp;lt;Port&amp;gt;
                    &amp;lt;xsl:value-of select=&amp;quot;data[@name = &#39;vserverport&#39;]/@value&amp;quot;/&amp;gt;
                &amp;lt;/Port&amp;gt;
              &amp;lt;/Device&amp;gt;
            &amp;lt;/Destination&amp;gt;
            &amp;lt;Payload&amp;gt;
              &amp;lt;Resource&amp;gt;
                &amp;lt;URL&amp;gt;
                    &amp;lt;xsl:value-of select=&amp;quot;data[@name = &#39;url&#39;]/@value&amp;quot;/&amp;gt;
                &amp;lt;/URL&amp;gt;
                &amp;lt;Referrer&amp;gt;
                    &amp;lt;xsl:value-of select=&amp;quot;data[@name = &#39;referer&#39;]/@value&amp;quot;/&amp;gt;
                &amp;lt;/Referrer&amp;gt;
                &amp;lt;HTTPMethod&amp;gt;
                    &amp;lt;xsl:value-of select=&amp;quot;data[@name = &#39;url&#39;]/data[@name = &#39;httpMethod&#39;]/@value&amp;quot;/&amp;gt;
                &amp;lt;/HTTPMethod&amp;gt;
                &amp;lt;HTTPVersion&amp;gt;
                    &amp;lt;xsl:value-of select=&amp;quot;data[@name = &#39;url&#39;]/data[@name = &#39;version&#39;]/@value&amp;quot;/&amp;gt;
                &amp;lt;/HTTPVersion&amp;gt;
                &amp;lt;UserAgent&amp;gt;
                    &amp;lt;xsl:value-of select=&amp;quot;data[@name = &#39;userAgent&#39;]/@value&amp;quot;/&amp;gt;
                &amp;lt;/UserAgent&amp;gt;
                &amp;lt;InboundSize&amp;gt;
                    &amp;lt;xsl:value-of select=&amp;quot;data[@name = &#39;bytesIn&#39;]/@value&amp;quot;/&amp;gt;
                &amp;lt;/InboundSize&amp;gt;
                &amp;lt;OutboundSize&amp;gt;
                    &amp;lt;xsl:value-of select=&amp;quot;data[@name = &#39;bytesOut&#39;]/@value&amp;quot;/&amp;gt;
                &amp;lt;/OutboundSize&amp;gt;
                &amp;lt;OutboundContentSize&amp;gt;
                    &amp;lt;xsl:value-of select=&amp;quot;data[@name = &#39;bytesOutContent&#39;]/@value&amp;quot;/&amp;gt;
                &amp;lt;/OutboundContentSize&amp;gt;
                &amp;lt;RequestTime&amp;gt;
                    &amp;lt;xsl:value-of select=&amp;quot;data[@name = &#39;timeM&#39;]/@value&amp;quot;/&amp;gt;
                &amp;lt;/RequestTime&amp;gt;
                &amp;lt;ConnectionStatus&amp;gt;
                    &amp;lt;xsl:value-of select=&amp;quot;data[@name = &#39;constatus&#39;]/@value&amp;quot;/&amp;gt;
                &amp;lt;/ConnectionStatus&amp;gt;
                &amp;lt;InitialResponseCode&amp;gt;
                    &amp;lt;xsl:value-of select=&amp;quot;data[@name = &#39;responseB&#39;]/@value&amp;quot;/&amp;gt;
                &amp;lt;/InitialResponseCode&amp;gt;
                &amp;lt;ResponseCode&amp;gt;
                    &amp;lt;xsl:value-of select=&amp;quot;data[@name = &#39;response&#39;]/@value&amp;quot;/&amp;gt;
                &amp;lt;/ResponseCode&amp;gt;
                &amp;lt;Data Name=&amp;quot;Protocol&amp;quot;&amp;gt;
                  &amp;lt;xsl:attribute select=&amp;quot;data[@name = &#39;url&#39;]/data[@name = &#39;protocol&#39;]/@value&amp;quot; name=&amp;quot;Value&amp;quot;/&amp;gt;
                &amp;lt;/Data&amp;gt;
              &amp;lt;/Resource&amp;gt;
            &amp;lt;/Payload&amp;gt;
            &amp;lt;!-- Normally our translation at this point would contain an &amp;lt;Outcome&amp;gt; attribute.
            Since all our sample data includes only successful outcomes we have ommitted the &amp;lt;Outcome&amp;gt; attribute 
            in the translation to minimise complexity--&amp;gt;
          &amp;lt;/Send&amp;gt;
        &amp;lt;/EventDetail&amp;gt;
    &amp;lt;/xsl:template&amp;gt;
&amp;lt;/xsl:stylesheet&amp;gt;

&lt;/code&gt;&lt;/pre&gt;


    &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
    &lt;div class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;
      
      &lt;span class=&#34;&#34; style=&#34;font-size: smaller&#34;&gt;Apache BlackBox Translation XSLT&lt;/span&gt;
      
      (
      &lt;a href=&#34;../../files/HOWTOs/EventFeeds/CreateApacheHTTPDEventFeed/ApacheHTTPDBlackBox-TranslationXSLT.txt&#34; class=&#34;&#34; style=&#34;font-size: smaller&#34;&gt;Download ApacheHTTPDBlackBox-TranslationXSLT.txt&lt;/a&gt;
      &lt;i class=&#34;external-link-icon fas fa-file-download fa-sm text-secondary&#34; title=&#34;External link&#34;&gt;&lt;/i&gt;
      )
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;And after a Refresh Current Step 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/refresh-green.svg&#34; 
  title=&#34;Refresh&#34; 
  alt=&#34;refresh-green.svg&#34;&gt;
 we see the completed &lt;code&gt;&amp;lt;EventDetail&amp;gt;&lt;/code&gt; section of our output event&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-58.png&#34; href=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-58.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/v6/UI-ApacheHttpEventFeed-58.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/v6/UI-ApacheHttpEventFeed-58.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Translation Complete&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Note, you should now Save 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/save.svg&#34; 
  title=&#34;Save&#34; 
  alt=&#34;save.svg&#34;&gt;
 your edited xslt Translation.&lt;/p&gt;
&lt;p&gt;We have completed the translation and have completed developing our Apache-SSLBlackBox-V2.0-EVENTS event feed.&lt;/p&gt;
&lt;p&gt;At this point, this event feed is set up to accept Raw Event data, but it will not automatically process the raw data and hence it will not place events into the Event Store. To have Stroom automatically process Raw Event streams, you will need to enable Processors for this pipeline.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Event Processing</title>
      <link>/docs/howtos/eventfeeds/processinghowto/</link>
      <pubDate>Fri, 09 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>/docs/howtos/eventfeeds/processinghowto/</guid>
      <description>
        
        
        &lt;!-- Created with Stroom v6.1-beta.16 --&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;This HOWTO is provided to assist users in setting up Stroom to process inbound raw event logs and transform them into the Stroom Event Logging XML Schema.&lt;/p&gt;
&lt;p&gt;This HOWTO will demonstrate the process by which an Event Processing pipeline for a given Event Source is developed and deployed.&lt;/p&gt;
&lt;p&gt;The sample event source used will be based on BlueCoat Proxy logs.
An extract of BlueCoat logs were sourced from 





&lt;span class=&#34;external-link&#34;&gt;
&lt;a href=&#34;http://log-sharing.dreamhosters.com&#34; class=&#34;&#34; style=&#34;&#34;&gt;log-sharing.dreamhosters.com&lt;/a&gt;
&lt;i class=&#34;external-link-icon fas fa-external-link-alt fa-sm text-secondary&#34; title=&#34;External link&#34;&gt;&lt;/i&gt;
&lt;/span&gt;
 (a Public Security Log Sharing Site) but modified to add sample user attribution.&lt;/p&gt;
&lt;p&gt;Template pipelines are being used to simplify the establishment of this processing pipeline.&lt;/p&gt;
&lt;p&gt;The sample BlueCoat Proxy log will be transformed into an intermediate simple XML key value pair structure, then into the 





&lt;span class=&#34;external-link&#34;&gt;
&lt;a href=&#34;https://github.com/gchq/event-logging-schema&#34; class=&#34;&#34; style=&#34;&#34;&gt;Stroom Event Logging XML Schema&lt;/a&gt;
&lt;i class=&#34;external-link-icon fas fa-external-link-alt fa-sm text-secondary&#34; title=&#34;External link&#34;&gt;&lt;/i&gt;
&lt;/span&gt;
 format.&lt;/p&gt;
&lt;h2 id=&#34;assumptions&#34;&gt;Assumptions&lt;/h2&gt;
&lt;p&gt;The following assumptions are used in this document.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The user successfully deployed Stroom&lt;/li&gt;
&lt;li&gt;The following Stroom content packages have been installed:
&lt;ul&gt;
&lt;li&gt;Template Pipelines&lt;/li&gt;
&lt;li&gt;XML Schemas&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;event-source&#34;&gt;Event Source&lt;/h2&gt;
&lt;p&gt;As mentioned, we will use BlueCoat Proxy logs as a sample event source.
Although BlueCoat logs can be customised, the default is to use the W2C Extended Log File Format (ELF).
Our sample data set looks like&lt;/p&gt;






&lt;div class=&#34;text-file card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;&#34;&gt;

  &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
    
    &lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;#Software: SGOS 3.2.4.28
#Version: 1.0
#Date: 2005-04-27 20:57:09
#Fields: date time time-taken c-ip sc-status s-action sc-bytes cs-bytes cs-method cs-uri-scheme cs-host cs-uri-path cs-uri-query cs-username s-hierarchy s-supplier-name rs(Content-Type) cs(User-Agent) sc-filter-result sc-filter-category x-virus-id s-ip s-sitename x-virus-details x-icap-error-code x-icap-error-details
2005-05-04 17:16:12 1 45.110.2.82 200 TCP_HIT 941 729 GET http www.inmobus.com /wcm/assets/images/imagefileicon.gif - george DIRECT 38.112.92.20 image/gif &amp;quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322)&amp;quot; PROXIED none - 192.16.170.42 SG-HTTP-Service - none -
2005-05-04 17:16:12 2 45.110.2.82 200 TCP_HIT 941 729 GET http www.inmobus.com /wcm/assets/images/imagefileicon.gif - george DIRECT 38.112.92.20 image/gif &amp;quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322)&amp;quot; PROXIED none - 192.16.170.42 SG-HTTP-Service - none -
2005-05-04 17:16:12 2 45.110.2.82 200 TCP_HIT 941 729 GET http www.inmobus.com /wcm/assets/images/imagefileicon.gif - george DIRECT 38.112.92.20 image/gif &amp;quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322)&amp;quot; PROXIED none - 192.16.170.42 SG-HTTP-Service - none -
2005-05-04 17:16:12 1 45.110.2.82 200 TCP_HIT 941 729 GET http www.inmobus.com /wcm/assets/images/imagefileicon.gif - george DIRECT 38.112.92.20 image/gif &amp;quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322)&amp;quot; PROXIED none - 192.16.170.42 SG-HTTP-Service - none -
2005-05-04 17:16:12 1 45.110.2.82 200 TCP_HIT 941 729 GET http www.inmobus.com /wcm/assets/images/imagefileicon.gif - george DIRECT 38.112.92.20 image/gif &amp;quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322)&amp;quot; PROXIED none - 192.16.170.42 SG-HTTP-Service - none -
2005-05-04 17:16:12 1 45.110.2.82 200 TCP_HIT 941 729 GET http www.inmobus.com /wcm/assets/images/imagefileicon.gif - george DIRECT 38.112.92.20 image/gif &amp;quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322)&amp;quot; PROXIED none - 192.16.170.42 SG-HTTP-Service - none -
2005-05-04 17:16:12 51 45.14.4.127 200 TCP_NC_MISS 926 1104 GET http images.google.com /imgres ?imgurl=http://www.bettercomponents.be/images/linux-logo.gif&amp;amp;imgrefurl=http://www.bettercomponents.be/index.php%253FcPath%253D96&amp;amp;h=360&amp;amp;w=327&amp;amp;sz=132&amp;amp;tbnid=UKfPlBMXgToJ:&amp;amp;tbnh=117&amp;amp;tbnw=106&amp;amp;hl=en&amp;amp;prev=/images%253Fq%253Dlinux%252Blogo%2526hl%253Den%2526lr%253D&amp;amp;frame=small sally DIRECT images.google.com text/html &amp;quot;Mozilla/5.0 (Macintosh; U; PPC Mac OS X; en) AppleWebKit/312.1 (KHTML, like Gecko) Safari/312&amp;quot; PROXIED Hacking/Proxy%20Avoidance - 192.16.170.42 SG-HTTP-Service - none -
2005-05-04 17:16:12 2 45.110.2.82 200 TCP_HIT 941 729 GET http www.inmobus.com /wcm/assets/images/imagefileicon.gif - george DIRECT 38.112.92.20 image/gif &amp;quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322)&amp;quot; PROXIED none - 192.16.170.42 SG-HTTP-Service - none -
2005-05-04 17:16:12 1 45.110.2.82 200 TCP_HIT 941 729 GET http www.inmobus.com /wcm/assets/images/imagefileicon.gif - george DIRECT 38.112.92.20 image/gif &amp;quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322)&amp;quot; PROXIED none - 192.16.170.42 SG-HTTP-Service - none -
2005-05-04 17:16:12 2 45.110.2.82 200 TCP_HIT 941 729 GET http www.inmobus.com /wcm/assets/images/imagefileicon.gif - george DIRECT 38.112.92.20 image/gif &amp;quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322)&amp;quot; PROXIED none - 192.16.170.42 SG-HTTP-Service - none -
2005-05-04 17:16:12 1 45.110.2.82 200 TCP_HIT 941 729 GET http www.inmobus.com /wcm/assets/images/imagefileicon.gif - george DIRECT 38.112.92.20 image/gif &amp;quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322)&amp;quot; PROXIED none - 192.16.170.42 SG-HTTP-Service - none -
2005-05-04 17:16:12 2 45.110.2.82 200 TCP_HIT 941 729 GET http www.inmobus.com /wcm/assets/images/imagefileicon.gif - george DIRECT 38.112.92.20 image/gif &amp;quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322)&amp;quot; PROXIED none - 192.16.170.42 SG-HTTP-Service - none -
2005-05-04 17:16:12 1 45.110.2.82 200 TCP_HIT 941 729 GET http www.inmobus.com /wcm/assets/images/imagefileicon.gif - george DIRECT 38.112.92.20 image/gif &amp;quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322)&amp;quot; PROXIED none - 192.16.170.42 SG-HTTP-Service - none -
2005-05-04 17:16:12 1 45.110.2.82 200 TCP_HIT 941 729 GET http www.inmobus.com /wcm/assets/images/imagefileicon.gif - george DIRECT 38.112.92.20 image/gif &amp;quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322)&amp;quot; PROXIED none - 192.16.170.42 SG-HTTP-Service - none -
2005-05-04 17:16:12 1 45.110.2.82 200 TCP_HIT 941 729 GET http www.inmobus.com /wcm/assets/images/imagefileicon.gif - george DIRECT 38.112.92.20 image/gif &amp;quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322)&amp;quot; PROXIED none - 192.16.170.42 SG-HTTP-Service - none -
2005-05-04 17:16:12 1 45.110.2.82 200 TCP_HIT 941 729 GET http www.inmobus.com /wcm/assets/images/imagefileicon.gif - george DIRECT 38.112.92.20 image/gif &amp;quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322)&amp;quot; PROXIED none - 192.16.170.42 SG-HTTP-Service - none -
2005-05-04 17:16:12 98 45.14.3.52 200 TCP_HIT 14258 321 GET http www.cedardalechurch.ca /birdscp2.gif - brad DIRECT 209.135.103.13 image/gif &amp;quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)&amp;quot; PROXIED none - 192.16.170.42 SG-HTTP-Service - none -
2005-05-04 17:16:12 1 45.110.2.82 200 TCP_HIT 941 729 GET http www.inmobus.com /wcm/assets/images/imagefileicon.gif - george DIRECT 38.112.92.20 image/gif &amp;quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322)&amp;quot; PROXIED none - 192.16.170.42 SG-HTTP-Service - none -
2005-05-04 17:16:12 2 45.110.2.82 200 TCP_HIT 941 729 GET http www.inmobus.com /wcm/assets/images/imagefileicon.gif - george DIRECT 38.112.92.20 image/gif &amp;quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322)&amp;quot; PROXIED none - 192.16.170.42 SG-HTTP-Service - none -
2005-05-04 17:16:12 2717 45.110.2.82 200 TCP_NC_MISS 3926 1051 GET http www.inmobus.com /wcm/isocket/iSocket.cfm ?requestURL=http://www.inmobus.com/wcm/html/../isocket/image_manager_search.cfm?dsn=InmobusWCM&amp;amp;projectid=26&amp;amp;SetModule=WCM&amp;amp;iSocketAction=response&amp;amp;responseContainer=leftTopDiv george DIRECT www.inmobus.com text/html;%20charset=UTF-8 &amp;quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322)&amp;quot; PROXIED none - 192.16.170.42 SG-HTTP-Service - none -
2005-05-04 17:16:12 1 45.110.2.82 200 TCP_HIT 941 729 GET http www.inmobus.com /wcm/assets/images/imagefileicon.gif - george DIRECT 38.112.92.20 image/gif &amp;quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322)&amp;quot; PROXIED none - 192.16.170.42 SG-HTTP-Service - none -
2005-05-04 17:16:12 1 45.110.2.82 200 TCP_HIT 941 729 GET http www.inmobus.com /wcm/assets/images/imagefileicon.gif - george DIRECT 38.112.92.20 image/gif &amp;quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322)&amp;quot; PROXIED none - 192.16.170.42 SG-HTTP-Service - none -
2005-05-04 17:16:12 47 45.14.4.127 200 TCP_NC_MISS 2620 926 GET http images.google.com /images ?q=tbn:UKfPlBMXgToJ:http://www.bettercomponents.be/images/linux-logo.gif jane DIRECT images.google.com image/jpeg &amp;quot;Mozilla/5.0 (Macintosh; U; PPC Mac OS X; en) AppleWebKit/312.1 (KHTML, like Gecko) Safari/312&amp;quot; PROXIED Hacking/Proxy%20Avoidance - 192.16.170.42 SG-HTTP-Service - none -
2005-05-04 17:16:12 1 45.110.2.82 200 TCP_HIT 941 729 GET http www.inmobus.com /wcm/assets/images/imagefileicon.gif - george DIRECT 38.112.92.20 image/gif &amp;quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322)&amp;quot; PROXIED none - 192.16.170.42 SG-HTTP-Service - none -
2005-05-04 17:16:13 139 45.112.2.73 207 TCP_NC_MISS 819 418 PROPFIND http idisk.mac.com /patrickarnold/Public/Show - bill DIRECT idisk.mac.com text/xml;charset=utf-8 &amp;quot;WebDAVFS/1.2.7 (01278000) Darwin/7.8.0 (Power Macintosh)&amp;quot; PROXIED Computers/Internet - 192.16.170.42 SG-HTTP-Service - none -
2005-05-04 17:16:13 2 45.106.2.66 200 TCP_HIT 559 348 GET http aim-charts.pf.aol.com / ?action=aim&amp;amp;fields=snpghlocvAa&amp;amp;syms=INDEX:COMPX,INDEX:INDU,INDEX:INX,TWX sally DIRECT 205.188.136.217 text/plain &amp;quot;AIM/30 (Mozilla 1.24b; Windows; I; 32-bit)&amp;quot; PROXIED Web%20Communications - 192.16.170.42 SG-HTTP-Service - none -
2005-05-04 17:16:13 9638 45.106.3.71 200 TCP_NC_MISS 46052 1921 POST http home.silverstar.com /cgi-bin/mailman.cgi - carol DIRECT home.silverstar.com text/html &amp;quot;Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.7.6) Gecko/20050317 Firefox/1.0.2&amp;quot; PROXIED Computers/Internet - 192.16.170.42 SG-HTTP-Service - none -
2005-05-04 17:16:13 173 45.112.2.73 207 TCP_NC_MISS 647 436 PROPFIND http idisk.mac.com /patrickarnold/Public/Show/nuvio_05_what.swf - bill DIRECT idisk.mac.com text/xml;charset=utf-8 &amp;quot;WebDAVFS/1.2.7 (01278000) Darwin/7.8.0 (Power Macintosh)&amp;quot; PROXIED Computers/Internet - 192.16.170.42 SG-HTTP-Service - none -
2005-05-04 17:17:26 495 45.108.2.100 401 TCP_NC_MISS 1007 99884 PUT http idisk.mac.com /fayray_account_transfer_holding_area_for_pictures_to_homepage_temporary/Documents/85bT9bmviawEbbBb4Sie/Image-2743371ABCC011D9.jpg - - DIRECT idisk.mac.com text/html;charset=iso-8859-1 &amp;quot;DotMacKit/1.1 (10.4.0; iPho)&amp;quot; PROXIED Computers/Internet - 192.16.170.42 SG-HTTP-Service - none -

&lt;/code&gt;&lt;/pre&gt;


    &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
    &lt;div class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;
      
      &lt;span class=&#34;&#34; style=&#34;font-size: smaller&#34;&gt;Sample BlueCoat logs&lt;/span&gt;
      
      (
      &lt;a href=&#34;../../files/HOWTOs/EventFeeds/ProcessingHowTo/sampleBluecoat.log&#34; class=&#34;&#34; style=&#34;font-size: smaller&#34;&gt;Download sampleBluecoat.log&lt;/a&gt;
      &lt;i class=&#34;external-link-icon fas fa-file-download fa-sm text-secondary&#34; title=&#34;External link&#34;&gt;&lt;/i&gt;
      )
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Later in this HOWTO, one will be required to upload this file.
If you save this file now, ensure the file is saved
as a text document with ANSI encoding.&lt;/p&gt;
&lt;h2 id=&#34;establish-the-processing-pipeline&#34;&gt;Establish the Processing Pipeline&lt;/h2&gt;
&lt;p&gt;We will create the components that make up the processing pipeline for transforming these raw logs into the Stroom Event Logging XML Schema.
They will be placed a folder appropriately named &lt;strong&gt;BlueCoat&lt;/strong&gt; in the path &lt;strong&gt;System/Event Sources/Proxy&lt;/strong&gt;.
See &lt;a href=&#34;../../docs/howtos/general/feedmanagementhowto/#create-folder-for-specific-event-source&#34;&gt;Folder Creation&lt;/a&gt; for details on creating such a folder.&lt;/p&gt;
&lt;p&gt;There will be four components&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the Event Feed to group the BlueCoat log files&lt;/li&gt;
&lt;li&gt;the Text Converter to convert the BlueCoat raw logs files into simple XML&lt;/li&gt;
&lt;li&gt;the XSLT Translation to translate the simple XML formed by the Text Converter into the Stroom Event Logging XML form, and&lt;/li&gt;
&lt;li&gt;the Processing pipeline which manages how the processing is performed.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All components will have the same Name &lt;strong&gt;BlueCoat-Proxy-V1.0-EVENTS&lt;/strong&gt;.
It should be noted that the default Stroom FeedName pattern will not accept this name.
One needs to modify the &lt;code&gt;stroom.feedNamePattern&lt;/code&gt; stroom property to change the default pattern to &lt;code&gt;^[a-zA-Z0-9_-\.]{3,}$&lt;/code&gt;.
See the &lt;a href=&#34;../../docs/howtos/administration/systemproperties/&#34;&gt;HOWTO on System Properties&lt;/a&gt; docment to see how to make this change.&lt;/p&gt;
&lt;h3 id=&#34;create-the-event-feed&#34;&gt;Create the Event Feed&lt;/h3&gt;
&lt;p&gt;We first select (with a &lt;em&gt;left click&lt;/em&gt;) the &lt;strong&gt;System/Event Sources/Proxy/BlueCoat&lt;/strong&gt; folder in the &lt;code&gt;Explorer&lt;/code&gt; tab then &lt;em&gt;right click&lt;/em&gt; and select:&lt;/p&gt;
&lt;p&gt;










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/add.svg&#34; 
  title=&#34;New&#34; 
  alt=&#34;add.svg&#34;&gt;
 &lt;em&gt;New&lt;/em&gt; =&amp;gt; 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/document/Feed.svg&#34; 
  title=&#34;Feed&#34; 
  alt=&#34;document/Feed.svg&#34;&gt;
 &lt;em&gt;Feed&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This will open the &lt;code&gt;New Feed&lt;/code&gt; configuration window into which we enter &lt;strong&gt;BlueCoat-Proxy-V1.0-EVENTS&lt;/strong&gt; into the &lt;code&gt;Name:&lt;/code&gt; entry box&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-00.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-00.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-00.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-00.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - New feed configuration window enter name&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;and press 



&lt;span class=&#34;stroom-button&#34; title=&#34;Ok button&#34; &gt;
  &lt;span class=&#34;stroom-button-text&#34;&gt;Ok&lt;/span&gt;
&lt;/span&gt;
 to see the new Event Feed tab&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-01.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-01.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-01.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-01.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - New feed tab&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;and it&amp;rsquo;s corresponding reference in the &lt;code&gt;Explorer&lt;/code&gt; display.&lt;/p&gt;
&lt;p&gt;The configuration items for a Event Feed are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Description&lt;/em&gt; - a description of the feed&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Classification&lt;/em&gt; - the classification or sensitivity of the Event Feed data&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Reference Feed Flag&lt;/em&gt; - to indicate if this is a &lt;code&gt;Reference Feed&lt;/code&gt; or not&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Feed Status&lt;/em&gt; - which indicates if we accept data, reject it or silently drop it&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Stream Type&lt;/em&gt; - to indicate if the &lt;code&gt;Feed&lt;/code&gt; contains raw log data or reference data&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Data Encoding&lt;/em&gt; - the character encoding of the data being sent to the &lt;code&gt;Feed&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Context Encoding&lt;/em&gt; - the character encoding of context data associated with this &lt;code&gt;Feed&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Retention Period&lt;/em&gt; - the amount of time to retain the Event data&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In our example, we will set the above to&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Description&lt;/em&gt; - &lt;em&gt;BlueCoat Proxy log data sent in W2C Extended Log File Format (ELFF)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Classification&lt;/em&gt; - We will leave this blank&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Reference Feed Flag&lt;/em&gt; - We leave the check-box unchecked as this is not a &lt;em&gt;Reference Feed&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Feed Status&lt;/em&gt; - We set to &lt;em&gt;Receive&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Stream Type&lt;/em&gt; - We set to &lt;em&gt;Raw Events&lt;/em&gt; as we will be sending batches (streams) of raw event logs&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Data Encoding&lt;/em&gt; - We leave at the default of &lt;em&gt;UTF-8&lt;/em&gt; as this is the proposed character encoding&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Context Encoding&lt;/em&gt; - We leave at the default of &lt;em&gt;UTF-8&lt;/em&gt; as there are no Context Events for this Feed&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Retention Period&lt;/em&gt; - We leave at &lt;em&gt;Forever&lt;/em&gt; was we do not want to delete any collected BlueCoat event data.&lt;/li&gt;
&lt;/ul&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-02.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-02.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-02.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-02.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - New feed tab configuration&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;One should note that the &lt;code&gt;Feed&lt;/code&gt; tab 







  



  






&lt;span class=&#34;stroom-tab stroom-tab-active&#34; title=&#34;Feed tab - &#39;BlueCoat-Proxy-V1.0-EVENTS&#39;&#34; &gt;
  &lt;img
    class=&#34;stroom-icon&#34; 
    src=&#34;../../images/stroom-ui/document/Feed.svg&#34; 
    title=&#34;BlueCoat-Proxy-V1.0-EVENTS&#34; 
    alt=&#34;Feed.svg&#34;&gt;
  &lt;span class=&#34;stroom-tab-name&#34;&gt;* BlueCoat-Proxy-V1.0-EVENTS&lt;/span&gt;
  &lt;span class=&#34;stroom-tab-cross&#34;&gt;Ã—&lt;/span&gt;
&lt;/span&gt;
 has been marked as having unsaved changes.
This is indicated by the asterisk character &lt;code&gt;*&lt;/code&gt; between the &lt;em&gt;Feed&lt;/em&gt; icon 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/document/Feed.svg&#34; 
  title=&#34;Feed&#34; 
  alt=&#34;document/Feed.svg&#34;&gt;
 and the name of the feed &lt;strong&gt;BlueCoat-Proxy-V1.0-EVENTS&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;We can save the changes to our feed by pressing the &lt;em&gt;Save&lt;/em&gt; icon 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/save.svg&#34; 
  title=&#34;Save&#34; 
  alt=&#34;save.svg&#34;&gt;
 in the top left of the &lt;strong&gt;BlueCoat-Proxy-V1.0-EVENTS&lt;/strong&gt; tab.
At this point one should notice two things, the first is that the asterisk
has disappeared from the &lt;code&gt;Feed&lt;/code&gt; tab and the the second is that the &lt;em&gt;Save&lt;/em&gt; icon 






  





&lt;img 
  class=&#34;stroom-icon stroom-icon-disabled&#34; 
  src=&#34;../../images/stroom-ui/save.svg&#34; 
  title=&#34;Save&#34; 
  alt=&#34;save.svg&#34;&gt;
 is now disabled.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-03.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-03.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-03.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-03.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - New feed tab saved&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;h3 id=&#34;create-the-text-converter&#34;&gt;Create the Text Converter&lt;/h3&gt;
&lt;p&gt;We now create the Text Converter for this &lt;code&gt;Feed&lt;/code&gt; in a similar fashion to the &lt;code&gt;Event Feed&lt;/code&gt;.
We first select (with a &lt;em&gt;left click&lt;/em&gt;) the &lt;strong&gt;System/Event Sources/Proxy/BlueCoat&lt;/strong&gt; folder in the &lt;code&gt;Explorer&lt;/code&gt; tab then &lt;em&gt;right click&lt;/em&gt; and select&lt;/p&gt;
&lt;p&gt;










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/add.svg&#34; 
  title=&#34;New&#34; 
  alt=&#34;add.svg&#34;&gt;
 &lt;em&gt;New&lt;/em&gt; =&amp;gt; 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/document/TextConverter.svg&#34; 
  title=&#34;Text converter&#34; 
  alt=&#34;document/TextConverter.svg&#34;&gt;
 &lt;em&gt;Text Converter&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Enter &lt;strong&gt;BlueCoat-Proxy-V1.0-EVENTS&lt;/strong&gt; into the &lt;code&gt;Name:&lt;/code&gt; entry box and press the 



&lt;span class=&#34;stroom-button&#34; title=&#34;Ok button&#34; &gt;
  &lt;span class=&#34;stroom-button-text&#34;&gt;Ok&lt;/span&gt;
&lt;/span&gt;
 which results in the creation of the Text Converter tab&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-04.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-04.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-04.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-04.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - New TextConverter tab&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;and it&amp;rsquo;s corresponding reference in the &lt;code&gt;Explorer&lt;/code&gt; display.&lt;/p&gt;
&lt;p&gt;We set the configuration for this &lt;code&gt;Text Converter&lt;/code&gt; to be&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Description - &lt;em&gt;Simple XML transform for BlueCoat Proxy log data sent in W2C Extended Log File Format (ELFF)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Converter Type - We set to &lt;em&gt;Data Splitter&lt;/em&gt; was we will be using the Stroom Data Splitter facility to convert the raw log data into simple XML.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Again, press the &lt;em&gt;Save&lt;/em&gt; icon 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/save.svg&#34; 
  title=&#34;Save&#34; 
  alt=&#34;save.svg&#34;&gt;
 to save the configuration items.&lt;/p&gt;
&lt;h3 id=&#34;create-the-xslt-translation&#34;&gt;Create the XSLT Translation&lt;/h3&gt;
&lt;p&gt;We now create the XSLT translation for this &lt;code&gt;Feed&lt;/code&gt; in a similar fashion to the &lt;code&gt;Event Feed&lt;/code&gt; or &lt;code&gt;Text Converter&lt;/code&gt;.
We first select (with a &lt;em&gt;left click&lt;/em&gt;) the &lt;strong&gt;System/Event Sources/Proxy/BlueCoat&lt;/strong&gt; folder in the &lt;code&gt;Explorer&lt;/code&gt; tab then &lt;em&gt;right click&lt;/em&gt; and select:&lt;/p&gt;
&lt;p&gt;










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/add.svg&#34; 
  title=&#34;New&#34; 
  alt=&#34;add.svg&#34;&gt;
 &lt;em&gt;New&lt;/em&gt; =&amp;gt; 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/document/XSLT.svg&#34; 
  title=&#34;Xslt&#34; 
  alt=&#34;document/XSLT.svg&#34;&gt;
 &lt;em&gt;XSLT&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Enter &lt;strong&gt;BlueCoat-Proxy-V1.0-EVENTS&lt;/strong&gt; into the &lt;code&gt;Name:&lt;/code&gt; entry box and press the 



&lt;span class=&#34;stroom-button&#34; title=&#34;Ok button&#34; &gt;
  &lt;span class=&#34;stroom-button-text&#34;&gt;Ok&lt;/span&gt;
&lt;/span&gt;
 which results in the creation of the XSLT Translation tab&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-05.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-05.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-05.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-05.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - New Translation tab&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;and it&amp;rsquo;s corresponding reference in the &lt;code&gt;Explorer&lt;/code&gt; display.&lt;/p&gt;
&lt;p&gt;We set the configuration for this &lt;code&gt;XSLT Translation&lt;/code&gt; to be&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Description - &lt;em&gt;Transform simple XML of BlueCoat Proxy log data into Stroom Event Logging XML form&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Again, press the &lt;em&gt;Save&lt;/em&gt; icon 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/save.svg&#34; 
  title=&#34;Save&#34; 
  alt=&#34;save.svg&#34;&gt;
 to save the configuration items.&lt;/p&gt;
&lt;h3 id=&#34;create-the-pipeline&#34;&gt;Create the Pipeline&lt;/h3&gt;
&lt;p&gt;We now create the Pipeline for this &lt;code&gt;Feed&lt;/code&gt; in a similar fashion to the &lt;code&gt;Event Feed&lt;/code&gt;, &lt;code&gt;Text Converter&lt;/code&gt; or &lt;code&gt;XSLT Translation&lt;/code&gt;.
We first select (with a &lt;em&gt;left click&lt;/em&gt;) the &lt;strong&gt;System/Event Sources/Proxy/BlueCoat&lt;/strong&gt; folder in the &lt;code&gt;Explorer&lt;/code&gt; tab then &lt;em&gt;right click&lt;/em&gt; and select:&lt;/p&gt;
&lt;p&gt;










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/add.svg&#34; 
  title=&#34;New&#34; 
  alt=&#34;add.svg&#34;&gt;
 &lt;em&gt;New&lt;/em&gt; =&amp;gt; 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/document/Pipeline.svg&#34; 
  title=&#34;Pipeline&#34; 
  alt=&#34;document/Pipeline.svg&#34;&gt;
 &lt;em&gt;Pipeline&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Enter &lt;strong&gt;BlueCoat-Proxy-V1.0-EVENTS&lt;/strong&gt; into the &lt;code&gt;Name:&lt;/code&gt; entry box and press the 



&lt;span class=&#34;stroom-button&#34; title=&#34;Ok button&#34; &gt;
  &lt;span class=&#34;stroom-button-text&#34;&gt;Ok&lt;/span&gt;
&lt;/span&gt;
 which results in the creation of the Pipeline tab&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-06.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-06.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-06.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-06.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - New Pipeline tab&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;and it&amp;rsquo;s corresponding reference in the &lt;code&gt;Explorer&lt;/code&gt; display.&lt;/p&gt;
&lt;p&gt;We set the configuration for this &lt;code&gt;Pipeline&lt;/code&gt; to be&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Description - &lt;em&gt;Processing of XML of BlueCoat Proxy log data into Stroom Event Logging XML&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Type - We leave as &lt;em&gt;Event Data&lt;/em&gt; as this is an &lt;em&gt;Event Data&lt;/em&gt; pipeline&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;configure-pipeline-structure&#34;&gt;Configure Pipeline Structure&lt;/h3&gt;
&lt;p&gt;We now need to configure the &lt;em&gt;Structure&lt;/em&gt; of this &lt;code&gt;Pipeline&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We do this by selecting the &lt;code&gt;Structure&lt;/code&gt; hyper-link of the *&lt;em&gt;BlueCoat-Proxy-V1.0-EVENTS&lt;/em&gt; &lt;code&gt;Pipeline&lt;/code&gt; tab.&lt;/p&gt;
&lt;p&gt;At this we see the &lt;code&gt;Pipeline Structure&lt;/code&gt; configuration tab&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-07.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-07.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-07.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-07.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - Pipeline Structure tab&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;As noted in the Assumptions at the start, we have loaded the &lt;strong&gt;Template Pipeline&lt;/strong&gt; content pack, so that we can &lt;em&gt;Inherit&lt;/em&gt; a pipeline structure from this content pack and configure it to support this specific feed.&lt;/p&gt;
&lt;p&gt;We find a template by selecting the &lt;strong&gt;Inherit From:&lt;/strong&gt; &lt;em&gt;None&lt;/em&gt; 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/assorted/popup.png&#34; 
  title=&#34;Menu selection&#34; 
  alt=&#34;assorted/popup.png&#34;&gt;
 entry box to reveal a &lt;strong&gt;Choose Item&lt;/strong&gt; configuration item window.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-08.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-08.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-08.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-08.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - Pipeline Structure tab - Inherit&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Select the &lt;strong&gt;Template Pipelines&lt;/strong&gt; folder by pressing the 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/tree-closed.svg&#34; 
  title=&#34;Open tree branch&#34; 
  alt=&#34;tree-closed.svg&#34;&gt;
 icon to the left of the folder to reveal the choice of available templates.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-09.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-09.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-09.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-09.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - Pipeline Structure tab - Templates&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;For our BlueCoat feed we will select the &lt;code&gt;Event Data (Text)&lt;/code&gt; template.
This is done by moving the cursor to the relevant line and select via a &lt;em&gt;left click&lt;/em&gt;&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-10.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-10.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-10.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-10.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - Pipeline Structure tab - Template Selection&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;then pressing 



&lt;span class=&#34;stroom-button&#34; title=&#34;Ok button&#34; &gt;
  &lt;span class=&#34;stroom-button-text&#34;&gt;Ok&lt;/span&gt;
&lt;/span&gt;
 to see the inherited pipeline structure&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-11.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-11.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-11.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-11.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - Pipeline Structure tab - Template Selected&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;h3 id=&#34;configure-pipeline-elements&#34;&gt;Configure Pipeline Elements&lt;/h3&gt;
&lt;p&gt;For the purpose of this HOWTO, we are only interested in two of the eleven (11) elements in this pipeline&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the Text Converter labeled &lt;em&gt;dsParser&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;the XSLT Translation labeled &lt;em&gt;translationFilter&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We need to assign our BlueCoat-Proxy-V1.0-EVENTS Text Converter and XSLT Translation to these elements respectively.&lt;/p&gt;
&lt;h4 id=&#34;text-converter-configuration&#34;&gt;Text Converter Configuration&lt;/h4&gt;
&lt;p&gt;We do this by first selecting (&lt;em&gt;left click&lt;/em&gt;) the &lt;em&gt;dsParser&lt;/em&gt; element at which we see the &lt;em&gt;Property&lt;/em&gt; sub-window displayed&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-12.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-12.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-12.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-12.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - Pipeline Structure tab - dsParser&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;We then select (&lt;em&gt;left click&lt;/em&gt;) the &lt;em&gt;textConverter&lt;/em&gt; &lt;strong&gt;Property Name&lt;/strong&gt;&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-13.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-13.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-13.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-13.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - Pipeline Structure tab - dsParser selected Property&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;then press the &lt;code&gt;Edit Property&lt;/code&gt; button 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/edit.svg&#34; 
  title=&#34;Edit&#34; 
  alt=&#34;edit.svg&#34;&gt;
.
At this, the &lt;code&gt;Edit Property&lt;/code&gt; configuration window is displayed.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-14.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-14.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-14.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-14.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - Pipeline Structure tab - dsParser Edit Property&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;We select the &lt;strong&gt;Value:&lt;/strong&gt; &lt;em&gt;None&lt;/em&gt; 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/assorted/popup.png&#34; 
  title=&#34;Menu selection&#34; 
  alt=&#34;assorted/popup.png&#34;&gt;
 entry box labeled to reveal a &lt;strong&gt;Choose Item&lt;/strong&gt; configuration item window.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-15.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-15.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-15.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-15.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - Pipeline Structure tab - dsParser Edit Property choose item&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;We traverse the folder structure until we can select the &lt;strong&gt;BlueCoat-Proxy-V1.0-EVENTS&lt;/strong&gt; &lt;code&gt;Text Converter&lt;/code&gt; as per&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-16.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-16.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-16.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-16.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - Pipeline Structure tab - dsParser Edit Property chosen item&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;and then press the 



&lt;span class=&#34;stroom-button&#34; title=&#34;Ok button&#34; &gt;
  &lt;span class=&#34;stroom-button-text&#34;&gt;Ok&lt;/span&gt;
&lt;/span&gt;
 to see that the Property &lt;strong&gt;Value:&lt;/strong&gt; has been selected.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-17.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-17.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-17.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-17.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - Pipeline Structure tab - dsParser set Property chosen item&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;and pressing the 



&lt;span class=&#34;stroom-button&#34; title=&#34;Ok button&#34; &gt;
  &lt;span class=&#34;stroom-button-text&#34;&gt;Ok&lt;/span&gt;
&lt;/span&gt;
 button of the &lt;code&gt;Edit Property&lt;/code&gt; configuration window results in the pipelines &lt;code&gt;dsParser&lt;/code&gt; property being set.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-18.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-18.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-18.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-18.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - Pipeline Structure tab - dsParser set Property&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;h4 id=&#34;xslt-translation-configuration&#34;&gt;XSLT Translation Configuration&lt;/h4&gt;
&lt;p&gt;We do this by first selecting (&lt;em&gt;left click&lt;/em&gt;) the &lt;em&gt;translationFilter&lt;/em&gt; element at which we see the &lt;em&gt;Property&lt;/em&gt; sub-window displayed&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-19.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-19.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-19.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-19.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - Pipeline Structure tab - translationFilter&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;We then select (&lt;em&gt;left click&lt;/em&gt;) the &lt;em&gt;xslt&lt;/em&gt; &lt;strong&gt;Property Name&lt;/strong&gt;&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-20.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-20.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-20.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-20.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - Pipeline Structure tab - xslt selected Property&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;and following the same steps as for the Text Converter property selection, we assign the &lt;strong&gt;BlueCoat-Proxy-V1.0-EVENTS&lt;/strong&gt; &lt;code&gt;XSLT Translation&lt;/code&gt; to the &lt;code&gt;xslt&lt;/code&gt; property.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-21.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-21.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-21.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-21.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - Pipeline Structure tab - xslt selected Property&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;At this point, we save these changes by pressing the &lt;em&gt;Save&lt;/em&gt; icon 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/save.svg&#34; 
  title=&#34;Save&#34; 
  alt=&#34;save.svg&#34;&gt;
.&lt;/p&gt;
&lt;h2 id=&#34;authoring-the-translation&#34;&gt;Authoring the Translation&lt;/h2&gt;
&lt;p&gt;We are now ready to author the translation.
Close all tabs except for the &lt;strong&gt;Welcome&lt;/strong&gt; and &lt;strong&gt;BlueCoat-Proxy-V1.0-EVENTS&lt;/strong&gt; &lt;code&gt;Feed&lt;/code&gt; tabs.&lt;/p&gt;
&lt;p&gt;On the &lt;strong&gt;BlueCoat-Proxy-V1.0-EVENTS&lt;/strong&gt; &lt;code&gt;Feed&lt;/code&gt; tab, select the &lt;strong&gt;Data&lt;/strong&gt; hyper-link to be presented with the &lt;strong&gt;Data&lt;/strong&gt; pane of our tab.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-22.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-22.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-22.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-22.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - Translation - Data Pane&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Although we can post our test data set to this feed, we will manually upload it via the &lt;strong&gt;Data&lt;/strong&gt; pane.
To do this we press the Upload button 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/upload.svg&#34; 
  title=&#34;Upload&#34; 
  alt=&#34;upload.svg&#34;&gt;
 in the top &lt;strong&gt;Data&lt;/strong&gt; pane to display the &lt;code&gt;Upload&lt;/code&gt; configuration window&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-23.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-23.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-23.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-23.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - Translation - Data Pane Upload&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;In a &lt;em&gt;Production&lt;/em&gt; situation, where we would post log files to Stroom, we would include certain HTTP Header variables that, as we shall see, will be used
as part of the translation.
These header variables typically provide situational awareness of the source system sending the events.&lt;/p&gt;
&lt;p&gt;For our purposes we set the following HTTP Header variables&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;Environment:Development
LogFileName:sampleBluecoat.log
MyHost:&amp;quot;somenode.strmdev00.org&amp;quot;
MyIPaddress:&amp;quot;192.168.2.220 192.168.122.1&amp;quot;
MyMeta:&amp;quot;FQDN:somenode.strmdev00.org\nipaddress:192.168.2.220\nipaddress_eth0:192.168.2.220\nipaddress_lo:127.0.0.1\nipaddress_virbr0:192.168.122.1\n&amp;quot;
MyNameServer:&amp;quot;gateway.strmdev00.org.&amp;quot;
MyTZ:+1000
Shar256:056f0d196ffb4bc6c5f3898962f1708886bb48e2f20a81fb93f561f4d16cb2aa
System:Site http://log-sharing.dreamhosters.com/ Bluecoat Logs
Version:V1.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;These are set by entering them into the &lt;strong&gt;Meta Data:&lt;/strong&gt; entry box.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-24b.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-24b.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-24b.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-24b.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - Translation - Data Pane Upload Metadata&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Having done this we select a &lt;strong&gt;Stream Type:&lt;/strong&gt; of &lt;code&gt;Raw Events&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;We leave the &lt;strong&gt;Effective:&lt;/strong&gt; entry box empty as this stream of raw event logs does not have an &lt;code&gt;Effective Date&lt;/code&gt; (only Reference Feeds set this).&lt;/p&gt;
&lt;p&gt;And we choose our file &lt;code&gt;sampleBluecoat.log&lt;/code&gt;, by clicking on the &lt;code&gt;Browse&lt;/code&gt; button in the &lt;strong&gt;File:&lt;/strong&gt; entry box, which brings up the brower&amp;rsquo;s standard file upload selection window.
Having selected our file, we see&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-24.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-24.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-24.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-24.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - Translation - Data Pane Upload Complete&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;On pressing 



&lt;span class=&#34;stroom-button&#34; title=&#34;Ok button&#34; &gt;
  &lt;span class=&#34;stroom-button-text&#34;&gt;Ok&lt;/span&gt;
&lt;/span&gt;
 and &lt;code&gt;Alert&lt;/code&gt; pop-up window is presented indicating the file was uploaded&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-25.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-25.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-25.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-25.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - Translation - Data Pane Upload Complete Verify&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Again press 



&lt;span class=&#34;stroom-button&#34; title=&#34;Close button&#34; &gt;
  &lt;span class=&#34;stroom-button-text&#34;&gt;Close&lt;/span&gt;
&lt;/span&gt;
 to show that the data has been uploaded as a Stream into the &lt;strong&gt;BlueCoat-Proxy-V1.0-EVENTS&lt;/strong&gt; Event Feed.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-26.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-26.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-26.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-26.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - Translation - Data Pane Show Batch&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;The top pane holds a table of the latest streams that pertain to the feed.
We see the one item which is the stream we uploaded.
If we select it, we see that a stream summary is also displayed in the centre pane (which shows details of the &lt;em&gt;specific&lt;/em&gt; selected feed and associated streams.
We also see that the bottom pane displays the data associated with the selected item.
In this case, the first lines of content from the BlueCoat sample log file.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-27.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-27.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-27.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-27.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - Translation - Data Pane Show Data&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;If we were to select the &lt;strong&gt;Meta&lt;/strong&gt; hyper-link of the lower pane, one would see the metadata Stroom records for this Stream of data.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-28.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-28.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-28.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-28.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - Translation - MetaData Pane Show Data&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;You should see all the HTTP variables we set as part of the Upload step as well as some that Stroom has automatically set.&lt;/p&gt;
&lt;p&gt;We now switch back to the &lt;strong&gt;Data&lt;/strong&gt; hyper-link before we start to develop the actual translation.&lt;/p&gt;
&lt;h3 id=&#34;stepping-the-pipeline&#34;&gt;Stepping the Pipeline&lt;/h3&gt;
&lt;p&gt;We will now author the two translation components of the pipeline, the data splitter that will transform our lines of BlueCoat data into a simple xml format and then the XSLT translation that will take this simple xml format and translate it into appropriate Stroom Event Logging XML form.&lt;/p&gt;
&lt;p&gt;We start by ensuring our &lt;code&gt;Raw Events&lt;/code&gt; Data stream is selected and we press the &lt;code&gt;Enter Stepping Mode&lt;/code&gt; 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/stepping.svg&#34; 
  title=&#34;Stepping&#34; 
  alt=&#34;stepping.svg&#34;&gt;
 button on the lower right hand side of the bottom &lt;code&gt;Stream Data&lt;/code&gt; pane.&lt;/p&gt;
&lt;p&gt;You will be prompted to select a pipeline to step with.
Choose the &lt;code&gt;BlueCoat-Proxy-V1.0-EVENTS&lt;/code&gt; pipeline&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-29.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-29.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-29.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-29.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - Translation - Stepping Choose Pipeline&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;then press 



&lt;span class=&#34;stroom-button&#34; title=&#34;Ok button&#34; &gt;
  &lt;span class=&#34;stroom-button-text&#34;&gt;Ok&lt;/span&gt;
&lt;/span&gt;
.&lt;/p&gt;
&lt;h3 id=&#34;stepping-the-pipeline---source&#34;&gt;Stepping the Pipeline - Source&lt;/h3&gt;
&lt;p&gt;You will be presented with the &lt;code&gt;Source&lt;/code&gt; element of the pipeline that shows our selected stream&amp;rsquo;s raw data.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-30.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-30.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-30.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-30.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - Translation - Stepping Source Element&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;We see two panes here.&lt;/p&gt;
&lt;p&gt;The top pane displays the Pipeline structure with &lt;code&gt;Source&lt;/code&gt; selected (we could refer to this as the &lt;em&gt;stepping pane&lt;/em&gt;) and it also displays a &lt;em&gt;step indicator&lt;/em&gt; (three colon separated numbers enclosed in square brackets initially the numbers are dashes i.e. &lt;code&gt;[-:-:-]&lt;/code&gt; as we have yet to step) and a set of green &lt;em&gt;Stepping Actions&lt;/em&gt;.
The step indicator and Stepping Actions allows one the &lt;em&gt;step through&lt;/em&gt; a log file, selecting data event by event (an event is typically a line, but some events can be multi-line).&lt;/p&gt;
&lt;p&gt;The bottom pane displays the first page (up to 100 lines) of data along with a set of blue &lt;em&gt;Data Selection Actions&lt;/em&gt;.
The Data Selection Actions are used to step through the source data 100 lines at a time.
When multiple source log files have been aggregated into a single stream, two &lt;em&gt;Data Selection Actions&lt;/em&gt; control buttons will be offered.
The right hand one will allow a user to step though the source data as before, but the left hand set of control buttons allows one to step between files from the aggregated event log files.&lt;/p&gt;
&lt;h3 id=&#34;stepping-the-pipeline---dsparser&#34;&gt;Stepping the Pipeline - dsParser&lt;/h3&gt;
&lt;p&gt;We now select the &lt;code&gt;dsParser&lt;/code&gt; pipeline element that results in the window below&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-31.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-31.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-31.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-31.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - Translation - Stepping dsParser Element&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;This window is made up of four panes.&lt;/p&gt;
&lt;p&gt;The top pane remains the same - a display of the pipeline structure and the &lt;em&gt;step indicator&lt;/em&gt; and green &lt;em&gt;Stepping Actions&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;The next pane down is the editing pane for the Text Converter.
This pane is used to edit the text converter that converts our &lt;em&gt;line based&lt;/em&gt; BlueCoat Proxy logs into a XML format.
We make use of the Stroom Data Splitter facility to perform this transformation.
See &lt;a href=&#34;../../docs/user-guide/data-splitter/&#34;&gt;here&lt;/a&gt; for complete details on the data splitter.&lt;/p&gt;
&lt;p&gt;The lower two panes are the &lt;em&gt;input&lt;/em&gt; and &lt;em&gt;output&lt;/em&gt; displays for the text converter.&lt;/p&gt;
&lt;p&gt;The authoring of this data splitter translation is outside the scope of this HOWTO.
It is recommended that one reads up on the &lt;a href=&#34;../../docs/user-guide/data-splitter/&#34;&gt;Data Splitter&lt;/a&gt; and review the various samples found in the Stroom Context packs published, or the Pull Requests of 





&lt;span class=&#34;external-link&#34;&gt;
&lt;a href=&#34;https://github.com/gchq/stroom-content&#34; class=&#34;&#34; style=&#34;&#34;&gt;github.com/gchq/stroom-content&lt;/a&gt;
&lt;i class=&#34;external-link-icon fas fa-external-link-alt fa-sm text-secondary&#34; title=&#34;External link&#34;&gt;&lt;/i&gt;
&lt;/span&gt;
.&lt;/p&gt;
&lt;p&gt;For the purpose of this HOWTO, the Datasplitter appears below.
The author believes the comments should support the understanding of the transformation.&lt;/p&gt;






&lt;div class=&#34;text-file card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;&#34;&gt;

  &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
    
    &lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;dataSplitter 
    bufferSize=&amp;quot;5000000&amp;quot; 
    xmlns=&amp;quot;data-splitter:3&amp;quot; 
    xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot; 
    xsi:schemaLocation=&amp;quot;data-splitter:3 file://data-splitter-v3.0.xsd&amp;quot; 
    version=&amp;quot;3.0&amp;quot; 
    ignoreErrors=&amp;quot;true&amp;quot;&amp;gt;

  &amp;lt;!-- 
  This datasplitter gains the Software and and Proxy version strings along with the log field names from the comments section of the log file.
  That is from the lines ...
  
  #Software: SGOS 3.2.4.28
  #Version: 1.0
  #Date: 2005-04-27 20:57:09
  #Fields: date time time-taken c-ip sc-status s-action sc-bytes cs-bytes cs-method ... x-icap-error-code x-icap-error-details
  
  We use the Field values as the header for the subsequent log fields
  --&amp;gt;
  
  &amp;lt;!-- Match the software comment line and save it in _bc_software --&amp;gt;
  &amp;lt;regex id=&amp;quot;software&amp;quot; pattern=&amp;quot;^#Software: (.+) ?\n*&amp;quot;&amp;gt;
    &amp;lt;data name=&amp;quot;_bc_software&amp;quot; value=&amp;quot;$1&amp;quot; /&amp;gt;
  &amp;lt;/regex&amp;gt;
    &amp;lt;!-- Match the version comment line and save it in _bc_version --&amp;gt;

  &amp;lt;regex id=&amp;quot;version&amp;quot; pattern=&amp;quot;^#Version: (.+) ?\n*&amp;quot;&amp;gt;
    &amp;lt;data name=&amp;quot;_bc_version&amp;quot; value=&amp;quot;$1&amp;quot; /&amp;gt;
  &amp;lt;/regex&amp;gt;

  &amp;lt;!-- Match against a Fields: header comment and save all the field names in a headings --&amp;gt;
  
  &amp;lt;regex id=&amp;quot;heading&amp;quot; pattern=&amp;quot;^#Fields: (.+) ?\n*&amp;quot;&amp;gt;
    &amp;lt;group value=&amp;quot;$1&amp;quot;&amp;gt;
      &amp;lt;regex pattern=&amp;quot;^(\S+) ?\n*&amp;quot;&amp;gt;
        &amp;lt;var id=&amp;quot;headings&amp;quot; /&amp;gt;
      &amp;lt;/regex&amp;gt;
    &amp;lt;/group&amp;gt;
  &amp;lt;/regex&amp;gt;

  &amp;lt;!-- Skip all other comment lines --&amp;gt;
  &amp;lt;regex pattern=&amp;quot;^#.+\n*&amp;quot;&amp;gt;
    &amp;lt;var id=&amp;quot;ignorea&amp;quot; /&amp;gt;
  &amp;lt;/regex&amp;gt;

  &amp;lt;!-- We now match all other lines, applying the headings captured at the start of the file to each field value --&amp;gt;
  
  &amp;lt;regex id=&amp;quot;body&amp;quot; pattern=&amp;quot;^[^#].+\n*&amp;quot;&amp;gt;
    &amp;lt;group&amp;gt;
      &amp;lt;regex pattern=&amp;quot;^&amp;amp;#34;([^&amp;amp;#34;]*)&amp;amp;#34; ?\n*&amp;quot;&amp;gt;
        &amp;lt;data name=&amp;quot;$headings$1&amp;quot; value=&amp;quot;$1&amp;quot; /&amp;gt;
      &amp;lt;/regex&amp;gt;
      &amp;lt;regex pattern=&amp;quot;^([^ ]+) *\n*&amp;quot;&amp;gt;
        &amp;lt;data name=&amp;quot;$headings$1&amp;quot; value=&amp;quot;$1&amp;quot; /&amp;gt;
      &amp;lt;/regex&amp;gt;
    &amp;lt;/group&amp;gt;
  &amp;lt;/regex&amp;gt;

  &amp;lt;!-- --&amp;gt;
&amp;lt;/dataSplitter&amp;gt;

&lt;/code&gt;&lt;/pre&gt;


    &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
    &lt;div class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;
      
      &lt;span class=&#34;&#34; style=&#34;font-size: smaller&#34;&gt;BlueCoat dataspliter&lt;/span&gt;
      
      (
      &lt;a href=&#34;../../files/HOWTOs/EventFeeds/ProcessingHowTo/BlueCoat.ds&#34; class=&#34;&#34; style=&#34;font-size: smaller&#34;&gt;Download BlueCoat.ds&lt;/a&gt;
      &lt;i class=&#34;external-link-icon fas fa-file-download fa-sm text-secondary&#34; title=&#34;External link&#34;&gt;&lt;/i&gt;
      )
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;It should be entered into the Text Converter&amp;rsquo;s editing pane as per&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-32.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-32.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-32.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-32.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - Translation - Stepping dsParser textConverter code&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;As mentioned earlier, to &lt;em&gt;step&lt;/em&gt; the translation, one uses the green  &lt;em&gt;Stepping Actions&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;The actions are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/fast-backward-green.svg&#34; 
  title=&#34;Step First&#34; 
  alt=&#34;fast-backward-green.svg&#34;&gt;
 - progress the transformation to the first line of the translation input&lt;/li&gt;
&lt;li&gt;










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/step-backward-green.svg&#34; 
  title=&#34;Step back&#34; 
  alt=&#34;step-backward-green.svg&#34;&gt;
 - progress the transformation one step backward&lt;/li&gt;
&lt;li&gt;










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/step-forward-green.svg&#34; 
  title=&#34;Step forward&#34; 
  alt=&#34;step-forward-green.svg&#34;&gt;
 - progress the transformation one step forward&lt;/li&gt;
&lt;li&gt;










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/fast-forward-green.svg&#34; 
  title=&#34;Step last&#34; 
  alt=&#34;fast-forward-green.svg&#34;&gt;
 - progress the transformation to the end of the translation input&lt;/li&gt;
&lt;li&gt;










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/refresh-green.svg&#34; 
  title=&#34;Refresh step&#34; 
  alt=&#34;refresh-green.svg&#34;&gt;
 - refresh the transformation based on the current translation input&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, if one was to press the 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/step-forward-green.svg&#34; 
  title=&#34;Step forward&#34; 
  alt=&#34;step-forward-green.svg&#34;&gt;
 &lt;em&gt;stepping action&lt;/em&gt; we would be presented with&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-33.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-33.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-33.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-33.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - Translation - Stepping dsParser textConverter 1&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;We see that the &lt;em&gt;input&lt;/em&gt; pane has the first line of input from our sample file and the &lt;em&gt;output&lt;/em&gt; pane has an XML &lt;strong&gt;record&lt;/strong&gt; structure where we have defined a &lt;strong&gt;data&lt;/strong&gt; element with the &lt;em&gt;name&lt;/em&gt; attribute of &lt;em&gt;bc_software&lt;/em&gt; and it&amp;rsquo;s &lt;em&gt;value&lt;/em&gt; attribute of &lt;em&gt;SGOS 3.2.4.28&lt;/em&gt;.
The definition of the &lt;strong&gt;record&lt;/strong&gt; structure can be found in the &lt;strong&gt;System/XML Schemas/records&lt;/strong&gt; folder.&lt;/p&gt;
&lt;p&gt;This is the result of the code in our editor&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;!-- Match the software comment line and save it in _bc_software --&amp;gt;
&amp;lt;regex id=&amp;quot;software&amp;quot; pattern=&amp;quot;^#Software: (.+) ?\n*&amp;quot;&amp;gt;
  &amp;lt;data name=&amp;quot;_bc_software&amp;quot; value=&amp;quot;$1&amp;quot; /&amp;gt;
&amp;lt;/regex&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If one presses the 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/step-forward-green.svg&#34; 
  title=&#34;Step forward&#34; 
  alt=&#34;step-forward-green.svg&#34;&gt;
 &lt;em&gt;stepping action&lt;/em&gt; again, we see that we have moved to the second line of the input file with the resultant output of a &lt;strong&gt;data&lt;/strong&gt; element with the &lt;em&gt;name&lt;/em&gt; attribute of &lt;em&gt;bc_version&lt;/em&gt; and it&amp;rsquo;s &lt;em&gt;value&lt;/em&gt; attribute of &lt;em&gt;1.0&lt;/em&gt;.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-34.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-34.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-34.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-34.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - Translation - Stepping dsParser textConverter 2&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Stepping forward once more causes the translation to ignore the Date comment line, define a Data Splitter $headings variable from the Fields comment line and transform the first line of actual event data.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-35.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-35.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-35.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-35.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - Translation - Stepping dsParser textConverter 3&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;We see that a &lt;code&gt;&amp;lt;record&amp;gt;&lt;/code&gt; element has been formed with multiple key value pair &lt;code&gt;&amp;lt;data&amp;gt;&lt;/code&gt; elements where the &lt;em&gt;name&lt;/em&gt; attribute is the key and the &lt;em&gt;value&lt;/em&gt; attribute the value.
You will note that the keys have been taken from the Fields comment line which where placed in the $headings variable.&lt;/p&gt;
&lt;p&gt;You should also take note that the &lt;em&gt;stepping indicator&lt;/em&gt; has been incrementing the last number, so at this point it is displaying &lt;code&gt;[1:1:3]&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The general form of this &lt;em&gt;indicator&lt;/em&gt; is&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;&#39;[&#39; streamId &#39;:&#39; subStreamId &#39;:&#39; recordNo &#39;]&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;where&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;streamId&lt;/strong&gt; - is the stream ID and won&amp;rsquo;t change when stepping through the selected stream,&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;subStreamId&lt;/strong&gt; - is the sub stream ID.
When Stroom aggregates multiple event sources for a feed, it aggregates multiple input files and this is, in effect, the file number.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;recordNo&lt;/strong&gt; - is the record number within the sub stream.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;One can double click on either the &lt;strong&gt;subStreamId&lt;/strong&gt; or &lt;strong&gt;recordNo&lt;/strong&gt; entry and enter a new value.
This allows you to &lt;em&gt;jump&lt;/em&gt; around a stream rather than just relying on first, previous, next and last movements.&lt;/p&gt;
&lt;p&gt;Hovering the mouse over the &lt;em&gt;stepping indicator&lt;/em&gt; will change the cursor to a &lt;code&gt;hand pointer&lt;/code&gt;.
Selecting (by a left click) the &lt;code&gt;recordNo&lt;/code&gt; will allow you to edit it&amp;rsquo;s value (and the other values for that matter).
You will see the display change from&lt;/p&gt;
&lt;p&gt;






  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-36.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-36.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-36.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-36.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - Translation - Stepping Indicator 1&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

to







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-37.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-37.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-37.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-37.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - Translation - Stepping Indicator 2&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;If we change the record number from &lt;strong&gt;3&lt;/strong&gt; to &lt;strong&gt;12&lt;/strong&gt; then either press Enter or press the 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/refresh-green.svg&#34; 
  title=&#34;Refresh&#34; 
  alt=&#34;refresh-green.svg&#34;&gt;
 action we see&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-38.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-38.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-38.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-38.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - Translation - Stepping Indicator 3&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;and note that a new record has been processed in the &lt;em&gt;input&lt;/em&gt; and &lt;em&gt;output&lt;/em&gt; panes.
Further, if one steps back to the &lt;code&gt;Source&lt;/code&gt; element of the pipeline to view the raw source file, we see that the highlighted &lt;strong&gt;current&lt;/strong&gt; line is the 12th line of processed data.
It is the 10th actual bluecoat event, but remember the #Software, #Version lines are considered as processed data (2+10 = 12).
Also noted that the #Date and #Fields lines are not considered processed data, and hence do not contribute to the &lt;strong&gt;recordNo&lt;/strong&gt; value.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-39.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-39.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-39.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-39.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - Translation - Stepping Indicator 4&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;If we select the &lt;code&gt;dsParser&lt;/code&gt; pipeline element then press the 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/fast-forward-green.svg&#34; 
  title=&#34;Step last&#34; 
  alt=&#34;fast-forward-green.svg&#34;&gt;
 action we see the &lt;code&gt;recordNo&lt;/code&gt; jump to 31 which is the last processed line of our sample log file.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-40.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-40.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-40.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-40.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - Translation - Stepping Indicator 5&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;h3 id=&#34;stepping-the-pipeline---translationfilter&#34;&gt;Stepping the Pipeline - translationFilter&lt;/h3&gt;
&lt;p&gt;We now select the &lt;code&gt;translationFilter&lt;/code&gt; pipeline element that results in&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-41.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-41.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-41.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-41.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - Translation - Stepping translationFilter Element&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;As for the &lt;code&gt;dsParser&lt;/code&gt;, this window is made up of four panes.&lt;/p&gt;
&lt;p&gt;The top pane remains the same - a display of the pipeline structure and the &lt;em&gt;step indicator&lt;/em&gt; and green &lt;em&gt;Stepping Actions&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;The next pane down is the editing pane for the Translation Filter.
This pane is used to edit an &lt;em&gt;xslt&lt;/em&gt; translation that converts our simple key value pair &lt;code&gt;&amp;lt;records&amp;gt;&lt;/code&gt; XML structure into another XML form.&lt;/p&gt;
&lt;p&gt;The lower two panes are the &lt;em&gt;input&lt;/em&gt; and &lt;em&gt;output&lt;/em&gt; displays for the xslt translation.
You will note that the &lt;em&gt;input&lt;/em&gt; and &lt;em&gt;output&lt;/em&gt; displays are identical for a null xslt translation is effectively a direct copy.&lt;/p&gt;
&lt;p&gt;In this HOWTO we will transform the &lt;code&gt;&amp;lt;records&amp;gt;&lt;/code&gt; XML structure into the &lt;em&gt;GCHQ Stroom Event Logging XML Schema&lt;/em&gt; form which is documented 





&lt;span class=&#34;external-link&#34;&gt;
&lt;a href=&#34;https://github.com/gchq/event-logging-schema&#34; class=&#34;&#34; style=&#34;&#34;&gt;here&lt;/a&gt;
&lt;i class=&#34;external-link-icon fas fa-external-link-alt fa-sm text-secondary&#34; title=&#34;External link&#34;&gt;&lt;/i&gt;
&lt;/span&gt;
.&lt;/p&gt;
&lt;p&gt;The authoring of this xslt translation is outside the scope of this HOWTO, as is the use of the Stroom XML Schema.
It is recommended that one reads up on &lt;a href=&#34;../../docs/user-guide/pipelines/xslt/&#34;&gt;XSLT Conversion&lt;/a&gt; and the 





&lt;span class=&#34;external-link&#34;&gt;
&lt;a href=&#34;https://github.com/gchq/event-logging-schema&#34; class=&#34;&#34; style=&#34;&#34;&gt;Stroom Event Logging XML Schema&lt;/a&gt;
&lt;i class=&#34;external-link-icon fas fa-external-link-alt fa-sm text-secondary&#34; title=&#34;External link&#34;&gt;&lt;/i&gt;
&lt;/span&gt;
 and review the various samples found in the Stroom Context packs published, or the Pull Requests of 




  


&lt;span class=&#34;external-link&#34;&gt;
&lt;a href=&#34;https://github.com/gchq/stroom-content&#34; class=&#34;&#34; style=&#34;&#34;&gt;https://github.com/gchq/stroom-content&lt;/a&gt;
&lt;i class=&#34;external-link-icon fas fa-external-link-alt fa-sm text-secondary&#34; title=&#34;External link&#34;&gt;&lt;/i&gt;
&lt;/span&gt;
.&lt;/p&gt;
&lt;p&gt;We will build the translation in steps.
We enter an initial portion of our xslt transformation that just consumes the &lt;code&gt;Software&lt;/code&gt; and &lt;code&gt;Version&lt;/code&gt; key values and converts the &lt;code&gt;date&lt;/code&gt; and &lt;code&gt;time&lt;/code&gt; values (which are in UTC) into the &lt;code&gt;EventTime/TimeCreated&lt;/code&gt; element.
This code segment is&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; ?&amp;gt;
&amp;lt;xsl:stylesheet
    xpath-default-namespace=&amp;quot;records:2&amp;quot;
    xmlns=&amp;quot;event-logging:3&amp;quot;
    xmlns:stroom=&amp;quot;stroom&amp;quot; 
    xmlns:xsl=&amp;quot;http://www.w3.org/1999/XSL/Transform&amp;quot;
    xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;
    xmlns:xs=&amp;quot;http://www.w3.org/2001/XMLSchema&amp;quot;
    version=&amp;quot;3.0&amp;quot;&amp;gt;

  &amp;lt;!-- Bluecoat Proxy logs in W2C Extended Log File Format (ELF) --&amp;gt;

  &amp;lt;!-- Ingest the record key value pair elements --&amp;gt;
  &amp;lt;xsl:template match=&amp;quot;records&amp;quot;&amp;gt;
    &amp;lt;Events xsi:schemaLocation=&amp;quot;event-logging:3 file://event-logging-v3.2.4.xsd&amp;quot; Version=&amp;quot;3.2.4&amp;quot;&amp;gt;
      &amp;lt;xsl:apply-templates /&amp;gt;
    &amp;lt;/Events&amp;gt;
  &amp;lt;/xsl:template&amp;gt;

  &amp;lt;!-- Main record template for single event --&amp;gt;
  &amp;lt;xsl:template match=&amp;quot;record&amp;quot;&amp;gt;
    &amp;lt;xsl:choose&amp;gt;

      &amp;lt;!-- Store the Software and Version information of the Bluecoat log file for use 
      in the Event Source elements which are processed later --&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;data[@name=&#39;_bc_software&#39;]&amp;quot;&amp;gt;
        &amp;lt;xsl:value-of select=&amp;quot;stroom:put(&#39;_bc_software&#39;, data[@name=&#39;_bc_software&#39;]/@value)&amp;quot; /&amp;gt;
      &amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;data[@name=&#39;_bc_version&#39;]&amp;quot;&amp;gt;
        &amp;lt;xsl:value-of select=&amp;quot;stroom:put(&#39;_bc_version&#39;, data[@name=&#39;_bc_version&#39;]/@value)&amp;quot; /&amp;gt;
      &amp;lt;/xsl:when&amp;gt;

      &amp;lt;!-- Process the event logs --&amp;gt;
      &amp;lt;xsl:otherwise&amp;gt;
        &amp;lt;Event&amp;gt;
          &amp;lt;xsl:call-template name=&amp;quot;event_time&amp;quot; /&amp;gt;
        &amp;lt;/Event&amp;gt;
      &amp;lt;/xsl:otherwise&amp;gt;
    &amp;lt;/xsl:choose&amp;gt;
  &amp;lt;/xsl:template&amp;gt;

  &amp;lt;!-- Time --&amp;gt;
  &amp;lt;xsl:template name=&amp;quot;event_time&amp;quot;&amp;gt;
    &amp;lt;EventTime&amp;gt;
      &amp;lt;TimeCreated&amp;gt;
        &amp;lt;xsl:value-of select=&amp;quot;concat(data[@name = &#39;date&#39;]/@value,&#39;T&#39;,data[@name=&#39;time&#39;]/@value,&#39;.000Z&#39;)&amp;quot; /&amp;gt;
      &amp;lt;/TimeCreated&amp;gt;
    &amp;lt;/EventTime&amp;gt;
  &amp;lt;/xsl:template&amp;gt;
&amp;lt;/xsl:stylesheet&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After entering this translation and pressing the 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/refresh-green.svg&#34; 
  title=&#34;Refresh&#34; 
  alt=&#34;refresh-green.svg&#34;&gt;
 action shows the display&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-42.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-42.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-42.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-42.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - Translation - Stepping XSLT Translation 1&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Note that this is the 31st record, so if we were to jump to the first record using the 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/fast-backward-green.svg&#34; 
  title=&#34;Step first&#34; 
  alt=&#34;fast-backward-green.svg&#34;&gt;
 action, we see that the &lt;em&gt;input&lt;/em&gt; and &lt;em&gt;output&lt;/em&gt; change appropriately.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-43.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-43.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-43.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-43.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - Translation - Stepping XSLT Translation 2&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;You will note that there is no &lt;code&gt;Event&lt;/code&gt; element in the &lt;em&gt;output&lt;/em&gt; pane as the &lt;em&gt;record&lt;/em&gt; template in our xslt translation above is only storing the input&amp;rsquo;s key value (_bc_software&amp;rsquo;s value).&lt;/p&gt;
&lt;p&gt;Further note that the &lt;strong&gt;BlueCoat_Proxy-V1.0-EVENTS&lt;/strong&gt; tab 







  



  






&lt;span class=&#34;stroom-tab stroom-tab-active&#34; title=&#34;Stepping tab - &#39;BlueCoat_Proxy-V1.0-EVENTS&#39;&#34; &gt;
  &lt;img
    class=&#34;stroom-icon&#34; 
    src=&#34;../../images/stroom-ui/stepping.svg&#34; 
    title=&#34;BlueCoat_Proxy-V1.0-EVENTS&#34; 
    alt=&#34;../stepping.svg&#34;&gt;
  &lt;span class=&#34;stroom-tab-name&#34;&gt;* BlueCoat_Proxy-V1.0-EVENTS&lt;/span&gt;
  &lt;span class=&#34;stroom-tab-cross&#34;&gt;Ã—&lt;/span&gt;
&lt;/span&gt;
 has a &lt;em&gt;star&lt;/em&gt; in front of it and also the &lt;em&gt;Save&lt;/em&gt; icon 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/save.svg&#34; 
  title=&#34;Save&#34; 
  alt=&#34;save.svg&#34;&gt;
 is highlighted.
This indicates that a component of the pipeline needs to be saved.
In this case, the XSLT translation.&lt;/p&gt;
&lt;p&gt;By pressing the &lt;em&gt;Save&lt;/em&gt; icon, you will save the XSLT translation as it currently stands and both the &lt;em&gt;star&lt;/em&gt; will be removed from the tab 







  








&lt;span class=&#34;stroom-tab stroom-tab-active&#34; title=&#34;Stepping tab - &#39;BlueCoat_Proxy-V1.0-EVENTS&#39;&#34; &gt;
  &lt;img
    class=&#34;stroom-icon&#34; 
    src=&#34;../../images/stroom-ui/stepping.svg&#34; 
    title=&#34;BlueCoat_Proxy-V1.0-EVENTS&#34; 
    alt=&#34;../stepping.svg&#34;&gt;
  &lt;span class=&#34;stroom-tab-name&#34;&gt;BlueCoat_Proxy-V1.0-EVENTS&lt;/span&gt;
  &lt;span class=&#34;stroom-tab-cross&#34;&gt;Ã—&lt;/span&gt;
&lt;/span&gt;
and the &lt;em&gt;Save&lt;/em&gt; icon 






  





&lt;img 
  class=&#34;stroom-icon stroom-icon-disabled&#34; 
  src=&#34;../../images/stroom-ui/save.svg&#34; 
  title=&#34;Save&#34; 
  alt=&#34;save.svg&#34;&gt;
will no longer be highlighted.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-45.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-45.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-45.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-45.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - Translation - Stepping XSLT Translation 4&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;We next extend out translation by authoring a &lt;strong&gt;event_source&lt;/strong&gt; template to form an appropriate Stroom Event Logging &lt;code&gt;EventSource&lt;/code&gt; element structure.
Thus our translation now is&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; ?&amp;gt;
&amp;lt;xsl:stylesheet
    xpath-default-namespace=&amp;quot;records:2&amp;quot; 
    xmlns=&amp;quot;event-logging:3&amp;quot; 
    xmlns:stroom=&amp;quot;stroom&amp;quot;
    xmlns:xsl=&amp;quot;http://www.w3.org/1999/XSL/Transform&amp;quot; 
    xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot; 
    xmlns:xs=&amp;quot;http://www.w3.org/2001/XMLSchema&amp;quot; 
    version=&amp;quot;3.0&amp;quot;&amp;gt;

  &amp;lt;!-- Bluecoat Proxy logs in W2C Extended Log File Format (ELF) --&amp;gt;

  &amp;lt;!-- Ingest the record key value pair elements --&amp;gt;
  &amp;lt;xsl:template match=&amp;quot;records&amp;quot;&amp;gt;
    &amp;lt;Events xsi:schemaLocation=&amp;quot;event-logging:3 file://event-logging-v3.2.4.xsd&amp;quot; Version=&amp;quot;3.2.4&amp;quot;&amp;gt;
      &amp;lt;xsl:apply-templates /&amp;gt;
    &amp;lt;/Events&amp;gt;
  &amp;lt;/xsl:template&amp;gt;

  &amp;lt;!-- Main record template for single event --&amp;gt;
  &amp;lt;xsl:template match=&amp;quot;record&amp;quot;&amp;gt;
    &amp;lt;xsl:choose&amp;gt;

      &amp;lt;!-- Store the Software and Version information of the Bluecoat log file for use in
      the Event Source elements which are processed later --&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;data[@name=&#39;_bc_software&#39;]&amp;quot;&amp;gt;
        &amp;lt;xsl:value-of select=&amp;quot;stroom:put(&#39;_bc_software&#39;, data[@name=&#39;_bc_software&#39;]/@value)&amp;quot; /&amp;gt;
      &amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;data[@name=&#39;_bc_version&#39;]&amp;quot;&amp;gt;
        &amp;lt;xsl:value-of select=&amp;quot;stroom:put(&#39;_bc_version&#39;, data[@name=&#39;_bc_version&#39;]/@value)&amp;quot; /&amp;gt;
      &amp;lt;/xsl:when&amp;gt;

      &amp;lt;!-- Process the event logs --&amp;gt;
      &amp;lt;xsl:otherwise&amp;gt;
        &amp;lt;Event&amp;gt;
          &amp;lt;xsl:call-template name=&amp;quot;event_time&amp;quot; /&amp;gt;
          &amp;lt;xsl:call-template name=&amp;quot;event_source&amp;quot; /&amp;gt;
        &amp;lt;/Event&amp;gt;
      &amp;lt;/xsl:otherwise&amp;gt;
    &amp;lt;/xsl:choose&amp;gt;
  &amp;lt;/xsl:template&amp;gt;

  &amp;lt;!-- Time --&amp;gt;
  &amp;lt;xsl:template name=&amp;quot;event_time&amp;quot;&amp;gt;
    &amp;lt;EventTime&amp;gt;
      &amp;lt;TimeCreated&amp;gt;
        &amp;lt;xsl:value-of select=&amp;quot;concat(data[@name = &#39;date&#39;]/@value,&#39;T&#39;,data[@name=&#39;time&#39;]/@value,&#39;.000Z&#39;)&amp;quot; /&amp;gt;
      &amp;lt;/TimeCreated&amp;gt;
    &amp;lt;/EventTime&amp;gt;
  &amp;lt;/xsl:template&amp;gt;

  &amp;lt;!-- Template for event source--&amp;gt;
  &amp;lt;xsl:template name=&amp;quot;event_source&amp;quot;&amp;gt;

    &amp;lt;!--
    We extract some situational awareness information that the posting script includes when posting the event data 
    --&amp;gt;
    &amp;lt;xsl:variable name=&amp;quot;_mymeta&amp;quot; select=&amp;quot;translate(stroom:meta(&#39;MyMeta&#39;),&#39;&amp;amp;quot;&#39;, &#39;&#39;)&amp;quot; /&amp;gt;

    &amp;lt;!-- Form the EventSource node --&amp;gt;
    &amp;lt;EventSource&amp;gt;
      &amp;lt;System&amp;gt;
        &amp;lt;Name&amp;gt;
          &amp;lt;xsl:value-of select=&amp;quot;stroom:meta(&#39;System&#39;)&amp;quot; /&amp;gt;
        &amp;lt;/Name&amp;gt;
        &amp;lt;Environment&amp;gt;
          &amp;lt;xsl:value-of select=&amp;quot;stroom:meta(&#39;Environment&#39;)&amp;quot; /&amp;gt;
        &amp;lt;/Environment&amp;gt;
      &amp;lt;/System&amp;gt;
      &amp;lt;Generator&amp;gt;
        &amp;lt;xsl:variable name=&amp;quot;gen&amp;quot;&amp;gt;
          &amp;lt;xsl:if test=&amp;quot;stroom:get(&#39;_bc_software&#39;)&amp;quot;&amp;gt;
            &amp;lt;xsl:value-of select=&amp;quot;concat(&#39; Software: &#39;, stroom:get(&#39;_bc_software&#39;))&amp;quot; /&amp;gt;
          &amp;lt;/xsl:if&amp;gt;
          &amp;lt;xsl:if test=&amp;quot;stroom:get(&#39;_bc_version&#39;)&amp;quot;&amp;gt;
            &amp;lt;xsl:value-of select=&amp;quot;concat(&#39; Version: &#39;, stroom:get(&#39;_bc_version&#39;))&amp;quot; /&amp;gt;
          &amp;lt;/xsl:if&amp;gt;
        &amp;lt;/xsl:variable&amp;gt;
        &amp;lt;xsl:value-of select=&amp;quot;concat(&#39;Bluecoat&#39;, $gen)&amp;quot; /&amp;gt;
      &amp;lt;/Generator&amp;gt;
      &amp;lt;xsl:if test=&amp;quot;data[@name=&#39;s-computername&#39;] or data[@name=&#39;s-ip&#39;]&amp;quot;&amp;gt;
        &amp;lt;Device&amp;gt;
          &amp;lt;xsl:if test=&amp;quot;data[@name=&#39;s-computername&#39;]&amp;quot;&amp;gt;
            &amp;lt;Name&amp;gt;
              &amp;lt;xsl:value-of select=&amp;quot;data[@name=&#39;s-computername&#39;]/@value&amp;quot; /&amp;gt;
            &amp;lt;/Name&amp;gt;
          &amp;lt;/xsl:if&amp;gt;
          &amp;lt;xsl:if test=&amp;quot;data[@name=&#39;s-ip&#39;]&amp;quot;&amp;gt;
            &amp;lt;IPAddress&amp;gt;
              &amp;lt;xsl:value-of select=&amp;quot; data[@name=&#39;s-ip&#39;]/@value&amp;quot; /&amp;gt;
            &amp;lt;/IPAddress&amp;gt;
          &amp;lt;/xsl:if&amp;gt;
          &amp;lt;xsl:if test=&amp;quot;data[@name=&#39;s-sitename&#39;]&amp;quot;&amp;gt;
            &amp;lt;Data Name=&amp;quot;ServiceType&amp;quot; Value=&amp;quot;{data[@name=&#39;s-sitename&#39;]/@value}&amp;quot; /&amp;gt;
          &amp;lt;/xsl:if&amp;gt;
        &amp;lt;/Device&amp;gt;
      &amp;lt;/xsl:if&amp;gt;

      &amp;lt;!-- --&amp;gt;
      &amp;lt;Client&amp;gt;
        &amp;lt;xsl:if test=&amp;quot;data[@name=&#39;c-ip&#39;]/@value != &#39;-&#39;&amp;quot;&amp;gt;
          &amp;lt;IPAddress&amp;gt;
            &amp;lt;xsl:value-of select=&amp;quot;data[@name=&#39;c-ip&#39;]/@value&amp;quot; /&amp;gt;
          &amp;lt;/IPAddress&amp;gt;
        &amp;lt;/xsl:if&amp;gt;

        &amp;lt;!-- Remote Port Number --&amp;gt;
        &amp;lt;xsl:if test=&amp;quot;data[@name=&#39;c-port&#39;]/@value !=&#39;-&#39;&amp;quot;&amp;gt;
          &amp;lt;Port&amp;gt;
            &amp;lt;xsl:value-of select=&amp;quot;data[@name=&#39;c-port&#39;]/@value&amp;quot; /&amp;gt;
          &amp;lt;/Port&amp;gt;
        &amp;lt;/xsl:if&amp;gt;
      &amp;lt;/Client&amp;gt;

      &amp;lt;!-- --&amp;gt;
      &amp;lt;Server&amp;gt;
        &amp;lt;HostName&amp;gt;
          &amp;lt;xsl:value-of select=&amp;quot;data[@name=&#39;cs-host&#39;]/@value&amp;quot; /&amp;gt;
        &amp;lt;/HostName&amp;gt;
      &amp;lt;/Server&amp;gt;

      &amp;lt;!-- --&amp;gt;
      &amp;lt;xsl:variable name=&amp;quot;user&amp;quot;&amp;gt;
        &amp;lt;xsl:value-of select=&amp;quot;data[@name=&#39;cs-user&#39;]/@value&amp;quot; /&amp;gt;
        &amp;lt;xsl:value-of select=&amp;quot;data[@name=&#39;cs-username&#39;]/@value&amp;quot; /&amp;gt;
        &amp;lt;xsl:value-of select=&amp;quot;data[@name=&#39;cs-userdn&#39;]/@value&amp;quot; /&amp;gt;
      &amp;lt;/xsl:variable&amp;gt;
      &amp;lt;xsl:if test=&amp;quot;$user !=&#39;-&#39;&amp;quot;&amp;gt;
        &amp;lt;User&amp;gt;
          &amp;lt;Id&amp;gt;
            &amp;lt;xsl:value-of select=&amp;quot;$user&amp;quot; /&amp;gt;
          &amp;lt;/Id&amp;gt;
        &amp;lt;/User&amp;gt;
      &amp;lt;/xsl:if&amp;gt;
      &amp;lt;Data Name=&amp;quot;MyMeta&amp;quot;&amp;gt;
        &amp;lt;xsl:attribute name=&amp;quot;Value&amp;quot; select=&amp;quot;$_mymeta&amp;quot; /&amp;gt;
      &amp;lt;/Data&amp;gt;
    &amp;lt;/EventSource&amp;gt;
  &amp;lt;/xsl:template&amp;gt;
&amp;lt;/xsl:stylesheet&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Stepping to the 3 record (the first real data record in our sample log) will reveal that our &lt;em&gt;output&lt;/em&gt; pane has gained an &lt;code&gt;EventSource&lt;/code&gt; element.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-46.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-46.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-46.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-46.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - Translation - Stepping XSLT Translation 5&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Note also, that our &lt;em&gt;Save&lt;/em&gt; icon 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/save.svg&#34; 
  title=&#34;Save&#34; 
  alt=&#34;save.svg&#34;&gt;
 is also highlighted, so we should at some point save the extensions to our translation.&lt;/p&gt;
&lt;p&gt;The complete translation now follows.&lt;/p&gt;






&lt;div class=&#34;text-file card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;&#34;&gt;

  &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
    
    &lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; ?&amp;gt;
&amp;lt;xsl:stylesheet 
    xpath-default-namespace=&amp;quot;records:2&amp;quot; 
    xmlns=&amp;quot;event-logging:3&amp;quot; 
    xmlns:stroom=&amp;quot;stroom&amp;quot; 
    xmlns:xsl=&amp;quot;http://www.w3.org/1999/XSL/Transform&amp;quot; 
    xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot; 
    xmlns:xs=&amp;quot;http://www.w3.org/2001/XMLSchema&amp;quot; 
    version=&amp;quot;3.0&amp;quot;&amp;gt;

  &amp;lt;!-- Bluecoat Proxy logs in W2C Extended Log File Format (ELF) --&amp;gt;

  &amp;lt;!-- Ingest the record key value pair elements --&amp;gt;
  &amp;lt;xsl:template match=&amp;quot;records&amp;quot;&amp;gt;
    &amp;lt;Events xsi:schemaLocation=&amp;quot;event-logging:3 file://event-logging-v3.2.4.xsd&amp;quot; Version=&amp;quot;3.2.4&amp;quot;&amp;gt;
      &amp;lt;xsl:apply-templates /&amp;gt;
    &amp;lt;/Events&amp;gt;
  &amp;lt;/xsl:template&amp;gt;

  &amp;lt;!-- Main record template for single event --&amp;gt;
  &amp;lt;xsl:template match=&amp;quot;record&amp;quot;&amp;gt;
    &amp;lt;xsl:choose&amp;gt;

      &amp;lt;!-- Store the Software and Version information of the Bluecoat log file for use in the Event
      Source elements which are processed later --&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;data[@name=&#39;_bc_software&#39;]&amp;quot;&amp;gt;
        &amp;lt;xsl:value-of select=&amp;quot;stroom:put(&#39;_bc_software&#39;, data[@name=&#39;_bc_software&#39;]/@value)&amp;quot; /&amp;gt;
      &amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;data[@name=&#39;_bc_version&#39;]&amp;quot;&amp;gt;
        &amp;lt;xsl:value-of select=&amp;quot;stroom:put(&#39;_bc_version&#39;, data[@name=&#39;_bc_version&#39;]/@value)&amp;quot; /&amp;gt;
      &amp;lt;/xsl:when&amp;gt;

      &amp;lt;!-- Process the event logs --&amp;gt;
      &amp;lt;xsl:otherwise&amp;gt;
        &amp;lt;Event&amp;gt;
          &amp;lt;xsl:call-template name=&amp;quot;event_time&amp;quot; /&amp;gt;
          &amp;lt;xsl:call-template name=&amp;quot;event_source&amp;quot; /&amp;gt;
          &amp;lt;xsl:call-template name=&amp;quot;event_detail&amp;quot; /&amp;gt;
        &amp;lt;/Event&amp;gt;
      &amp;lt;/xsl:otherwise&amp;gt;
    &amp;lt;/xsl:choose&amp;gt;
  &amp;lt;/xsl:template&amp;gt;

  &amp;lt;!-- Time --&amp;gt;
  &amp;lt;xsl:template name=&amp;quot;event_time&amp;quot;&amp;gt;
    &amp;lt;EventTime&amp;gt;
      &amp;lt;TimeCreated&amp;gt;
        &amp;lt;xsl:value-of select=&amp;quot;concat(data[@name = &#39;date&#39;]/@value,&#39;T&#39;,data[@name=&#39;time&#39;]/@value,&#39;.000Z&#39;)&amp;quot; /&amp;gt;
      &amp;lt;/TimeCreated&amp;gt;
    &amp;lt;/EventTime&amp;gt;
  &amp;lt;/xsl:template&amp;gt;

  &amp;lt;!-- Template for event source--&amp;gt;
  &amp;lt;xsl:template name=&amp;quot;event_source&amp;quot;&amp;gt;

    &amp;lt;!-- We extract some situational awareness information that the posting script includes when
      posting the event data --&amp;gt;
    &amp;lt;xsl:variable name=&amp;quot;_mymeta&amp;quot; select=&amp;quot;translate(stroom:meta(&#39;MyMeta&#39;),&#39;&amp;amp;quot;&#39;, &#39;&#39;)&amp;quot; /&amp;gt;

    &amp;lt;!-- Form the EventSource node --&amp;gt;
    &amp;lt;EventSource&amp;gt;
      &amp;lt;System&amp;gt;
        &amp;lt;Name&amp;gt;
          &amp;lt;xsl:value-of select=&amp;quot;stroom:meta(&#39;System&#39;)&amp;quot; /&amp;gt;
        &amp;lt;/Name&amp;gt;
        &amp;lt;Environment&amp;gt;
          &amp;lt;xsl:value-of select=&amp;quot;stroom:meta(&#39;Environment&#39;)&amp;quot; /&amp;gt;
        &amp;lt;/Environment&amp;gt;
      &amp;lt;/System&amp;gt;
      &amp;lt;Generator&amp;gt;
        &amp;lt;xsl:variable name=&amp;quot;gen&amp;quot;&amp;gt;
          &amp;lt;xsl:if test=&amp;quot;stroom:get(&#39;_bc_software&#39;)&amp;quot;&amp;gt;
            &amp;lt;xsl:value-of select=&amp;quot;concat(&#39; Software: &#39;, stroom:get(&#39;_bc_software&#39;))&amp;quot; /&amp;gt;
          &amp;lt;/xsl:if&amp;gt;
          &amp;lt;xsl:if test=&amp;quot;stroom:get(&#39;_bc_version&#39;)&amp;quot;&amp;gt;
            &amp;lt;xsl:value-of select=&amp;quot;concat(&#39; Version: &#39;, stroom:get(&#39;_bc_version&#39;))&amp;quot; /&amp;gt;
          &amp;lt;/xsl:if&amp;gt;
        &amp;lt;/xsl:variable&amp;gt;
        &amp;lt;xsl:value-of select=&amp;quot;concat(&#39;Bluecoat&#39;, $gen)&amp;quot; /&amp;gt;
      &amp;lt;/Generator&amp;gt;
      &amp;lt;xsl:if test=&amp;quot;data[@name=&#39;s-computername&#39;] or data[@name=&#39;s-ip&#39;]&amp;quot;&amp;gt;
        &amp;lt;Device&amp;gt;
          &amp;lt;xsl:if test=&amp;quot;data[@name=&#39;s-computername&#39;]&amp;quot;&amp;gt;
            &amp;lt;Name&amp;gt;
              &amp;lt;xsl:value-of select=&amp;quot;data[@name=&#39;s-computername&#39;]/@value&amp;quot; /&amp;gt;
            &amp;lt;/Name&amp;gt;
          &amp;lt;/xsl:if&amp;gt;
          &amp;lt;xsl:if test=&amp;quot;data[@name=&#39;s-ip&#39;]&amp;quot;&amp;gt;
            &amp;lt;IPAddress&amp;gt;
              &amp;lt;xsl:value-of select=&amp;quot; data[@name=&#39;s-ip&#39;]/@value&amp;quot; /&amp;gt;
            &amp;lt;/IPAddress&amp;gt;
          &amp;lt;/xsl:if&amp;gt;
          &amp;lt;xsl:if test=&amp;quot;data[@name=&#39;s-sitename&#39;]&amp;quot;&amp;gt;
            &amp;lt;Data Name=&amp;quot;ServiceType&amp;quot; Value=&amp;quot;{data[@name=&#39;s-sitename&#39;]/@value}&amp;quot; /&amp;gt;
          &amp;lt;/xsl:if&amp;gt;
        &amp;lt;/Device&amp;gt;
      &amp;lt;/xsl:if&amp;gt;

      &amp;lt;!-- --&amp;gt;
      &amp;lt;Client&amp;gt;
        &amp;lt;xsl:if test=&amp;quot;data[@name=&#39;c-ip&#39;]/@value != &#39;-&#39;&amp;quot;&amp;gt;
          &amp;lt;IPAddress&amp;gt;
            &amp;lt;xsl:value-of select=&amp;quot;data[@name=&#39;c-ip&#39;]/@value&amp;quot; /&amp;gt;
          &amp;lt;/IPAddress&amp;gt;
        &amp;lt;/xsl:if&amp;gt;

        &amp;lt;!-- Remote Port Number --&amp;gt;
        &amp;lt;xsl:if test=&amp;quot;data[@name=&#39;c-port&#39;]/@value !=&#39;-&#39;&amp;quot;&amp;gt;
          &amp;lt;Port&amp;gt;
            &amp;lt;xsl:value-of select=&amp;quot;data[@name=&#39;c-port&#39;]/@value&amp;quot; /&amp;gt;
          &amp;lt;/Port&amp;gt;
        &amp;lt;/xsl:if&amp;gt;
      &amp;lt;/Client&amp;gt;

      &amp;lt;!-- --&amp;gt;
      &amp;lt;Server&amp;gt;
        &amp;lt;HostName&amp;gt;
          &amp;lt;xsl:value-of select=&amp;quot;data[@name=&#39;cs-host&#39;]/@value&amp;quot; /&amp;gt;
        &amp;lt;/HostName&amp;gt;
      &amp;lt;/Server&amp;gt;

      &amp;lt;!-- --&amp;gt;
      &amp;lt;xsl:variable name=&amp;quot;user&amp;quot;&amp;gt;
        &amp;lt;xsl:value-of select=&amp;quot;data[@name=&#39;cs-user&#39;]/@value&amp;quot; /&amp;gt;
        &amp;lt;xsl:value-of select=&amp;quot;data[@name=&#39;cs-username&#39;]/@value&amp;quot; /&amp;gt;
        &amp;lt;xsl:value-of select=&amp;quot;data[@name=&#39;cs-userdn&#39;]/@value&amp;quot; /&amp;gt;
      &amp;lt;/xsl:variable&amp;gt;
      &amp;lt;xsl:if test=&amp;quot;$user !=&#39;-&#39;&amp;quot;&amp;gt;
        &amp;lt;User&amp;gt;
          &amp;lt;Id&amp;gt;
            &amp;lt;xsl:value-of select=&amp;quot;$user&amp;quot; /&amp;gt;
          &amp;lt;/Id&amp;gt;
        &amp;lt;/User&amp;gt;
      &amp;lt;/xsl:if&amp;gt;
      &amp;lt;Data Name=&amp;quot;MyMeta&amp;quot;&amp;gt;
        &amp;lt;xsl:attribute name=&amp;quot;Value&amp;quot; select=&amp;quot;$_mymeta&amp;quot; /&amp;gt;
      &amp;lt;/Data&amp;gt;
    &amp;lt;/EventSource&amp;gt;
  &amp;lt;/xsl:template&amp;gt;

  &amp;lt;!-- Event detail --&amp;gt;
  &amp;lt;xsl:template name=&amp;quot;event_detail&amp;quot;&amp;gt;
    &amp;lt;EventDetail&amp;gt;

      &amp;lt;!--
        We model Proxy events as either Receive or Send events depending on the method.
      
        We make use of the Receive/Send sub-elements Source/Destination to map
        the Client/Destination Proxy values and the Payload sub-element to map
        the URL and other details of the activity. If we have a query, we model
        it as a Criteria
      --&amp;gt;
      &amp;lt;TypeId&amp;gt;
        &amp;lt;xsl:value-of select=&amp;quot;concat(&#39;Bluecoat-&#39;, data[@name=&#39;cs-method&#39;]/@value, &#39;-&#39;, data[@name=&#39;cs-uri-scheme&#39;]/@value)&amp;quot; /&amp;gt;
        &amp;lt;xsl:if test=&amp;quot;data[@name=&#39;cs-uri-query&#39;]/@value != &#39;-&#39;&amp;quot;&amp;gt;-Query&amp;lt;/xsl:if&amp;gt;
      &amp;lt;/TypeId&amp;gt;
      &amp;lt;xsl:choose&amp;gt;
        &amp;lt;xsl:when test=&amp;quot;matches(data[@name=&#39;cs-method&#39;]/@value, &#39;GET|OPTIONS|HEAD&#39;)&amp;quot;&amp;gt;
          &amp;lt;Description&amp;gt;Receipt of information from a Resource via Proxy&amp;lt;/Description&amp;gt;
          &amp;lt;Receive&amp;gt;
            &amp;lt;xsl:call-template name=&amp;quot;setupParticipants&amp;quot; /&amp;gt;
            &amp;lt;xsl:call-template name=&amp;quot;setPayload&amp;quot; /&amp;gt;
            &amp;lt;xsl:call-template name=&amp;quot;setOutcome&amp;quot; /&amp;gt;
          &amp;lt;/Receive&amp;gt;
        &amp;lt;/xsl:when&amp;gt;
        &amp;lt;xsl:otherwise&amp;gt;
          &amp;lt;Description&amp;gt;Transmission of information to a Resource via Proxy&amp;lt;/Description&amp;gt;
          &amp;lt;Send&amp;gt;
            &amp;lt;xsl:call-template name=&amp;quot;setupParticipants&amp;quot; /&amp;gt;
            &amp;lt;xsl:call-template name=&amp;quot;setPayload&amp;quot; /&amp;gt;
            &amp;lt;xsl:call-template name=&amp;quot;setOutcome&amp;quot; /&amp;gt;
          &amp;lt;/Send&amp;gt;
        &amp;lt;/xsl:otherwise&amp;gt;
      &amp;lt;/xsl:choose&amp;gt;
    &amp;lt;/EventDetail&amp;gt;
  &amp;lt;/xsl:template&amp;gt;

  &amp;lt;!-- Establish the Source and Destination nodes --&amp;gt;
  &amp;lt;xsl:template name=&amp;quot;setupParticipants&amp;quot;&amp;gt;
    &amp;lt;Source&amp;gt;
      &amp;lt;Device&amp;gt;
        &amp;lt;xsl:if test=&amp;quot;data[@name=&#39;c-ip&#39;]/@value != &#39;-&#39;&amp;quot;&amp;gt;
          &amp;lt;IPAddress&amp;gt;
            &amp;lt;xsl:value-of select=&amp;quot;data[@name=&#39;c-ip&#39;]/@value&amp;quot; /&amp;gt;
          &amp;lt;/IPAddress&amp;gt;
        &amp;lt;/xsl:if&amp;gt;

        &amp;lt;!-- Remote Port Number --&amp;gt;
        &amp;lt;xsl:if test=&amp;quot;data[@name=&#39;c-port&#39;]/@value !=&#39;-&#39;&amp;quot;&amp;gt;
          &amp;lt;Port&amp;gt;
            &amp;lt;xsl:value-of select=&amp;quot;data[@name=&#39;c-port&#39;]/@value&amp;quot; /&amp;gt;
          &amp;lt;/Port&amp;gt;
        &amp;lt;/xsl:if&amp;gt;
      &amp;lt;/Device&amp;gt;
    &amp;lt;/Source&amp;gt;
    &amp;lt;Destination&amp;gt;
      &amp;lt;Device&amp;gt;
        &amp;lt;HostName&amp;gt;
          &amp;lt;xsl:value-of select=&amp;quot;data[@name=&#39;cs-host&#39;]/@value&amp;quot; /&amp;gt;
        &amp;lt;/HostName&amp;gt;
      &amp;lt;/Device&amp;gt;
    &amp;lt;/Destination&amp;gt;
  &amp;lt;/xsl:template&amp;gt;

  &amp;lt;!-- Define the Payload node --&amp;gt;
  &amp;lt;xsl:template name=&amp;quot;setPayload&amp;quot;&amp;gt;
    &amp;lt;Payload&amp;gt;
      &amp;lt;xsl:if test=&amp;quot;data[@name=&#39;cs-uri-query&#39;]/@value != &#39;-&#39;&amp;quot;&amp;gt;
        &amp;lt;Criteria&amp;gt;
          &amp;lt;DataSources&amp;gt;
            &amp;lt;DataSource&amp;gt;
              &amp;lt;xsl:value-of select=&amp;quot;concat(data[@name=&#39;cs-uri-scheme&#39;]/@value, &#39;://&#39;, data[@name=&#39;cs-host&#39;]/@value)&amp;quot; /&amp;gt;
              &amp;lt;xsl:if test=&amp;quot;data[@name=&#39;cs-uri-path&#39;]/@value != &#39;/&#39;&amp;quot;&amp;gt;
                &amp;lt;xsl:value-of select=&amp;quot;data[@name=&#39;cs-uri-path&#39;]/@value&amp;quot; /&amp;gt;
              &amp;lt;/xsl:if&amp;gt;
            &amp;lt;/DataSource&amp;gt;
          &amp;lt;/DataSources&amp;gt;
          &amp;lt;Query&amp;gt;
            &amp;lt;Raw&amp;gt;
              &amp;lt;xsl:value-of select=&amp;quot;data[@name=&#39;cs-uri-query&#39;]/@value&amp;quot; /&amp;gt;
            &amp;lt;/Raw&amp;gt;
          &amp;lt;/Query&amp;gt;
        &amp;lt;/Criteria&amp;gt;
      &amp;lt;/xsl:if&amp;gt;
      &amp;lt;Resource&amp;gt;

        &amp;lt;!-- Check for auth groups the URL belongs to --&amp;gt;
        &amp;lt;xsl:variable name=&amp;quot;authgroups&amp;quot;&amp;gt;
          &amp;lt;xsl:value-of select=&amp;quot;data[@name=&#39;cs-auth-group&#39;]/@value&amp;quot; /&amp;gt;
          &amp;lt;xsl:if test=&amp;quot;exists(data[@name=&#39;cs-auth-group&#39;]) and exists(data[@name=&#39;cs-auth-groups&#39;])&amp;quot;&amp;gt;,&amp;lt;/xsl:if&amp;gt;
          &amp;lt;xsl:value-of select=&amp;quot;data[@name=&#39;cs-auth-groups&#39;]/@value&amp;quot; /&amp;gt;
        &amp;lt;/xsl:variable&amp;gt;
        &amp;lt;xsl:choose&amp;gt;
          &amp;lt;xsl:when test=&amp;quot;contains($authgroups, &#39;,&#39;)&amp;quot;&amp;gt;
            &amp;lt;Groups&amp;gt;
              &amp;lt;xsl:for-each select=&amp;quot;tokenize($authgroups, &#39;,&#39;)&amp;quot;&amp;gt;
                &amp;lt;Group&amp;gt;
                  &amp;lt;Id&amp;gt;
                    &amp;lt;xsl:value-of select=&amp;quot;.&amp;quot; /&amp;gt;
                  &amp;lt;/Id&amp;gt;
                &amp;lt;/Group&amp;gt;
              &amp;lt;/xsl:for-each&amp;gt;
            &amp;lt;/Groups&amp;gt;
          &amp;lt;/xsl:when&amp;gt;
          &amp;lt;xsl:when test=&amp;quot;$authgroups != &#39;-&#39; and $authgroups != &#39;&#39;&amp;quot;&amp;gt;
            &amp;lt;Groups&amp;gt;
              &amp;lt;Group&amp;gt;
                &amp;lt;Id&amp;gt;
                  &amp;lt;xsl:value-of select=&amp;quot;$authgroups&amp;quot; /&amp;gt;
                &amp;lt;/Id&amp;gt;
              &amp;lt;/Group&amp;gt;
            &amp;lt;/Groups&amp;gt;
          &amp;lt;/xsl:when&amp;gt;
        &amp;lt;/xsl:choose&amp;gt;

        &amp;lt;!-- Re-form the URL --&amp;gt;
        &amp;lt;URL&amp;gt;
          &amp;lt;xsl:value-of select=&amp;quot;concat(data[@name=&#39;cs-uri-scheme&#39;]/@value, &#39;://&#39;, data[@name=&#39;cs-host&#39;]/@value)&amp;quot; /&amp;gt;
          &amp;lt;xsl:if test=&amp;quot;data[@name=&#39;cs-uri-path&#39;]/@value != &#39;/&#39;&amp;quot;&amp;gt;
            &amp;lt;xsl:value-of select=&amp;quot;data[@name=&#39;cs-uri-path&#39;]/@value&amp;quot; /&amp;gt;
          &amp;lt;/xsl:if&amp;gt;
        &amp;lt;/URL&amp;gt;
        &amp;lt;HTTPMethod&amp;gt;
          &amp;lt;xsl:value-of select=&amp;quot;data[@name=&#39;cs-method&#39;]/@value&amp;quot; /&amp;gt;
        &amp;lt;/HTTPMethod&amp;gt;
        &amp;lt;xsl:if test=&amp;quot;data[@name=&#39;cs(User-Agent)&#39;]/@value !=&#39;-&#39;&amp;quot;&amp;gt;
          &amp;lt;UserAgent&amp;gt;
            &amp;lt;xsl:value-of select=&amp;quot;data[@name=&#39;cs(User-Agent)&#39;]/@value&amp;quot; /&amp;gt;
          &amp;lt;/UserAgent&amp;gt;
        &amp;lt;/xsl:if&amp;gt;

        &amp;lt;!-- Inbound activity --&amp;gt;
        &amp;lt;xsl:if test=&amp;quot;data[@name=&#39;sc-bytes&#39;]/@value !=&#39;-&#39;&amp;quot;&amp;gt;
          &amp;lt;InboundSize&amp;gt;
            &amp;lt;xsl:value-of select=&amp;quot;data[@name=&#39;sc-bytes&#39;]/@value&amp;quot; /&amp;gt;
          &amp;lt;/InboundSize&amp;gt;
        &amp;lt;/xsl:if&amp;gt;
        &amp;lt;xsl:if test=&amp;quot;data[@name=&#39;sc-bodylength&#39;]/@value !=&#39;-&#39;&amp;quot;&amp;gt;
          &amp;lt;InboundContentSize&amp;gt;
            &amp;lt;xsl:value-of select=&amp;quot;data[@name=&#39;sc-bodylength&#39;]/@value&amp;quot; /&amp;gt;
          &amp;lt;/InboundContentSize&amp;gt;
        &amp;lt;/xsl:if&amp;gt;

        &amp;lt;!-- Outbound activity --&amp;gt;
        &amp;lt;xsl:if test=&amp;quot;data[@name=&#39;cs-bytes&#39;]/@value !=&#39;-&#39;&amp;quot;&amp;gt;
          &amp;lt;OutboundSize&amp;gt;
            &amp;lt;xsl:value-of select=&amp;quot;data[@name=&#39;cs-bytes&#39;]/@value&amp;quot; /&amp;gt;
          &amp;lt;/OutboundSize&amp;gt;
        &amp;lt;/xsl:if&amp;gt;
        &amp;lt;xsl:if test=&amp;quot;data[@name=&#39;cs-bodylength&#39;]/@value !=&#39;-&#39;&amp;quot;&amp;gt;
          &amp;lt;OutboundContentSize&amp;gt;
            &amp;lt;xsl:value-of select=&amp;quot;data[@name=&#39;cs-bodylength&#39;]/@value&amp;quot; /&amp;gt;
          &amp;lt;/OutboundContentSize&amp;gt;
        &amp;lt;/xsl:if&amp;gt;

        &amp;lt;!-- Miscellaneous --&amp;gt;
        &amp;lt;RequestTime&amp;gt;
          &amp;lt;xsl:value-of select=&amp;quot;data[@name=&#39;time-taken&#39;]/@value&amp;quot; /&amp;gt;
        &amp;lt;/RequestTime&amp;gt;
        &amp;lt;ResponseCode&amp;gt;
          &amp;lt;xsl:value-of select=&amp;quot;data[@name=&#39;sc-status&#39;]/@value&amp;quot; /&amp;gt;
        &amp;lt;/ResponseCode&amp;gt;
        &amp;lt;xsl:if test=&amp;quot;data[@name=&#39;rs(Content-Type)&#39;]/@value != &#39;-&#39;&amp;quot;&amp;gt;
          &amp;lt;MimeType&amp;gt;
            &amp;lt;xsl:value-of select=&amp;quot;data[@name=&#39;rs(Content-Type)&#39;]/@value&amp;quot; /&amp;gt;
          &amp;lt;/MimeType&amp;gt;
        &amp;lt;/xsl:if&amp;gt;
        &amp;lt;xsl:if test=&amp;quot;data[@name=&#39;cs-categories&#39;]/@value != &#39;none&#39; or data[@name=&#39;sc-filter-category&#39;]/@value != &#39;none&#39;&amp;quot;&amp;gt;
          &amp;lt;Category&amp;gt;
            &amp;lt;xsl:value-of select=&amp;quot;data[@name=&#39;cs-categories&#39;]/@value&amp;quot; /&amp;gt;
            &amp;lt;xsl:value-of select=&amp;quot;data[@name=&#39;sc-filter-category&#39;]/@value&amp;quot; /&amp;gt;
          &amp;lt;/Category&amp;gt;
        &amp;lt;/xsl:if&amp;gt;

        &amp;lt;!-- Take up other items as data elements --&amp;gt;
        &amp;lt;xsl:apply-templates select=&amp;quot;data[@name=&#39;s-action&#39;]&amp;quot; /&amp;gt;
        &amp;lt;xsl:apply-templates select=&amp;quot;data[@name=&#39;cs-uri-scheme&#39;]&amp;quot; /&amp;gt;
        &amp;lt;xsl:apply-templates select=&amp;quot;data[@name=&#39;s-hierarchy&#39;]&amp;quot; /&amp;gt;
        &amp;lt;xsl:apply-templates select=&amp;quot;data[@name=&#39;sc-filter-result&#39;]&amp;quot; /&amp;gt;
        &amp;lt;xsl:apply-templates select=&amp;quot;data[@name=&#39;x-virus-id&#39;]&amp;quot; /&amp;gt;
        &amp;lt;xsl:apply-templates select=&amp;quot;data[@name=&#39;x-virus-details&#39;]&amp;quot; /&amp;gt;
        &amp;lt;xsl:apply-templates select=&amp;quot;data[@name=&#39;x-icap-error-code&#39;]&amp;quot; /&amp;gt;
        &amp;lt;xsl:apply-templates select=&amp;quot;data[@name=&#39;x-icap-error-details&#39;]&amp;quot; /&amp;gt;
      &amp;lt;/Resource&amp;gt;
    &amp;lt;/Payload&amp;gt;
  &amp;lt;/xsl:template&amp;gt;

  &amp;lt;!-- Generic Data capture template so we capture all other Bluecoat objects not already consumed --&amp;gt;
  &amp;lt;xsl:template match=&amp;quot;data&amp;quot;&amp;gt;
    &amp;lt;xsl:if test=&amp;quot;@value != &#39;-&#39;&amp;quot;&amp;gt;
      &amp;lt;Data Name=&amp;quot;{@name}&amp;quot; Value=&amp;quot;{@value}&amp;quot; /&amp;gt;
    &amp;lt;/xsl:if&amp;gt;
  &amp;lt;/xsl:template&amp;gt;

  &amp;lt;!-- 
         Set up the Outcome node.
  
  We only set an Outcome for an error state. The absence of an Outcome infers success
  --&amp;gt;
  &amp;lt;xsl:template name=&amp;quot;setOutcome&amp;quot;&amp;gt;
    &amp;lt;xsl:choose&amp;gt;

      &amp;lt;!-- Favour squid specific errors first --&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;data[@name=&#39;sc-status&#39;]/@value &amp;gt; 500&amp;quot;&amp;gt;
        &amp;lt;Outcome&amp;gt;
          &amp;lt;Success&amp;gt;false&amp;lt;/Success&amp;gt;
          &amp;lt;Description&amp;gt;
            &amp;lt;xsl:call-template name=&amp;quot;responseCodeDesc&amp;quot;&amp;gt;
              &amp;lt;xsl:with-param name=&amp;quot;code&amp;quot; select=&amp;quot;data[@name=&#39;sc-status&#39;]/@value&amp;quot; /&amp;gt;
            &amp;lt;/xsl:call-template&amp;gt;
          &amp;lt;/Description&amp;gt;
        &amp;lt;/Outcome&amp;gt;
      &amp;lt;/xsl:when&amp;gt;

      &amp;lt;!-- Now check for &#39;normal&#39; errors --&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;tCliStatus &amp;gt; 400&amp;quot;&amp;gt;
        &amp;lt;Outcome&amp;gt;
          &amp;lt;Success&amp;gt;false&amp;lt;/Success&amp;gt;
          &amp;lt;Description&amp;gt;
            &amp;lt;xsl:call-template name=&amp;quot;responseCodeDesc&amp;quot;&amp;gt;
              &amp;lt;xsl:with-param name=&amp;quot;code&amp;quot; select=&amp;quot;data[@name=&#39;sc-status&#39;]/@value&amp;quot; /&amp;gt;
            &amp;lt;/xsl:call-template&amp;gt;
          &amp;lt;/Description&amp;gt;
        &amp;lt;/Outcome&amp;gt;
      &amp;lt;/xsl:when&amp;gt;
    &amp;lt;/xsl:choose&amp;gt;
  &amp;lt;/xsl:template&amp;gt;

  &amp;lt;!-- Response Code map to Descriptions --&amp;gt;
  &amp;lt;xsl:template name=&amp;quot;responseCodeDesc&amp;quot;&amp;gt;
    &amp;lt;xsl:param name=&amp;quot;code&amp;quot; /&amp;gt;
    &amp;lt;xsl:choose&amp;gt;

      &amp;lt;!-- Informational --&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 100&amp;quot;&amp;gt;Continue&amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 101&amp;quot;&amp;gt;Switching Protocols&amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 102&amp;quot;&amp;gt;Processing&amp;lt;/xsl:when&amp;gt;

      &amp;lt;!-- Successful Transaction --&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 200&amp;quot;&amp;gt;OK&amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 201&amp;quot;&amp;gt;Created&amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 202&amp;quot;&amp;gt;Accepted&amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 203&amp;quot;&amp;gt;Non-Authoritative Information&amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 204&amp;quot;&amp;gt;No Content&amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 205&amp;quot;&amp;gt;Reset Content&amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 206&amp;quot;&amp;gt;Partial Content&amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 207&amp;quot;&amp;gt;Multi Status&amp;lt;/xsl:when&amp;gt;

      &amp;lt;!-- Redirection --&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 300&amp;quot;&amp;gt;Multiple Choices&amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 301&amp;quot;&amp;gt;Moved Permanently&amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 302&amp;quot;&amp;gt;Moved Temporarily&amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 303&amp;quot;&amp;gt;See Other&amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 304&amp;quot;&amp;gt;Not Modified&amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 305&amp;quot;&amp;gt;Use Proxy&amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 307&amp;quot;&amp;gt;Temporary Redirect&amp;lt;/xsl:when&amp;gt;

      &amp;lt;!-- Client Error --&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 400&amp;quot;&amp;gt;Bad Request&amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 401&amp;quot;&amp;gt;Unauthorized&amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 402&amp;quot;&amp;gt;Payment Required&amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 403&amp;quot;&amp;gt;Forbidden&amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 404&amp;quot;&amp;gt;Not Found&amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 405&amp;quot;&amp;gt;Method Not Allowed&amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 406&amp;quot;&amp;gt;Not Acceptable&amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 407&amp;quot;&amp;gt;Proxy Authentication Required&amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 408&amp;quot;&amp;gt;Request Timeout&amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 409&amp;quot;&amp;gt;Conflict&amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 410&amp;quot;&amp;gt;Gone&amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 411&amp;quot;&amp;gt;Length Required&amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 412&amp;quot;&amp;gt;Precondition Failed&amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 413&amp;quot;&amp;gt;Request Entity Too Large&amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 414&amp;quot;&amp;gt;Request URI Too Large&amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 415&amp;quot;&amp;gt;Unsupported Media Type&amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 416&amp;quot;&amp;gt;Request Range Not Satisfiable&amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 417&amp;quot;&amp;gt;Expectation Failed&amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 422&amp;quot;&amp;gt;Unprocessable Entity&amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 424&amp;quot;&amp;gt;Locked/Failed Dependency&amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 433&amp;quot;&amp;gt;Unprocessable Entity&amp;lt;/xsl:when&amp;gt;

      &amp;lt;!-- Server Error --&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 500&amp;quot;&amp;gt;Internal Server Error&amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 501&amp;quot;&amp;gt;Not Implemented&amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 502&amp;quot;&amp;gt;Bad Gateway&amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 503&amp;quot;&amp;gt;Service Unavailable&amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 504&amp;quot;&amp;gt;Gateway Timeout&amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 505&amp;quot;&amp;gt;HTTP Version Not Supported&amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 507&amp;quot;&amp;gt;Insufficient Storage&amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 600&amp;quot;&amp;gt;Squid: header parsing error&amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 601&amp;quot;&amp;gt;Squid: header size overflow detected while parsing/roundcube: software configuration error&amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:when test=&amp;quot;$code = 603&amp;quot;&amp;gt;roundcube: invalid authorization&amp;lt;/xsl:when&amp;gt;
      &amp;lt;xsl:otherwise&amp;gt;
        &amp;lt;xsl:value-of select=&amp;quot;concat(&#39;Unknown Code:&#39;, $code)&amp;quot; /&amp;gt;
      &amp;lt;/xsl:otherwise&amp;gt;
    &amp;lt;/xsl:choose&amp;gt;
  &amp;lt;/xsl:template&amp;gt;
&amp;lt;/xsl:stylesheet&amp;gt;

&lt;/code&gt;&lt;/pre&gt;


    &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
    &lt;div class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;
      
      &lt;span class=&#34;&#34; style=&#34;font-size: smaller&#34;&gt;BlueCoat XSLT Translation&lt;/span&gt;
      
      (
      &lt;a href=&#34;../../files/HOWTOs/EventFeeds/ProcessingHowTo/BlueCoat.xslt&#34; class=&#34;&#34; style=&#34;font-size: smaller&#34;&gt;Download BlueCoat.xslt&lt;/a&gt;
      &lt;i class=&#34;external-link-icon fas fa-file-download fa-sm text-secondary&#34; title=&#34;External link&#34;&gt;&lt;/i&gt;
      )
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Refreshing the current event will show the &lt;em&gt;output&lt;/em&gt; pane contains&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;?xml version=&amp;quot;1.1&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;Events 
    xmlns=&amp;quot;event-logging:3&amp;quot; 
    xmlns:stroom=&amp;quot;stroom&amp;quot; 
    xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot; 
    xmlns:xs=&amp;quot;http://www.w3.org/2001/XMLSchema&amp;quot; 
    xsi:schemaLocation=&amp;quot;event-logging:3 file://event-logging-v3.2.4.xsd&amp;quot; 
    Version=&amp;quot;3.2.4&amp;quot;&amp;gt;
  &amp;lt;Event&amp;gt;
    &amp;lt;EventTime&amp;gt;
      &amp;lt;TimeCreated&amp;gt;2005-05-04T17:16:12.000Z&amp;lt;/TimeCreated&amp;gt;
    &amp;lt;/EventTime&amp;gt;
    &amp;lt;EventSource&amp;gt;
      &amp;lt;System&amp;gt;
        &amp;lt;Name&amp;gt;Site http://log-sharing.dreamhosters.com/ Bluecoat Logs&amp;lt;/Name&amp;gt;
        &amp;lt;Environment&amp;gt;Development&amp;lt;/Environment&amp;gt;
      &amp;lt;/System&amp;gt;
      &amp;lt;Generator&amp;gt;Bluecoat Software: SGOS 3.2.4.28 Version: 1.0&amp;lt;/Generator&amp;gt;
      &amp;lt;Device&amp;gt;
        &amp;lt;IPAddress&amp;gt;192.16.170.42&amp;lt;/IPAddress&amp;gt;
        &amp;lt;Data Name=&amp;quot;ServiceType&amp;quot; Value=&amp;quot;SG-HTTP-Service&amp;quot; /&amp;gt;
      &amp;lt;/Device&amp;gt;
      &amp;lt;Client&amp;gt;
        &amp;lt;IPAddress&amp;gt;45.110.2.82&amp;lt;/IPAddress&amp;gt;
      &amp;lt;/Client&amp;gt;
      &amp;lt;Server&amp;gt;
        &amp;lt;HostName&amp;gt;www.inmobus.com&amp;lt;/HostName&amp;gt;
      &amp;lt;/Server&amp;gt;
      &amp;lt;User&amp;gt;
        &amp;lt;Id&amp;gt;george&amp;lt;/Id&amp;gt;
      &amp;lt;/User&amp;gt;
      &amp;lt;Data Name=&amp;quot;MyMeta&amp;quot; Value=&amp;quot;FQDN:somenode.strmdev00.org\nipaddress:192.168.2.220\nipaddress_eth0:192.168.2.220\nipaddress_lo:127.0.0.1\nipaddress_virbr0:192.168.122.1\n&amp;quot; /&amp;gt;
    &amp;lt;/EventSource&amp;gt;
    &amp;lt;EventDetail&amp;gt;
      &amp;lt;TypeId&amp;gt;Bluecoat-GET-http&amp;lt;/TypeId&amp;gt;
      &amp;lt;Description&amp;gt;Receipt of information from a Resource via Proxy&amp;lt;/Description&amp;gt;
      &amp;lt;Receive&amp;gt;
        &amp;lt;Source&amp;gt;
          &amp;lt;Device&amp;gt;
            &amp;lt;IPAddress&amp;gt;45.110.2.82&amp;lt;/IPAddress&amp;gt;
          &amp;lt;/Device&amp;gt;
        &amp;lt;/Source&amp;gt;
        &amp;lt;Destination&amp;gt;
          &amp;lt;Device&amp;gt;
            &amp;lt;HostName&amp;gt;www.inmobus.com&amp;lt;/HostName&amp;gt;
          &amp;lt;/Device&amp;gt;
        &amp;lt;/Destination&amp;gt;
        &amp;lt;Payload&amp;gt;
          &amp;lt;Resource&amp;gt;
            &amp;lt;URL&amp;gt;http://www.inmobus.com/wcm/assets/images/imagefileicon.gif&amp;lt;/URL&amp;gt;
            &amp;lt;HTTPMethod&amp;gt;GET&amp;lt;/HTTPMethod&amp;gt;
            &amp;lt;UserAgent&amp;gt;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322)&amp;lt;/UserAgent&amp;gt;
            &amp;lt;InboundSize&amp;gt;941&amp;lt;/InboundSize&amp;gt;
            &amp;lt;OutboundSize&amp;gt;729&amp;lt;/OutboundSize&amp;gt;
            &amp;lt;RequestTime&amp;gt;1&amp;lt;/RequestTime&amp;gt;
            &amp;lt;ResponseCode&amp;gt;200&amp;lt;/ResponseCode&amp;gt;
            &amp;lt;MimeType&amp;gt;image/gif&amp;lt;/MimeType&amp;gt;
            &amp;lt;Data Name=&amp;quot;s-action&amp;quot; Value=&amp;quot;TCP_HIT&amp;quot; /&amp;gt;
            &amp;lt;Data Name=&amp;quot;cs-uri-scheme&amp;quot; Value=&amp;quot;http&amp;quot; /&amp;gt;
            &amp;lt;Data Name=&amp;quot;s-hierarchy&amp;quot; Value=&amp;quot;DIRECT&amp;quot; /&amp;gt;
            &amp;lt;Data Name=&amp;quot;sc-filter-result&amp;quot; Value=&amp;quot;PROXIED&amp;quot; /&amp;gt;
            &amp;lt;Data Name=&amp;quot;x-icap-error-code&amp;quot; Value=&amp;quot;none&amp;quot; /&amp;gt;
          &amp;lt;/Resource&amp;gt;
        &amp;lt;/Payload&amp;gt;
      &amp;lt;/Receive&amp;gt;
    &amp;lt;/EventDetail&amp;gt;
  &amp;lt;/Event&amp;gt;
&amp;lt;/Events&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;for the given input&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;?xml version=&amp;quot;1.1&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;records xmlns=&amp;quot;records:2&amp;quot; xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot; xsi:schemaLocation=&amp;quot;records:2 file://records-v2.0.xsd&amp;quot; version=&amp;quot;2.0&amp;quot;&amp;gt;
  &amp;lt;record&amp;gt;
    &amp;lt;data name=&amp;quot;date&amp;quot; value=&amp;quot;2005-05-04&amp;quot; /&amp;gt;
    &amp;lt;data name=&amp;quot;time&amp;quot; value=&amp;quot;17:16:12&amp;quot; /&amp;gt;
    &amp;lt;data name=&amp;quot;time-taken&amp;quot; value=&amp;quot;1&amp;quot; /&amp;gt;
    &amp;lt;data name=&amp;quot;c-ip&amp;quot; value=&amp;quot;45.110.2.82&amp;quot; /&amp;gt;
    &amp;lt;data name=&amp;quot;sc-status&amp;quot; value=&amp;quot;200&amp;quot; /&amp;gt;
    &amp;lt;data name=&amp;quot;s-action&amp;quot; value=&amp;quot;TCP_HIT&amp;quot; /&amp;gt;
    &amp;lt;data name=&amp;quot;sc-bytes&amp;quot; value=&amp;quot;941&amp;quot; /&amp;gt;
    &amp;lt;data name=&amp;quot;cs-bytes&amp;quot; value=&amp;quot;729&amp;quot; /&amp;gt;
    &amp;lt;data name=&amp;quot;cs-method&amp;quot; value=&amp;quot;GET&amp;quot; /&amp;gt;
    &amp;lt;data name=&amp;quot;cs-uri-scheme&amp;quot; value=&amp;quot;http&amp;quot; /&amp;gt;
    &amp;lt;data name=&amp;quot;cs-host&amp;quot; value=&amp;quot;www.inmobus.com&amp;quot; /&amp;gt;
    &amp;lt;data name=&amp;quot;cs-uri-path&amp;quot; value=&amp;quot;/wcm/assets/images/imagefileicon.gif&amp;quot; /&amp;gt;
    &amp;lt;data name=&amp;quot;cs-uri-query&amp;quot; value=&amp;quot;-&amp;quot; /&amp;gt;
    &amp;lt;data name=&amp;quot;cs-username&amp;quot; value=&amp;quot;george&amp;quot; /&amp;gt;
    &amp;lt;data name=&amp;quot;s-hierarchy&amp;quot; value=&amp;quot;DIRECT&amp;quot; /&amp;gt;
    &amp;lt;data name=&amp;quot;s-supplier-name&amp;quot; value=&amp;quot;38.112.92.20&amp;quot; /&amp;gt;
    &amp;lt;data name=&amp;quot;rs(Content-Type)&amp;quot; value=&amp;quot;image/gif&amp;quot; /&amp;gt;
    &amp;lt;data name=&amp;quot;cs(User-Agent)&amp;quot; value=&amp;quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322)&amp;quot; /&amp;gt;
    &amp;lt;data name=&amp;quot;sc-filter-result&amp;quot; value=&amp;quot;PROXIED&amp;quot; /&amp;gt;
    &amp;lt;data name=&amp;quot;sc-filter-category&amp;quot; value=&amp;quot;none&amp;quot; /&amp;gt;
    &amp;lt;data name=&amp;quot;x-virus-id&amp;quot; value=&amp;quot;-&amp;quot; /&amp;gt;
    &amp;lt;data name=&amp;quot;s-ip&amp;quot; value=&amp;quot;192.16.170.42&amp;quot; /&amp;gt;
    &amp;lt;data name=&amp;quot;s-sitename&amp;quot; value=&amp;quot;SG-HTTP-Service&amp;quot; /&amp;gt;
    &amp;lt;data name=&amp;quot;x-virus-details&amp;quot; value=&amp;quot;-&amp;quot; /&amp;gt;
    &amp;lt;data name=&amp;quot;x-icap-error-code&amp;quot; value=&amp;quot;none&amp;quot; /&amp;gt;
    &amp;lt;data name=&amp;quot;x-icap-error-details&amp;quot; value=&amp;quot;-&amp;quot; /&amp;gt;
  &amp;lt;/record&amp;gt;
&amp;lt;/records&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Do not forget to Save 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/save.svg&#34; 
  title=&#34;Save&#34; 
  alt=&#34;save.svg&#34;&gt;
 the translation as we are complete.&lt;/p&gt;
&lt;h3 id=&#34;schema-validation&#34;&gt;Schema Validation&lt;/h3&gt;
&lt;p&gt;One last point, validating the use of the Stroom Event Logging Schema is performed in the &lt;code&gt;schemaFilter&lt;/code&gt; component of the pipeline.
Had our translation resulted in a malformed Event, this pipeline component displays any errors.
In the screen below, we have purposely changed the &lt;code&gt;EventTime/TimeCreated&lt;/code&gt; element to be &lt;code&gt;EventTime/TimeCreatd&lt;/code&gt;.
If one selects the &lt;code&gt;schemaFilter&lt;/code&gt; component and then Refresh 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/refresh-green.svg&#34; 
  title=&#34;Refresh step&#34; 
  alt=&#34;refresh-green.svg&#34;&gt;
 the current step, we will see that&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;there is an error as indicated by a square &lt;strong&gt;Red&lt;/strong&gt; box 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/HOWTOs/icons/errorIndicator.png&#34; 
  title=&#34;Error indicator&#34; 
  alt=&#34;../HOWTOs/icons/errorIndicator.png&#34;&gt;
 in the top right hand corner&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;there is a &lt;strong&gt;Red&lt;/strong&gt; rectangle line indicator mark 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/HOWTOs/icons/errorLine.png&#34; 
  title=&#34;Error line indicator&#34; 
  alt=&#34;../HOWTOs/icons/errorLine.png&#34;&gt;
 on the right hand side in the display slide bar&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;there is a &lt;strong&gt;Red&lt;/strong&gt; error marker 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/error.svg&#34; 
  title=&#34;Error&#34; 
  alt=&#34;error.svg&#34;&gt;
 in the left hand gutter.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-47.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-47.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-47.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-47.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - Translation - Stepping XSLT Translation 6&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Hovering over the error marker 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/error.svg&#34; 
  title=&#34;Error&#34; 
  alt=&#34;error.svg&#34;&gt;
 on the left hand side will bring a pop-up describing the error.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-48.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-48.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-48.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-48.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - Translation - Stepping XSLT Translation 7&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;At this point, close the &lt;strong&gt;BlueCoat-Proxy-V1.0-EVENTS&lt;/strong&gt; stepping tab, acknowledging you do not want to save your errant changes&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-49.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-49.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-49.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-49.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Create Feed - Translation - Stepping XSLT Translation 8&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;by pressing the 



&lt;span class=&#34;stroom-button&#34; title=&#34;Ok button&#34; &gt;
  &lt;span class=&#34;stroom-button-text&#34;&gt;Ok&lt;/span&gt;
&lt;/span&gt;
 button.&lt;/p&gt;
&lt;h2 id=&#34;automated-processing&#34;&gt;Automated Processing&lt;/h2&gt;
&lt;p&gt;Now that we have authored our translation, we want to enable Stroom to automatically process streams of raw event log data as it arrives.
We do this by configuring a &lt;code&gt;Processor&lt;/code&gt; in the &lt;strong&gt;BlueCoat-Proxy-V1.0-EVENTS&lt;/strong&gt; &lt;code&gt;pipeline&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;adding-a-pipeline-processor&#34;&gt;Adding a Pipeline Processor&lt;/h3&gt;
&lt;p&gt;Open the &lt;strong&gt;BlueCoat-Proxy-V1.0-EVENTS&lt;/strong&gt; &lt;code&gt;pipeline&lt;/code&gt; by selecting it (&lt;em&gt;double left click&lt;/em&gt;) in the &lt;code&gt;Explorer&lt;/code&gt; display to show&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-50.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-50.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-50.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-50.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Enable Processing&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;To configure a Processor we select the &lt;code&gt;Processors&lt;/code&gt; hyper-link of the &lt;strong&gt;BlueCoat-Proxy-V1.0-EVENTS&lt;/strong&gt; &lt;code&gt;Pipeline&lt;/code&gt; tab to reveal&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-51.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-51.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-51.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-51.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Enable Processing - Processors table&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;We add a Processor by pressing the add processor button 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/add.svg&#34; 
  title=&#34;Add processor&#34; 
  alt=&#34;add.svg&#34;&gt;
 in the top left hand corner.
At this you will be presented with an &lt;code&gt;Add Filter&lt;/code&gt; configuration window.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-52.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-52.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-52.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-52.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Enable Processing - Add Filter 1&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;As we wish to create a Processor that will automatically process all &lt;strong&gt;BlueCoat-Proxy-V1.0-EVENTS&lt;/strong&gt; feed &lt;code&gt;Raw Events&lt;/code&gt; we will select the BlueCoat-Proxy-V1.0-EVENTS &lt;code&gt;Feed&lt;/code&gt; and Raw Event &lt;code&gt;Stream Type&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To select the feed, we press the &lt;code&gt;Edit&lt;/code&gt; button 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/edit.svg&#34; 
  title=&#34;Edit&#34; 
  alt=&#34;edit.svg&#34;&gt;
.
At this, the &lt;code&gt;Choose Feeds To Include And Exclude&lt;/code&gt; configuration window is displayed.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-53.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-53.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-53.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-53.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Enable Processing - Add Filter 2&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;As we need to &lt;code&gt;Include&lt;/code&gt; the BlueCoat-Proxy-V1.0-EVENTS &lt;code&gt;Feed&lt;/code&gt; in our selection, press the 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/add.svg&#34; 
  title=&#34;Add&#34; 
  alt=&#34;add.svg&#34;&gt;
 button in the &lt;code&gt;Include:&lt;/code&gt; pane of the window to be presented with a &lt;code&gt;Choose Item&lt;/code&gt; configuration window.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-54.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-54.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-54.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-54.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Enable Processing - Add Filter 3&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Navigate to the &lt;strong&gt;Event Sources/Proxy/BlueCoat&lt;/strong&gt; folder and select the &lt;strong&gt;BlueCoat-Proxy-V1.0-EVENTS&lt;/strong&gt; &lt;code&gt;Feed&lt;/code&gt;&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-55.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-55.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-55.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-55.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Enable Processing - Add Filter 4&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;then press the 



&lt;span class=&#34;stroom-button&#34; title=&#34;Ok button&#34; &gt;
  &lt;span class=&#34;stroom-button-text&#34;&gt;Ok&lt;/span&gt;
&lt;/span&gt;
 button to select and see that the feed is included.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-56.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-56.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-56.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-56.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Enable Processing - Add Filter 5&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Again press the 



&lt;span class=&#34;stroom-button&#34; title=&#34;Ok button&#34; &gt;
  &lt;span class=&#34;stroom-button-text&#34;&gt;Ok&lt;/span&gt;
&lt;/span&gt;
 button to close the &lt;code&gt;Choose Feeds To Include And Exclude&lt;/code&gt; window to show that we have selected our feed in the &lt;code&gt;Feeds:&lt;/code&gt; selection pane of the &lt;code&gt;Add Filter&lt;/code&gt; configuration window.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-57.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-57.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-57.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-57.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Enable Processing - Add Filter 6&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;We now need to select our &lt;code&gt;Stream Type&lt;/code&gt;.
Press the 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/add.svg&#34; 
  title=&#34;Add&#34; 
  alt=&#34;add.svg&#34;&gt;
 button in the &lt;code&gt;Stream Types:&lt;/code&gt; pane of the window to be presented with a &lt;code&gt;Add Stream Type&lt;/code&gt; window with a &lt;code&gt;Stream Type:&lt;/code&gt; selection drop down.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-58.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-58.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-58.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-58.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Enable Processing - Add Filter 7&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;We select (&lt;em&gt;left click&lt;/em&gt;) the drop down selection to display the types of Stream we can choose&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-59.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-59.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-59.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-59.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Enable Processing - Add Filter 8&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;and as we are selecting &lt;code&gt;Raw Events&lt;/code&gt; we select that item then press the 



&lt;span class=&#34;stroom-button&#34; title=&#34;Ok button&#34; &gt;
  &lt;span class=&#34;stroom-button-text&#34;&gt;Ok&lt;/span&gt;
&lt;/span&gt;
 button at which we see that our &lt;code&gt;Add Filter&lt;/code&gt; configuration window displays&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-60.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-60.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-60.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-60.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Enable Processing - Add Filter 9&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;As we have selected our filter items, press the 



&lt;span class=&#34;stroom-button&#34; title=&#34;Ok button&#34; &gt;
  &lt;span class=&#34;stroom-button-text&#34;&gt;Ok&lt;/span&gt;
&lt;/span&gt;
 button to display our configured Processors.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-61.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-61.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-61.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-61.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Enable Processing - Configured Processors&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;We now see our display is divided into two panes.
The Processors table pane at the top and the specific Processor pane below.
In our case, our filter selection has left the &lt;strong&gt;BlueCoat-Proxy-V1.0-EVENTS&lt;/strong&gt; &lt;code&gt;Filter&lt;/code&gt; selected in the Processors table&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-62.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-62.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-62.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-62.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Enable Processing - Configured Processors - Selected Processor&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;and the specific filter&amp;rsquo;s details in the bottom pane.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-63.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-63.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-63.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-63.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Enable Processing - Configured Processors - Selected Processor Detail&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;The column entries in the Processors Table pane describe&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pipeline - the name of the Processor pipeline (










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/filter.svg&#34; 
  title=&#34;Filter&#34; 
  alt=&#34;filter.svg&#34;&gt;
)&lt;/li&gt;
&lt;li&gt;Tracker Ms - the last time the tracker updated&lt;/li&gt;
&lt;li&gt;Tracker % - the percentage of available streams completed&lt;/li&gt;
&lt;li&gt;Last Poll Age - the last time the processor found new streams to process&lt;/li&gt;
&lt;li&gt;Task Count - the number of processor tasks currently running&lt;/li&gt;
&lt;li&gt;Priority - the queue scheduling priority of task submission to available stream processors&lt;/li&gt;
&lt;li&gt;Streams - the number of streams that have been processed (includes currently running streams)&lt;/li&gt;
&lt;li&gt;Events - ??&lt;/li&gt;
&lt;li&gt;Status - the status of the processor.&lt;/li&gt;
&lt;li&gt;Normally empty if the number of stream is open-ended.&lt;/li&gt;
&lt;li&gt;If only are subset of streams were chosen (e.g. a time range in the filter) then the status will be &lt;em&gt;Complete&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Enabled - check box to indicate the processor is enabled&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We now need only &lt;code&gt;Enable&lt;/code&gt; both the pipeline Processor and the pipeline Filter for automatic processing to occur.
We do this by selecting both check boxes in the &lt;code&gt;Enabled&lt;/code&gt; column.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-64.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-64.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-64.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-64.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Enable Processing - Configured Processors - Enable Processor&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;If we refresh our Processor table by pressing the 










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/refresh.svg&#34; 
  title=&#34;Refresh&#34; 
  alt=&#34;refresh.svg&#34;&gt;
 button in the top right hand corner, we will see that more table entries have been filled in.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-65.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-65.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-65.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-65.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Enable Processing - Configured Processors - Enable Processor Result&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;We see that the tracker last updated at &lt;em&gt;2018-07-14T04:00:35.289Z&lt;/em&gt;, the percentage complete is &lt;em&gt;100&lt;/em&gt; (we only had one stream after all), the last time active streams were checked for was &lt;em&gt;2.3&lt;/em&gt; minutes ago, there are no tasks running and that &lt;em&gt;1&lt;/em&gt; stream has completed.
Note that the &lt;code&gt;Status&lt;/code&gt; column is blank as we have an &lt;em&gt;open ended&lt;/em&gt; filter in that the processor will continue to select and process any new stream of &lt;code&gt;Raw Events&lt;/code&gt; coming into the &lt;strong&gt;BlueCoat-Proxy-V1.0-EVENTS&lt;/strong&gt; feed.&lt;/p&gt;
&lt;p&gt;If we return to the &lt;em&gt;BlueCoat-Proxy-V1.0-EVENTS&lt;/em&gt;* &lt;code&gt;Feed&lt;/code&gt; tab, ensuring the &lt;strong&gt;Data&lt;/strong&gt; hyper-link is selected and then refresh (










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/refresh.svg&#34; 
  title=&#34;Refresh&#34; 
  alt=&#34;refresh.svg&#34;&gt;
) the top pane that holds the summary of the latest Feed streams&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-66.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-66.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-66.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-66.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Enable Processing - Configured Processors - Feed Display&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;We see a new entry in the table.
The columns display&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Created - The time the stream was created.&lt;/li&gt;
&lt;li&gt;Type - The type of stream.
Our new entry has a type of &amp;lsquo;Events&amp;rsquo; as we have processed our &lt;code&gt;Raw Events&lt;/code&gt; data.&lt;/li&gt;
&lt;li&gt;Feed - The name of the stream&amp;rsquo;s feed&lt;/li&gt;
&lt;li&gt;Pipeline - The name of the pipeline involved in the generation of the stream&lt;/li&gt;
&lt;li&gt;Raw - The size in bytes of the raw stream data&lt;/li&gt;
&lt;li&gt;Disk - The size in bytes of the raw stream data when stored in compressed form on the disk&lt;/li&gt;
&lt;li&gt;Read - The number of records read by a pipeline&lt;/li&gt;
&lt;li&gt;Write - The number of records (events) written by a pipeline.
In this case the difference is that we did not generate events for the &lt;code&gt;Software&lt;/code&gt; or &lt;code&gt;Version&lt;/code&gt; records we read.&lt;/li&gt;
&lt;li&gt;Fatal - The number of fatal errors the pipeline encountered when processing this stream&lt;/li&gt;
&lt;li&gt;Error - The number of errors the pipeline encountered when processing this stream&lt;/li&gt;
&lt;li&gt;Warn - The number of warnings the pipeline encountered when processing this stream&lt;/li&gt;
&lt;li&gt;Info - The number of informational alerts the pipeline encountered when processing this stream&lt;/li&gt;
&lt;li&gt;Retention - The retention period for this stream of data&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If we also refresh (










&lt;img 
  class=&#34;stroom-icon &#34; 
  src=&#34;../../images/stroom-ui/refresh.svg&#34; 
  title=&#34;Refresh&#34; 
  alt=&#34;refresh.svg&#34;&gt;
) the specific feed pane (middle) we again see a new entry of the &lt;code&gt;Events&lt;/code&gt; &lt;em&gt;Type&lt;/em&gt;&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-67.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-67.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-67.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-67.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Enable Processing - Configured Processors - Specific Feed Display&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;If we select (&lt;em&gt;left click&lt;/em&gt;) on the &lt;code&gt;Events&lt;/code&gt; &lt;em&gt;Type&lt;/em&gt; in either pane, we will see that the data pane displays the first event in the &lt;em&gt;GCHQ Stroom Event Logging XML Schema&lt;/em&gt; form.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-68.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-68.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-68.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-68.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Enable Processing - Configured Processors - Event Display&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;We can now send a file of BlueCoat Proxy logs to our Stroom instance from a Linux host using &lt;em&gt;curl&lt;/em&gt; command and see how Stroom will automatically processes the file.
Use the command&lt;/p&gt;

  






&lt;div class=&#34;code-toolbar&#34;&gt;
  &lt;pre 
    class=&#34;command-line language-bash&#34; 
    data-user=&#34;user&#34; 
    data-host=&#34;localhost&#34; 
    data-continuation-str=&#34;\&#34;
    data-filter-output=&#34;(out)&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;curl \
-k \
--data-binary @sampleBluecoat.log \
https://stroomp.strmdev00.org/stroom/datafeed \
-H&amp;#34;Feed:BlueCoat-Proxy-V1.0-EVENTS&amp;#34; \
-H&amp;#34;Environment:Development&amp;#34; \
-H&amp;#34;LogFileName:sampleBluecoat.log&amp;#34; \
-H&amp;#34;MyHost:\&amp;#34;somenode.strmdev00.org\&amp;#34;&amp;#34; \
-H&amp;#34;MyIPaddress:\&amp;#34;192.168.2.220 192.168.122.1\&amp;#34;&amp;#34; \
-H&amp;#34;System:Site http://log-sharing.dreamhosters.com/ Bluecoat Logs&amp;#34; \
-H&amp;#34;Version:V1.0&amp;#34;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;After Stroom&amp;rsquo;s Proxy aggregation has occurred, we will see that the new file posted via &lt;em&gt;curl&lt;/em&gt; has been loaded into Stroom as per&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-69.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-69.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-69.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-69.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Enable Processing - Configured Processors - New Posted Stream&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;and this new &lt;em&gt;Raw Event&lt;/em&gt; stream is automatically processed a few seconds later as per&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-70.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-70.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-70.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-70.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Enable Processing - Configured Processors - New Posted Stream Processed&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;We note that since we have used the same sample file again, the Stream sizes and record counts are the same.&lt;/p&gt;
&lt;p&gt;If we switch to the &lt;code&gt;Processors&lt;/code&gt; tab of the pipeline we see that the Tracker timestamp has changed and the number of Streams processed has increased.&lt;/p&gt;







  
  
  
  
  







  



&lt;div class=&#34;card rounded shadow-stroom p-2 td-post-card mb-4 mt-4&#34; style=&#34;width: fit-content;&#34;&gt;

  &lt;a title=&#34;images/HOWTOs/UI-FeedProcessing-71.png&#34; href=&#34;../../images/HOWTOs/UI-FeedProcessing-71.png&#34;&gt;
    &lt;figure style=&#34;margin-block-end: 0px&#34; &gt;
      
      &lt;img class=&#34;card-img-top&#34; src=&#34;../../images/HOWTOs/UI-FeedProcessing-71.png&#34; style=&#34;max-width: fit-content&#34; alt=&#34;images/HOWTOs/UI-FeedProcessing-71.png&#34;&gt;
      

      
      &lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
        &lt;hr style=&#34;border-top: 1px solid #ddd; margin-top: 0px; margin-bottom:4px;&#34;&gt;
        &lt;figcaption class=&#34;card-text&#34; style=&#34;font-size: smaller; text-align: center;&#34;&gt;Stroom UI Enable Processing - Configured Processors - New Posted Stream Processors&lt;/figcaption&gt;
      &lt;/div&gt;
      
    &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;


      </description>
    </item>
    
  </channel>
</rss>
